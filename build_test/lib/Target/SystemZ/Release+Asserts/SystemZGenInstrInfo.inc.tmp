/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Target Instruction Enum Values                                              *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace SystemZ {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    PROLOG_LABEL	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    KILL	= 5,
    EXTRACT_SUBREG	= 6,
    INSERT_SUBREG	= 7,
    IMPLICIT_DEF	= 8,
    SUBREG_TO_REG	= 9,
    COPY_TO_REGCLASS	= 10,
    DBG_VALUE	= 11,
    REG_SEQUENCE	= 12,
    COPY	= 13,
    BUNDLE	= 14,
    LIFETIME_START	= 15,
    LIFETIME_END	= 16,
    A	= 17,
    ADB	= 18,
    ADBR	= 19,
    ADJCALLSTACKDOWN	= 20,
    ADJCALLSTACKUP	= 21,
    ADJDYNALLOC	= 22,
    AEB	= 23,
    AEBR	= 24,
    AEXT128_64	= 25,
    AFI	= 26,
    AG	= 27,
    AGF	= 28,
    AGFI	= 29,
    AGFR	= 30,
    AGHI	= 31,
    AGR	= 32,
    AGSI	= 33,
    AH	= 34,
    AHI	= 35,
    AHY	= 36,
    AL	= 37,
    ALC	= 38,
    ALCG	= 39,
    ALCGR	= 40,
    ALCR	= 41,
    ALFI	= 42,
    ALG	= 43,
    ALGF	= 44,
    ALGFI	= 45,
    ALGFR	= 46,
    ALGR	= 47,
    ALR	= 48,
    ALY	= 49,
    AR	= 50,
    ASI	= 51,
    ATOMIC_CMP_SWAPW	= 52,
    ATOMIC_LOADW_AFI	= 53,
    ATOMIC_LOADW_AR	= 54,
    ATOMIC_LOADW_MAX	= 55,
    ATOMIC_LOADW_MIN	= 56,
    ATOMIC_LOADW_NILH	= 57,
    ATOMIC_LOADW_NILHi	= 58,
    ATOMIC_LOADW_NR	= 59,
    ATOMIC_LOADW_NRi	= 60,
    ATOMIC_LOADW_OILH	= 61,
    ATOMIC_LOADW_OR	= 62,
    ATOMIC_LOADW_SR	= 63,
    ATOMIC_LOADW_UMAX	= 64,
    ATOMIC_LOADW_UMIN	= 65,
    ATOMIC_LOADW_XILF	= 66,
    ATOMIC_LOADW_XR	= 67,
    ATOMIC_LOAD_AFI	= 68,
    ATOMIC_LOAD_AGFI	= 69,
    ATOMIC_LOAD_AGHI	= 70,
    ATOMIC_LOAD_AGR	= 71,
    ATOMIC_LOAD_AHI	= 72,
    ATOMIC_LOAD_AR	= 73,
    ATOMIC_LOAD_MAX_32	= 74,
    ATOMIC_LOAD_MAX_64	= 75,
    ATOMIC_LOAD_MIN_32	= 76,
    ATOMIC_LOAD_MIN_64	= 77,
    ATOMIC_LOAD_NGR	= 78,
    ATOMIC_LOAD_NGRi	= 79,
    ATOMIC_LOAD_NIHF	= 80,
    ATOMIC_LOAD_NIHFi	= 81,
    ATOMIC_LOAD_NIHH	= 82,
    ATOMIC_LOAD_NIHHi	= 83,
    ATOMIC_LOAD_NIHL	= 84,
    ATOMIC_LOAD_NIHLi	= 85,
    ATOMIC_LOAD_NILF	= 86,
    ATOMIC_LOAD_NILF32	= 87,
    ATOMIC_LOAD_NILF32i	= 88,
    ATOMIC_LOAD_NILFi	= 89,
    ATOMIC_LOAD_NILH	= 90,
    ATOMIC_LOAD_NILH32	= 91,
    ATOMIC_LOAD_NILH32i	= 92,
    ATOMIC_LOAD_NILHi	= 93,
    ATOMIC_LOAD_NILL	= 94,
    ATOMIC_LOAD_NILL32	= 95,
    ATOMIC_LOAD_NILL32i	= 96,
    ATOMIC_LOAD_NILLi	= 97,
    ATOMIC_LOAD_NR	= 98,
    ATOMIC_LOAD_NRi	= 99,
    ATOMIC_LOAD_OGR	= 100,
    ATOMIC_LOAD_OIHF	= 101,
    ATOMIC_LOAD_OIHH	= 102,
    ATOMIC_LOAD_OIHL	= 103,
    ATOMIC_LOAD_OILF	= 104,
    ATOMIC_LOAD_OILF32	= 105,
    ATOMIC_LOAD_OILH	= 106,
    ATOMIC_LOAD_OILH32	= 107,
    ATOMIC_LOAD_OILL	= 108,
    ATOMIC_LOAD_OILL32	= 109,
    ATOMIC_LOAD_OR	= 110,
    ATOMIC_LOAD_SGR	= 111,
    ATOMIC_LOAD_SR	= 112,
    ATOMIC_LOAD_UMAX_32	= 113,
    ATOMIC_LOAD_UMAX_64	= 114,
    ATOMIC_LOAD_UMIN_32	= 115,
    ATOMIC_LOAD_UMIN_64	= 116,
    ATOMIC_LOAD_XGR	= 117,
    ATOMIC_LOAD_XIHF	= 118,
    ATOMIC_LOAD_XILF	= 119,
    ATOMIC_LOAD_XILF32	= 120,
    ATOMIC_LOAD_XR	= 121,
    ATOMIC_SWAPW	= 122,
    ATOMIC_SWAP_32	= 123,
    ATOMIC_SWAP_64	= 124,
    AXBR	= 125,
    AY	= 126,
    AsmBASR	= 127,
    AsmBRAS	= 128,
    AsmBRASL	= 129,
    AsmBRC	= 130,
    AsmBRCL	= 131,
    AsmCGIJ	= 132,
    AsmCGRJ	= 133,
    AsmCIJ	= 134,
    AsmCRJ	= 135,
    AsmJE	= 136,
    AsmJEAltCGI	= 137,
    AsmJEAltCGR	= 138,
    AsmJEAltCI	= 139,
    AsmJEAltCR	= 140,
    AsmJECGI	= 141,
    AsmJECGR	= 142,
    AsmJECI	= 143,
    AsmJECR	= 144,
    AsmJEL	= 145,
    AsmJH	= 146,
    AsmJHAltCGI	= 147,
    AsmJHAltCGR	= 148,
    AsmJHAltCI	= 149,
    AsmJHAltCR	= 150,
    AsmJHCGI	= 151,
    AsmJHCGR	= 152,
    AsmJHCI	= 153,
    AsmJHCR	= 154,
    AsmJHE	= 155,
    AsmJHEAltCGI	= 156,
    AsmJHEAltCGR	= 157,
    AsmJHEAltCI	= 158,
    AsmJHEAltCR	= 159,
    AsmJHECGI	= 160,
    AsmJHECGR	= 161,
    AsmJHECI	= 162,
    AsmJHECR	= 163,
    AsmJHEL	= 164,
    AsmJHL	= 165,
    AsmJL	= 166,
    AsmJLAltCGI	= 167,
    AsmJLAltCGR	= 168,
    AsmJLAltCI	= 169,
    AsmJLAltCR	= 170,
    AsmJLCGI	= 171,
    AsmJLCGR	= 172,
    AsmJLCI	= 173,
    AsmJLCR	= 174,
    AsmJLE	= 175,
    AsmJLEAltCGI	= 176,
    AsmJLEAltCGR	= 177,
    AsmJLEAltCI	= 178,
    AsmJLEAltCR	= 179,
    AsmJLECGI	= 180,
    AsmJLECGR	= 181,
    AsmJLECI	= 182,
    AsmJLECR	= 183,
    AsmJLEL	= 184,
    AsmJLH	= 185,
    AsmJLHAltCGI	= 186,
    AsmJLHAltCGR	= 187,
    AsmJLHAltCI	= 188,
    AsmJLHAltCR	= 189,
    AsmJLHCGI	= 190,
    AsmJLHCGR	= 191,
    AsmJLHCI	= 192,
    AsmJLHCR	= 193,
    AsmJLHL	= 194,
    AsmJLL	= 195,
    AsmJNE	= 196,
    AsmJNEL	= 197,
    AsmJNH	= 198,
    AsmJNHE	= 199,
    AsmJNHEL	= 200,
    AsmJNHL	= 201,
    AsmJNL	= 202,
    AsmJNLE	= 203,
    AsmJNLEL	= 204,
    AsmJNLH	= 205,
    AsmJNLHL	= 206,
    AsmJNLL	= 207,
    AsmJNO	= 208,
    AsmJNOL	= 209,
    AsmJO	= 210,
    AsmJOL	= 211,
    BASR	= 212,
    BR	= 213,
    BRAS	= 214,
    BRASL	= 215,
    BRC	= 216,
    BRCL	= 217,
    C	= 218,
    CDB	= 219,
    CDBR	= 220,
    CDFBR	= 221,
    CDGBR	= 222,
    CEB	= 223,
    CEBR	= 224,
    CEFBR	= 225,
    CEGBR	= 226,
    CFDBR	= 227,
    CFEBR	= 228,
    CFI	= 229,
    CFXBR	= 230,
    CG	= 231,
    CGDBR	= 232,
    CGEBR	= 233,
    CGF	= 234,
    CGFI	= 235,
    CGFR	= 236,
    CGFRL	= 237,
    CGH	= 238,
    CGHI	= 239,
    CGHRL	= 240,
    CGHSI	= 241,
    CGIJ	= 242,
    CGR	= 243,
    CGRJ	= 244,
    CGRL	= 245,
    CGXBR	= 246,
    CH	= 247,
    CHHSI	= 248,
    CHI	= 249,
    CHRL	= 250,
    CHSI	= 251,
    CHY	= 252,
    CIJ	= 253,
    CL	= 254,
    CLFHSI	= 255,
    CLFI	= 256,
    CLG	= 257,
    CLGF	= 258,
    CLGFI	= 259,
    CLGFR	= 260,
    CLGFRL	= 261,
    CLGHRL	= 262,
    CLGHSI	= 263,
    CLGR	= 264,
    CLGRL	= 265,
    CLHHSI	= 266,
    CLHRL	= 267,
    CLI	= 268,
    CLIY	= 269,
    CLR	= 270,
    CLRL	= 271,
    CLY	= 272,
    CPSDRdd	= 273,
    CPSDRds	= 274,
    CPSDRsd	= 275,
    CPSDRss	= 276,
    CR	= 277,
    CRJ	= 278,
    CRL	= 279,
    CS	= 280,
    CSG	= 281,
    CSY	= 282,
    CXBR	= 283,
    CXFBR	= 284,
    CXGBR	= 285,
    CY	= 286,
    DDB	= 287,
    DDBR	= 288,
    DEB	= 289,
    DEBR	= 290,
    DL	= 291,
    DLG	= 292,
    DLGR	= 293,
    DLR	= 294,
    DSG	= 295,
    DSGF	= 296,
    DSGFR	= 297,
    DSGR	= 298,
    DXBR	= 299,
    EAR	= 300,
    FIDBR	= 301,
    FIEBR	= 302,
    FIXBR	= 303,
    FLOGR	= 304,
    IC	= 305,
    IC32	= 306,
    IC32Y	= 307,
    ICY	= 308,
    IIHF	= 309,
    IIHH	= 310,
    IIHL	= 311,
    IILF	= 312,
    IILF32	= 313,
    IILH	= 314,
    IILH32	= 315,
    IILL	= 316,
    IILL32	= 317,
    J	= 318,
    JG	= 319,
    L	= 320,
    L128	= 321,
    LA	= 322,
    LARL	= 323,
    LAY	= 324,
    LB	= 325,
    LBR	= 326,
    LCDBR	= 327,
    LCEBR	= 328,
    LCGFR	= 329,
    LCGR	= 330,
    LCR	= 331,
    LCXBR	= 332,
    LD	= 333,
    LDEB	= 334,
    LDEBR	= 335,
    LDGR	= 336,
    LDR	= 337,
    LDXBR	= 338,
    LDY	= 339,
    LE	= 340,
    LEDBR	= 341,
    LER	= 342,
    LEXBR	= 343,
    LEY	= 344,
    LG	= 345,
    LGB	= 346,
    LGBR	= 347,
    LGDR	= 348,
    LGF	= 349,
    LGFI	= 350,
    LGFR	= 351,
    LGFRL	= 352,
    LGH	= 353,
    LGHI	= 354,
    LGHR	= 355,
    LGHRL	= 356,
    LGR	= 357,
    LGRL	= 358,
    LH	= 359,
    LHI	= 360,
    LHR	= 361,
    LHRL	= 362,
    LHY	= 363,
    LLC	= 364,
    LLCR	= 365,
    LLGC	= 366,
    LLGCR	= 367,
    LLGF	= 368,
    LLGFR	= 369,
    LLGFRL	= 370,
    LLGH	= 371,
    LLGHR	= 372,
    LLGHRL	= 373,
    LLH	= 374,
    LLHR	= 375,
    LLHRL	= 376,
    LLIHF	= 377,
    LLIHH	= 378,
    LLIHL	= 379,
    LLILF	= 380,
    LLILH	= 381,
    LLILL	= 382,
    LMG	= 383,
    LNDBR	= 384,
    LNEBR	= 385,
    LNXBR	= 386,
    LPDBR	= 387,
    LPEBR	= 388,
    LPXBR	= 389,
    LR	= 390,
    LRL	= 391,
    LRV	= 392,
    LRVG	= 393,
    LRVGR	= 394,
    LRVR	= 395,
    LX	= 396,
    LXDB	= 397,
    LXDBR	= 398,
    LXEB	= 399,
    LXEBR	= 400,
    LXR	= 401,
    LY	= 402,
    LZDR	= 403,
    LZER	= 404,
    LZXR	= 405,
    MADB	= 406,
    MADBR	= 407,
    MAEB	= 408,
    MAEBR	= 409,
    MDB	= 410,
    MDBR	= 411,
    MDEB	= 412,
    MDEBR	= 413,
    MEEB	= 414,
    MEEBR	= 415,
    MGHI	= 416,
    MH	= 417,
    MHI	= 418,
    MHY	= 419,
    MLG	= 420,
    MLGR	= 421,
    MS	= 422,
    MSDB	= 423,
    MSDBR	= 424,
    MSEB	= 425,
    MSEBR	= 426,
    MSFI	= 427,
    MSG	= 428,
    MSGF	= 429,
    MSGFI	= 430,
    MSGFR	= 431,
    MSGR	= 432,
    MSR	= 433,
    MSY	= 434,
    MVGHI	= 435,
    MVHHI	= 436,
    MVHI	= 437,
    MVI	= 438,
    MVIY	= 439,
    MXBR	= 440,
    MXDB	= 441,
    MXDBR	= 442,
    N	= 443,
    NG	= 444,
    NGR	= 445,
    NI	= 446,
    NIHF	= 447,
    NIHH	= 448,
    NIHL	= 449,
    NILF	= 450,
    NILF32	= 451,
    NILH	= 452,
    NILH32	= 453,
    NILL	= 454,
    NILL32	= 455,
    NIY	= 456,
    NR	= 457,
    NY	= 458,
    O	= 459,
    OG	= 460,
    OGR	= 461,
    OI	= 462,
    OIHF	= 463,
    OIHH	= 464,
    OIHL	= 465,
    OILF	= 466,
    OILF32	= 467,
    OILH	= 468,
    OILH32	= 469,
    OILL	= 470,
    OILL32	= 471,
    OIY	= 472,
    OR	= 473,
    OY	= 474,
    RET	= 475,
    RISBG	= 476,
    RISBG32	= 477,
    RLL	= 478,
    RLLG	= 479,
    S	= 480,
    SDB	= 481,
    SDBR	= 482,
    SEB	= 483,
    SEBR	= 484,
    SG	= 485,
    SGF	= 486,
    SGFR	= 487,
    SGR	= 488,
    SH	= 489,
    SHY	= 490,
    SL	= 491,
    SLB	= 492,
    SLBG	= 493,
    SLBR	= 494,
    SLFI	= 495,
    SLG	= 496,
    SLGBR	= 497,
    SLGF	= 498,
    SLGFI	= 499,
    SLGFR	= 500,
    SLGR	= 501,
    SLL	= 502,
    SLLG	= 503,
    SLR	= 504,
    SLY	= 505,
    SQDB	= 506,
    SQDBR	= 507,
    SQEB	= 508,
    SQEBR	= 509,
    SQXBR	= 510,
    SR	= 511,
    SRA	= 512,
    SRAG	= 513,
    SRL	= 514,
    SRLG	= 515,
    ST	= 516,
    ST128	= 517,
    ST32	= 518,
    ST32Y	= 519,
    STC	= 520,
    STC32	= 521,
    STC32Y	= 522,
    STCY	= 523,
    STD	= 524,
    STDY	= 525,
    STE	= 526,
    STEY	= 527,
    STG	= 528,
    STGRL	= 529,
    STH	= 530,
    STH32	= 531,
    STH32Y	= 532,
    STHRL	= 533,
    STHRL32	= 534,
    STHY	= 535,
    STMG	= 536,
    STRL	= 537,
    STRL32	= 538,
    STRV	= 539,
    STRVG	= 540,
    STX	= 541,
    STY	= 542,
    SXBR	= 543,
    SY	= 544,
    Select32	= 545,
    Select64	= 546,
    SelectF128	= 547,
    SelectF32	= 548,
    SelectF64	= 549,
    X	= 550,
    XG	= 551,
    XGR	= 552,
    XI	= 553,
    XIHF	= 554,
    XILF	= 555,
    XILF32	= 556,
    XIY	= 557,
    XR	= 558,
    XY	= 559,
    ZEXT128_32	= 560,
    ZEXT128_64	= 561,
    INSTRUCTION_LIST_END = 562
  };
}
} // End llvm namespace 
#endif // GET_INSTRINFO_ENUM

/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Target Instruction Descriptors                                              *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const uint16_t ImplicitList1[] = { SystemZ::CC, 0 };
static const uint16_t ImplicitList2[] = { SystemZ::R0D, SystemZ::R1D, SystemZ::R2D, SystemZ::R3D, SystemZ::R4D, SystemZ::R5D, SystemZ::R14D, SystemZ::F0D, SystemZ::F1D, SystemZ::F2D, SystemZ::F3D, SystemZ::F4D, SystemZ::F5D, SystemZ::F6D, SystemZ::F7D, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo10[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { SystemZ::GR128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { SystemZ::GR128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { SystemZ::GR128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { SystemZ::GR128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { SystemZ::GR128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::ADDR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { SystemZ::ADDR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::FP64BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { SystemZ::GR128BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SystemZ::GR32BitRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };

extern const MCInstrDesc SystemZInsts[] = {
  { 0,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #1 = INLINEASM
  { 2,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #2 = PROLOG_LABEL
  { 3,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #3 = EH_LABEL
  { 4,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #4 = GC_LABEL
  { 5,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #5 = KILL
  { 6,	3,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo3 },  // Inst #6 = EXTRACT_SUBREG
  { 7,	4,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo4 },  // Inst #7 = INSERT_SUBREG
  { 8,	1,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #8 = IMPLICIT_DEF
  { 9,	4,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo6 },  // Inst #9 = SUBREG_TO_REG
  { 10,	3,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo3 },  // Inst #10 = COPY_TO_REGCLASS
  { 11,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #11 = DBG_VALUE
  { 12,	1,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #12 = REG_SEQUENCE
  { 13,	2,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo7 },  // Inst #13 = COPY
  { 14,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #14 = BUNDLE
  { 15,	1,	0,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #15 = LIFETIME_START
  { 16,	1,	0,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #16 = LIFETIME_END
  { 17,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #17 = A
  { 18,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, ImplicitList1, OperandInfo9 },  // Inst #18 = ADB
  { 19,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList1, OperandInfo10 },  // Inst #19 = ADBR
  { 20,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #20 = ADJCALLSTACKDOWN
  { 21,	2,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #21 = ADJCALLSTACKUP
  { 22,	4,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #22 = ADJDYNALLOC
  { 23,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, ImplicitList1, OperandInfo13 },  // Inst #23 = AEB
  { 24,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList1, OperandInfo14 },  // Inst #24 = AEBR
  { 25,	2,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #25 = AEXT128_64
  { 26,	3,	1,	0,	6,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #26 = AFI
  { 27,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #27 = AG
  { 28,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #28 = AGF
  { 29,	3,	1,	0,	6,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #29 = AGFI
  { 30,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo19 },  // Inst #30 = AGFR
  { 31,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #31 = AGHI
  { 32,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList1, OperandInfo20 },  // Inst #32 = AGR
  { 33,	3,	0,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #33 = AGSI
  { 34,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #34 = AH
  { 35,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #35 = AHI
  { 36,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #36 = AHY
  { 37,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #37 = AL
  { 38,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, ImplicitList1, ImplicitList1, OperandInfo8 },  // Inst #38 = ALC
  { 39,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, ImplicitList1, ImplicitList1, OperandInfo17 },  // Inst #39 = ALCG
  { 40,	3,	1,	0,	4,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo20 },  // Inst #40 = ALCGR
  { 41,	3,	1,	0,	4,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo22 },  // Inst #41 = ALCR
  { 42,	3,	1,	0,	6,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #42 = ALFI
  { 43,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #43 = ALG
  { 44,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #44 = ALGF
  { 45,	3,	1,	0,	6,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #45 = ALGFI
  { 46,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo19 },  // Inst #46 = ALGFR
  { 47,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList1, OperandInfo20 },  // Inst #47 = ALGR
  { 48,	3,	1,	0,	2,	0|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList1, OperandInfo22 },  // Inst #48 = ALR
  { 49,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #49 = ALY
  { 50,	3,	1,	0,	2,	0|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList1, OperandInfo22 },  // Inst #50 = AR
  { 51,	3,	0,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #51 = ASI
  { 52,	8,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList1, OperandInfo23 },  // Inst #52 = ATOMIC_CMP_SWAPW
  { 53,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo24 },  // Inst #53 = ATOMIC_LOADW_AFI
  { 54,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #54 = ATOMIC_LOADW_AR
  { 55,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #55 = ATOMIC_LOADW_MAX
  { 56,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #56 = ATOMIC_LOADW_MIN
  { 57,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo24 },  // Inst #57 = ATOMIC_LOADW_NILH
  { 58,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo24 },  // Inst #58 = ATOMIC_LOADW_NILHi
  { 59,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #59 = ATOMIC_LOADW_NR
  { 60,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #60 = ATOMIC_LOADW_NRi
  { 61,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo24 },  // Inst #61 = ATOMIC_LOADW_OILH
  { 62,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #62 = ATOMIC_LOADW_OR
  { 63,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #63 = ATOMIC_LOADW_SR
  { 64,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #64 = ATOMIC_LOADW_UMAX
  { 65,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #65 = ATOMIC_LOADW_UMIN
  { 66,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo24 },  // Inst #66 = ATOMIC_LOADW_XILF
  { 67,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #67 = ATOMIC_LOADW_XR
  { 68,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo26 },  // Inst #68 = ATOMIC_LOAD_AFI
  { 69,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #69 = ATOMIC_LOAD_AGFI
  { 70,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #70 = ATOMIC_LOAD_AGHI
  { 71,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo28 },  // Inst #71 = ATOMIC_LOAD_AGR
  { 72,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo26 },  // Inst #72 = ATOMIC_LOAD_AHI
  { 73,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo29 },  // Inst #73 = ATOMIC_LOAD_AR
  { 74,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo29 },  // Inst #74 = ATOMIC_LOAD_MAX_32
  { 75,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo28 },  // Inst #75 = ATOMIC_LOAD_MAX_64
  { 76,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo29 },  // Inst #76 = ATOMIC_LOAD_MIN_32
  { 77,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo28 },  // Inst #77 = ATOMIC_LOAD_MIN_64
  { 78,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo28 },  // Inst #78 = ATOMIC_LOAD_NGR
  { 79,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo28 },  // Inst #79 = ATOMIC_LOAD_NGRi
  { 80,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #80 = ATOMIC_LOAD_NIHF
  { 81,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #81 = ATOMIC_LOAD_NIHFi
  { 82,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #82 = ATOMIC_LOAD_NIHH
  { 83,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #83 = ATOMIC_LOAD_NIHHi
  { 84,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #84 = ATOMIC_LOAD_NIHL
  { 85,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #85 = ATOMIC_LOAD_NIHLi
  { 86,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #86 = ATOMIC_LOAD_NILF
  { 87,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo26 },  // Inst #87 = ATOMIC_LOAD_NILF32
  { 88,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo26 },  // Inst #88 = ATOMIC_LOAD_NILF32i
  { 89,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #89 = ATOMIC_LOAD_NILFi
  { 90,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #90 = ATOMIC_LOAD_NILH
  { 91,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo26 },  // Inst #91 = ATOMIC_LOAD_NILH32
  { 92,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo26 },  // Inst #92 = ATOMIC_LOAD_NILH32i
  { 93,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #93 = ATOMIC_LOAD_NILHi
  { 94,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #94 = ATOMIC_LOAD_NILL
  { 95,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo26 },  // Inst #95 = ATOMIC_LOAD_NILL32
  { 96,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo26 },  // Inst #96 = ATOMIC_LOAD_NILL32i
  { 97,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #97 = ATOMIC_LOAD_NILLi
  { 98,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo29 },  // Inst #98 = ATOMIC_LOAD_NR
  { 99,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo29 },  // Inst #99 = ATOMIC_LOAD_NRi
  { 100,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo28 },  // Inst #100 = ATOMIC_LOAD_OGR
  { 101,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #101 = ATOMIC_LOAD_OIHF
  { 102,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #102 = ATOMIC_LOAD_OIHH
  { 103,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #103 = ATOMIC_LOAD_OIHL
  { 104,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #104 = ATOMIC_LOAD_OILF
  { 105,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo26 },  // Inst #105 = ATOMIC_LOAD_OILF32
  { 106,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #106 = ATOMIC_LOAD_OILH
  { 107,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo26 },  // Inst #107 = ATOMIC_LOAD_OILH32
  { 108,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #108 = ATOMIC_LOAD_OILL
  { 109,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo26 },  // Inst #109 = ATOMIC_LOAD_OILL32
  { 110,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo29 },  // Inst #110 = ATOMIC_LOAD_OR
  { 111,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo28 },  // Inst #111 = ATOMIC_LOAD_SGR
  { 112,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo29 },  // Inst #112 = ATOMIC_LOAD_SR
  { 113,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo29 },  // Inst #113 = ATOMIC_LOAD_UMAX_32
  { 114,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo28 },  // Inst #114 = ATOMIC_LOAD_UMAX_64
  { 115,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo29 },  // Inst #115 = ATOMIC_LOAD_UMIN_32
  { 116,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo28 },  // Inst #116 = ATOMIC_LOAD_UMIN_64
  { 117,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo28 },  // Inst #117 = ATOMIC_LOAD_XGR
  { 118,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #118 = ATOMIC_LOAD_XIHF
  { 119,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo27 },  // Inst #119 = ATOMIC_LOAD_XILF
  { 120,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo26 },  // Inst #120 = ATOMIC_LOAD_XILF32
  { 121,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo29 },  // Inst #121 = ATOMIC_LOAD_XR
  { 122,	7,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo25 },  // Inst #122 = ATOMIC_SWAPW
  { 123,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo29 },  // Inst #123 = ATOMIC_SWAP_32
  { 124,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x4ULL, NULL, ImplicitList1, OperandInfo28 },  // Inst #124 = ATOMIC_SWAP_64
  { 125,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList1, OperandInfo30 },  // Inst #125 = AXBR
  { 126,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #126 = AY
  { 127,	2,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo31 },  // Inst #127 = AsmBASR
  { 128,	2,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #128 = AsmBRAS
  { 129,	2,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #129 = AsmBRASL
  { 130,	2,	0,	0,	4,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, NULL, OperandInfo7 },  // Inst #130 = AsmBRC
  { 131,	2,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, NULL, OperandInfo7 },  // Inst #131 = AsmBRCL
  { 132,	4,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList1, OperandInfo33 },  // Inst #132 = AsmCGIJ
  { 133,	4,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList1, OperandInfo34 },  // Inst #133 = AsmCGRJ
  { 134,	4,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList1, OperandInfo35 },  // Inst #134 = AsmCIJ
  { 135,	4,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList1, OperandInfo36 },  // Inst #135 = AsmCRJ
  { 136,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #136 = AsmJE
  { 137,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo37 },  // Inst #137 = AsmJEAltCGI
  { 138,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #138 = AsmJEAltCGR
  { 139,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #139 = AsmJEAltCI
  { 140,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo40 },  // Inst #140 = AsmJEAltCR
  { 141,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo37 },  // Inst #141 = AsmJECGI
  { 142,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #142 = AsmJECGR
  { 143,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #143 = AsmJECI
  { 144,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo40 },  // Inst #144 = AsmJECR
  { 145,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #145 = AsmJEL
  { 146,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #146 = AsmJH
  { 147,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo37 },  // Inst #147 = AsmJHAltCGI
  { 148,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #148 = AsmJHAltCGR
  { 149,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #149 = AsmJHAltCI
  { 150,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo40 },  // Inst #150 = AsmJHAltCR
  { 151,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo37 },  // Inst #151 = AsmJHCGI
  { 152,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #152 = AsmJHCGR
  { 153,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #153 = AsmJHCI
  { 154,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo40 },  // Inst #154 = AsmJHCR
  { 155,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #155 = AsmJHE
  { 156,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo37 },  // Inst #156 = AsmJHEAltCGI
  { 157,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #157 = AsmJHEAltCGR
  { 158,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #158 = AsmJHEAltCI
  { 159,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo40 },  // Inst #159 = AsmJHEAltCR
  { 160,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo37 },  // Inst #160 = AsmJHECGI
  { 161,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #161 = AsmJHECGR
  { 162,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #162 = AsmJHECI
  { 163,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo40 },  // Inst #163 = AsmJHECR
  { 164,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #164 = AsmJHEL
  { 165,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #165 = AsmJHL
  { 166,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #166 = AsmJL
  { 167,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo37 },  // Inst #167 = AsmJLAltCGI
  { 168,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #168 = AsmJLAltCGR
  { 169,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #169 = AsmJLAltCI
  { 170,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo40 },  // Inst #170 = AsmJLAltCR
  { 171,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo37 },  // Inst #171 = AsmJLCGI
  { 172,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #172 = AsmJLCGR
  { 173,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #173 = AsmJLCI
  { 174,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo40 },  // Inst #174 = AsmJLCR
  { 175,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #175 = AsmJLE
  { 176,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo37 },  // Inst #176 = AsmJLEAltCGI
  { 177,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #177 = AsmJLEAltCGR
  { 178,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #178 = AsmJLEAltCI
  { 179,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo40 },  // Inst #179 = AsmJLEAltCR
  { 180,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo37 },  // Inst #180 = AsmJLECGI
  { 181,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #181 = AsmJLECGR
  { 182,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #182 = AsmJLECI
  { 183,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo40 },  // Inst #183 = AsmJLECR
  { 184,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #184 = AsmJLEL
  { 185,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #185 = AsmJLH
  { 186,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo37 },  // Inst #186 = AsmJLHAltCGI
  { 187,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #187 = AsmJLHAltCGR
  { 188,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #188 = AsmJLHAltCI
  { 189,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo40 },  // Inst #189 = AsmJLHAltCR
  { 190,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo37 },  // Inst #190 = AsmJLHCGI
  { 191,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #191 = AsmJLHCGR
  { 192,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #192 = AsmJLHCI
  { 193,	3,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo40 },  // Inst #193 = AsmJLHCR
  { 194,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #194 = AsmJLHL
  { 195,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #195 = AsmJLL
  { 196,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #196 = AsmJNE
  { 197,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #197 = AsmJNEL
  { 198,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #198 = AsmJNH
  { 199,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #199 = AsmJNHE
  { 200,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #200 = AsmJNHEL
  { 201,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #201 = AsmJNHL
  { 202,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #202 = AsmJNL
  { 203,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #203 = AsmJNLE
  { 204,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #204 = AsmJNLEL
  { 205,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #205 = AsmJNLH
  { 206,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #206 = AsmJNLHL
  { 207,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #207 = AsmJNLL
  { 208,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #208 = AsmJNO
  { 209,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #209 = AsmJNOL
  { 210,	1,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #210 = AsmJO
  { 211,	1,	0,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #211 = AsmJOL
  { 212,	1,	0,	0,	2,	0|(1<<MCID::Call)|(1<<MCID::Variadic), 0x0ULL, NULL, ImplicitList2, OperandInfo41 },  // Inst #212 = BASR
  { 213,	1,	0,	0,	2,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #213 = BR
  { 214,	1,	0,	0,	4,	0|(1<<MCID::Call)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList2, OperandInfo5 },  // Inst #214 = BRAS
  { 215,	1,	0,	0,	6,	0|(1<<MCID::Call)|(1<<MCID::Variadic), 0x0ULL, NULL, ImplicitList2, OperandInfo5 },  // Inst #215 = BRASL
  { 216,	2,	0,	0,	4,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, NULL, OperandInfo7 },  // Inst #216 = BRC
  { 217,	2,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, NULL, OperandInfo7 },  // Inst #217 = BRCL
  { 218,	4,	0,	0,	4,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, ImplicitList1, OperandInfo42 },  // Inst #218 = C
  { 219,	4,	0,	0,	6,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #219 = CDB
  { 220,	2,	0,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo44 },  // Inst #220 = CDBR
  { 221,	2,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #221 = CDFBR
  { 222,	2,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo46 },  // Inst #222 = CDGBR
  { 223,	4,	0,	0,	6,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #223 = CEB
  { 224,	2,	0,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo48 },  // Inst #224 = CEBR
  { 225,	2,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo49 },  // Inst #225 = CEFBR
  { 226,	2,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo50 },  // Inst #226 = CEGBR
  { 227,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo51 },  // Inst #227 = CFDBR
  { 228,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo52 },  // Inst #228 = CFEBR
  { 229,	2,	0,	0,	6,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo53 },  // Inst #229 = CFI
  { 230,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo54 },  // Inst #230 = CFXBR
  { 231,	4,	0,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo12 },  // Inst #231 = CG
  { 232,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo55 },  // Inst #232 = CGDBR
  { 233,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo56 },  // Inst #233 = CGEBR
  { 234,	4,	0,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo12 },  // Inst #234 = CGF
  { 235,	2,	0,	0,	6,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo32 },  // Inst #235 = CGFI
  { 236,	2,	0,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo57 },  // Inst #236 = CGFR
  { 237,	2,	0,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, ImplicitList1, OperandInfo32 },  // Inst #237 = CGFRL
  { 238,	4,	0,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo12 },  // Inst #238 = CGH
  { 239,	2,	0,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo32 },  // Inst #239 = CGHI
  { 240,	2,	0,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, ImplicitList1, OperandInfo32 },  // Inst #240 = CGHRL
  { 241,	3,	0,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #241 = CGHSI
  { 242,	4,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList1, OperandInfo33 },  // Inst #242 = CGIJ
  { 243,	2,	0,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo58 },  // Inst #243 = CGR
  { 244,	4,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList1, OperandInfo34 },  // Inst #244 = CGRJ
  { 245,	2,	0,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, ImplicitList1, OperandInfo32 },  // Inst #245 = CGRL
  { 246,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo59 },  // Inst #246 = CGXBR
  { 247,	4,	0,	0,	4,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, ImplicitList1, OperandInfo42 },  // Inst #247 = CH
  { 248,	3,	0,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #248 = CHHSI
  { 249,	2,	0,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo53 },  // Inst #249 = CHI
  { 250,	2,	0,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, ImplicitList1, OperandInfo53 },  // Inst #250 = CHRL
  { 251,	3,	0,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #251 = CHSI
  { 252,	4,	0,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo42 },  // Inst #252 = CHY
  { 253,	4,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList1, OperandInfo35 },  // Inst #253 = CIJ
  { 254,	4,	0,	0,	4,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, ImplicitList1, OperandInfo42 },  // Inst #254 = CL
  { 255,	3,	0,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #255 = CLFHSI
  { 256,	2,	0,	0,	6,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo53 },  // Inst #256 = CLFI
  { 257,	4,	0,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo12 },  // Inst #257 = CLG
  { 258,	4,	0,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo12 },  // Inst #258 = CLGF
  { 259,	2,	0,	0,	6,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo32 },  // Inst #259 = CLGFI
  { 260,	2,	0,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo57 },  // Inst #260 = CLGFR
  { 261,	2,	0,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, ImplicitList1, OperandInfo32 },  // Inst #261 = CLGFRL
  { 262,	2,	0,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, ImplicitList1, OperandInfo32 },  // Inst #262 = CLGHRL
  { 263,	3,	0,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #263 = CLGHSI
  { 264,	2,	0,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo58 },  // Inst #264 = CLGR
  { 265,	2,	0,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, ImplicitList1, OperandInfo32 },  // Inst #265 = CLGRL
  { 266,	3,	0,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #266 = CLHHSI
  { 267,	2,	0,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, ImplicitList1, OperandInfo53 },  // Inst #267 = CLHRL
  { 268,	3,	0,	0,	4,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #268 = CLI
  { 269,	3,	0,	0,	6,	0|(1<<MCID::MayLoad), 0x4ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #269 = CLIY
  { 270,	2,	0,	0,	2,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo60 },  // Inst #270 = CLR
  { 271,	2,	0,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, ImplicitList1, OperandInfo53 },  // Inst #271 = CLRL
  { 272,	4,	0,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo42 },  // Inst #272 = CLY
  { 273,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo61 },  // Inst #273 = CPSDRdd
  { 274,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo62 },  // Inst #274 = CPSDRds
  { 275,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo63 },  // Inst #275 = CPSDRsd
  { 276,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo64 },  // Inst #276 = CPSDRss
  { 277,	2,	0,	0,	2,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo60 },  // Inst #277 = CR
  { 278,	4,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList1, OperandInfo36 },  // Inst #278 = CRJ
  { 279,	2,	0,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, ImplicitList1, OperandInfo53 },  // Inst #279 = CRL
  { 280,	5,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x0ULL, NULL, ImplicitList1, OperandInfo65 },  // Inst #280 = CS
  { 281,	5,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4ULL, NULL, ImplicitList1, OperandInfo66 },  // Inst #281 = CSG
  { 282,	5,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4ULL, NULL, ImplicitList1, OperandInfo65 },  // Inst #282 = CSY
  { 283,	2,	0,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo67 },  // Inst #283 = CXBR
  { 284,	2,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo68 },  // Inst #284 = CXFBR
  { 285,	2,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo69 },  // Inst #285 = CXGBR
  { 286,	4,	0,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo42 },  // Inst #286 = CY
  { 287,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, NULL, OperandInfo9 },  // Inst #287 = DDB
  { 288,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo10 },  // Inst #288 = DDBR
  { 289,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, NULL, OperandInfo13 },  // Inst #289 = DEB
  { 290,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #290 = DEBR
  { 291,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, NULL, OperandInfo70 },  // Inst #291 = DL
  { 292,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, NULL, OperandInfo70 },  // Inst #292 = DLG
  { 293,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo71 },  // Inst #293 = DLGR
  { 294,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo72 },  // Inst #294 = DLR
  { 295,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, NULL, OperandInfo70 },  // Inst #295 = DSG
  { 296,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, NULL, OperandInfo70 },  // Inst #296 = DSGF
  { 297,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo72 },  // Inst #297 = DSGFR
  { 298,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo71 },  // Inst #298 = DSGR
  { 299,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo30 },  // Inst #299 = DXBR
  { 300,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo53 },  // Inst #300 = EAR
  { 301,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo73 },  // Inst #301 = FIDBR
  { 302,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo74 },  // Inst #302 = FIEBR
  { 303,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo75 },  // Inst #303 = FIXBR
  { 304,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList1, OperandInfo15 },  // Inst #304 = FLOGR
  { 305,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, NULL, OperandInfo17 },  // Inst #305 = IC
  { 306,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, NULL, OperandInfo8 },  // Inst #306 = IC32
  { 307,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, NULL, OperandInfo8 },  // Inst #307 = IC32Y
  { 308,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, NULL, OperandInfo17 },  // Inst #308 = ICY
  { 309,	3,	1,	0,	6,	0, 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #309 = IIHF
  { 310,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #310 = IIHH
  { 311,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #311 = IIHL
  { 312,	3,	1,	0,	6,	0, 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #312 = IILF
  { 313,	2,	1,	0,	6,	0, 0x0ULL, NULL, NULL, OperandInfo53 },  // Inst #313 = IILF32
  { 314,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #314 = IILH
  { 315,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #315 = IILH32
  { 316,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #316 = IILL
  { 317,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #317 = IILL32
  { 318,	1,	0,	0,	4,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #318 = J
  { 319,	1,	0,	0,	6,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #319 = JG
  { 320,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x9ULL, NULL, NULL, OperandInfo42 },  // Inst #320 = L
  { 321,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x1dULL, NULL, NULL, OperandInfo76 },  // Inst #321 = L128
  { 322,	4,	1,	0,	4,	0, 0x8ULL, NULL, NULL, OperandInfo12 },  // Inst #322 = LA
  { 323,	2,	1,	0,	6,	0, 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #323 = LARL
  { 324,	4,	1,	0,	6,	0, 0xcULL, NULL, NULL, OperandInfo12 },  // Inst #324 = LAY
  { 325,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, NULL, OperandInfo42 },  // Inst #325 = LB
  { 326,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo60 },  // Inst #326 = LBR
  { 327,	2,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo44 },  // Inst #327 = LCDBR
  { 328,	2,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo48 },  // Inst #328 = LCEBR
  { 329,	2,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo57 },  // Inst #329 = LCGFR
  { 330,	2,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo58 },  // Inst #330 = LCGR
  { 331,	2,	1,	0,	2,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo60 },  // Inst #331 = LCR
  { 332,	2,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo67 },  // Inst #332 = LCXBR
  { 333,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x9ULL, NULL, NULL, OperandInfo43 },  // Inst #333 = LD
  { 334,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, NULL, OperandInfo43 },  // Inst #334 = LDEB
  { 335,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo77 },  // Inst #335 = LDEBR
  { 336,	2,	1,	0,	4,	0|(1<<MCID::Bitcast), 0x0ULL, NULL, NULL, OperandInfo46 },  // Inst #336 = LDGR
  { 337,	2,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo44 },  // Inst #337 = LDR
  { 338,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo67 },  // Inst #338 = LDXBR
  { 339,	4,	1,	0,	6,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0xdULL, NULL, NULL, OperandInfo43 },  // Inst #339 = LDY
  { 340,	4,	1,	0,	4,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x9ULL, NULL, NULL, OperandInfo47 },  // Inst #340 = LE
  { 341,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo78 },  // Inst #341 = LEDBR
  { 342,	2,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo48 },  // Inst #342 = LER
  { 343,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo67 },  // Inst #343 = LEXBR
  { 344,	4,	1,	0,	6,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0xdULL, NULL, NULL, OperandInfo47 },  // Inst #344 = LEY
  { 345,	4,	1,	0,	6,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0xdULL, NULL, NULL, OperandInfo12 },  // Inst #345 = LG
  { 346,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, NULL, OperandInfo12 },  // Inst #346 = LGB
  { 347,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo58 },  // Inst #347 = LGBR
  { 348,	2,	1,	0,	4,	0|(1<<MCID::Bitcast), 0x0ULL, NULL, NULL, OperandInfo79 },  // Inst #348 = LGDR
  { 349,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, NULL, OperandInfo12 },  // Inst #349 = LGF
  { 350,	2,	1,	0,	6,	0|(1<<MCID::MoveImm)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #350 = LGFI
  { 351,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo57 },  // Inst #351 = LGFR
  { 352,	2,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #352 = LGFRL
  { 353,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, NULL, OperandInfo12 },  // Inst #353 = LGH
  { 354,	2,	1,	0,	4,	0|(1<<MCID::MoveImm)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #354 = LGHI
  { 355,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo58 },  // Inst #355 = LGHR
  { 356,	2,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #356 = LGHRL
  { 357,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo58 },  // Inst #357 = LGR
  { 358,	2,	1,	0,	6,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x1ULL, NULL, NULL, OperandInfo32 },  // Inst #358 = LGRL
  { 359,	4,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, NULL, OperandInfo42 },  // Inst #359 = LH
  { 360,	2,	1,	0,	4,	0|(1<<MCID::MoveImm)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo53 },  // Inst #360 = LHI
  { 361,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo60 },  // Inst #361 = LHR
  { 362,	2,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo53 },  // Inst #362 = LHRL
  { 363,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, NULL, OperandInfo42 },  // Inst #363 = LHY
  { 364,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, NULL, OperandInfo42 },  // Inst #364 = LLC
  { 365,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo60 },  // Inst #365 = LLCR
  { 366,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, NULL, OperandInfo12 },  // Inst #366 = LLGC
  { 367,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo58 },  // Inst #367 = LLGCR
  { 368,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, NULL, OperandInfo12 },  // Inst #368 = LLGF
  { 369,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo57 },  // Inst #369 = LLGFR
  { 370,	2,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #370 = LLGFRL
  { 371,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, NULL, OperandInfo12 },  // Inst #371 = LLGH
  { 372,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo58 },  // Inst #372 = LLGHR
  { 373,	2,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #373 = LLGHRL
  { 374,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, NULL, OperandInfo42 },  // Inst #374 = LLH
  { 375,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo60 },  // Inst #375 = LLHR
  { 376,	2,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo53 },  // Inst #376 = LLHRL
  { 377,	2,	1,	0,	6,	0|(1<<MCID::MoveImm)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #377 = LLIHF
  { 378,	2,	1,	0,	4,	0|(1<<MCID::MoveImm)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #378 = LLIHH
  { 379,	2,	1,	0,	4,	0|(1<<MCID::MoveImm)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #379 = LLIHL
  { 380,	2,	1,	0,	6,	0|(1<<MCID::MoveImm)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #380 = LLILF
  { 381,	2,	1,	0,	4,	0|(1<<MCID::MoveImm)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #381 = LLILH
  { 382,	2,	1,	0,	4,	0|(1<<MCID::MoveImm)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #382 = LLILL
  { 383,	4,	2,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo80 },  // Inst #383 = LMG
  { 384,	2,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo44 },  // Inst #384 = LNDBR
  { 385,	2,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo48 },  // Inst #385 = LNEBR
  { 386,	2,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo67 },  // Inst #386 = LNXBR
  { 387,	2,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo44 },  // Inst #387 = LPDBR
  { 388,	2,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo48 },  // Inst #388 = LPEBR
  { 389,	2,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo67 },  // Inst #389 = LPXBR
  { 390,	2,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo60 },  // Inst #390 = LR
  { 391,	2,	1,	0,	6,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x1ULL, NULL, NULL, OperandInfo53 },  // Inst #391 = LRL
  { 392,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, NULL, OperandInfo42 },  // Inst #392 = LRV
  { 393,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, NULL, OperandInfo12 },  // Inst #393 = LRVG
  { 394,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo58 },  // Inst #394 = LRVGR
  { 395,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo60 },  // Inst #395 = LRVR
  { 396,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x1dULL, NULL, NULL, OperandInfo81 },  // Inst #396 = LX
  { 397,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, NULL, OperandInfo81 },  // Inst #397 = LXDB
  { 398,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo82 },  // Inst #398 = LXDBR
  { 399,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, NULL, OperandInfo81 },  // Inst #399 = LXEB
  { 400,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo83 },  // Inst #400 = LXEBR
  { 401,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo67 },  // Inst #401 = LXR
  { 402,	4,	1,	0,	6,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0xdULL, NULL, NULL, OperandInfo42 },  // Inst #402 = LY
  { 403,	1,	1,	0,	4,	0|(1<<MCID::MoveImm)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo84 },  // Inst #403 = LZDR
  { 404,	1,	1,	0,	4,	0|(1<<MCID::MoveImm)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo85 },  // Inst #404 = LZER
  { 405,	1,	1,	0,	4,	0|(1<<MCID::MoveImm)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo86 },  // Inst #405 = LZXR
  { 406,	6,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, NULL, OperandInfo87 },  // Inst #406 = MADB
  { 407,	4,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo88 },  // Inst #407 = MADBR
  { 408,	6,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, NULL, OperandInfo89 },  // Inst #408 = MAEB
  { 409,	4,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #409 = MAEBR
  { 410,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, NULL, OperandInfo9 },  // Inst #410 = MDB
  { 411,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo10 },  // Inst #411 = MDBR
  { 412,	5,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x8ULL, NULL, NULL, OperandInfo9 },  // Inst #412 = MDEB
  { 413,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo91 },  // Inst #413 = MDEBR
  { 414,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, NULL, OperandInfo13 },  // Inst #414 = MEEB
  { 415,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #415 = MEEBR
  { 416,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #416 = MGHI
  { 417,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, NULL, OperandInfo8 },  // Inst #417 = MH
  { 418,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #418 = MHI
  { 419,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, NULL, OperandInfo8 },  // Inst #419 = MHY
  { 420,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, NULL, OperandInfo70 },  // Inst #420 = MLG
  { 421,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo71 },  // Inst #421 = MLGR
  { 422,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, NULL, OperandInfo8 },  // Inst #422 = MS
  { 423,	6,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, NULL, OperandInfo87 },  // Inst #423 = MSDB
  { 424,	4,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo88 },  // Inst #424 = MSDBR
  { 425,	6,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, NULL, OperandInfo89 },  // Inst #425 = MSEB
  { 426,	4,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #426 = MSEBR
  { 427,	3,	1,	0,	6,	0, 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #427 = MSFI
  { 428,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, NULL, OperandInfo17 },  // Inst #428 = MSG
  { 429,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, NULL, OperandInfo17 },  // Inst #429 = MSGF
  { 430,	3,	1,	0,	6,	0, 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #430 = MSGFI
  { 431,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #431 = MSGFR
  { 432,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #432 = MSGR
  { 433,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #433 = MSR
  { 434,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, NULL, OperandInfo8 },  // Inst #434 = MSY
  { 435,	3,	0,	0,	6,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #435 = MVGHI
  { 436,	3,	0,	0,	6,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #436 = MVHHI
  { 437,	3,	0,	0,	6,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #437 = MVHI
  { 438,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #438 = MVI
  { 439,	3,	0,	0,	6,	0|(1<<MCID::MayStore), 0x4ULL, NULL, NULL, OperandInfo21 },  // Inst #439 = MVIY
  { 440,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x0ULL, NULL, NULL, OperandInfo30 },  // Inst #440 = MXBR
  { 441,	5,	1,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x8ULL, NULL, NULL, OperandInfo92 },  // Inst #441 = MXDB
  { 442,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo93 },  // Inst #442 = MXDBR
  { 443,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #443 = N
  { 444,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #444 = NG
  { 445,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList1, OperandInfo20 },  // Inst #445 = NGR
  { 446,	3,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x0ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #446 = NI
  { 447,	3,	1,	0,	6,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #447 = NIHF
  { 448,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #448 = NIHH
  { 449,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #449 = NIHL
  { 450,	3,	1,	0,	6,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #450 = NILF
  { 451,	3,	1,	0,	6,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #451 = NILF32
  { 452,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #452 = NILH
  { 453,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #453 = NILH32
  { 454,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #454 = NILL
  { 455,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #455 = NILL32
  { 456,	3,	0,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #456 = NIY
  { 457,	3,	1,	0,	2,	0|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList1, OperandInfo22 },  // Inst #457 = NR
  { 458,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #458 = NY
  { 459,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #459 = O
  { 460,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #460 = OG
  { 461,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList1, OperandInfo20 },  // Inst #461 = OGR
  { 462,	3,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x0ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #462 = OI
  { 463,	3,	1,	0,	6,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #463 = OIHF
  { 464,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #464 = OIHH
  { 465,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #465 = OIHL
  { 466,	3,	1,	0,	6,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #466 = OILF
  { 467,	3,	1,	0,	6,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #467 = OILF32
  { 468,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #468 = OILH
  { 469,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #469 = OILH32
  { 470,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #470 = OILL
  { 471,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #471 = OILL32
  { 472,	3,	0,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #472 = OIY
  { 473,	3,	1,	0,	2,	0|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList1, OperandInfo22 },  // Inst #473 = OR
  { 474,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #474 = OY
  { 475,	0,	0,	0,	2,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, 0 },  // Inst #475 = RET
  { 476,	6,	1,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList1, OperandInfo94 },  // Inst #476 = RISBG
  { 477,	6,	1,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList1, OperandInfo95 },  // Inst #477 = RISBG32
  { 478,	4,	1,	0,	6,	0, 0x4ULL, NULL, NULL, OperandInfo96 },  // Inst #478 = RLL
  { 479,	4,	1,	0,	6,	0, 0x4ULL, NULL, NULL, OperandInfo97 },  // Inst #479 = RLLG
  { 480,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #480 = S
  { 481,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, ImplicitList1, OperandInfo9 },  // Inst #481 = SDB
  { 482,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo10 },  // Inst #482 = SDBR
  { 483,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, ImplicitList1, OperandInfo13 },  // Inst #483 = SEB
  { 484,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo14 },  // Inst #484 = SEBR
  { 485,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #485 = SG
  { 486,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #486 = SGF
  { 487,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo19 },  // Inst #487 = SGFR
  { 488,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo20 },  // Inst #488 = SGR
  { 489,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #489 = SH
  { 490,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #490 = SHY
  { 491,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #491 = SL
  { 492,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, ImplicitList1, ImplicitList1, OperandInfo8 },  // Inst #492 = SLB
  { 493,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, ImplicitList1, ImplicitList1, OperandInfo17 },  // Inst #493 = SLBG
  { 494,	3,	1,	0,	4,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo22 },  // Inst #494 = SLBR
  { 495,	3,	1,	0,	6,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #495 = SLFI
  { 496,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #496 = SLG
  { 497,	3,	1,	0,	4,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo20 },  // Inst #497 = SLGBR
  { 498,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #498 = SLGF
  { 499,	3,	1,	0,	6,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #499 = SLGFI
  { 500,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo19 },  // Inst #500 = SLGFR
  { 501,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo20 },  // Inst #501 = SLGR
  { 502,	4,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo98 },  // Inst #502 = SLL
  { 503,	4,	1,	0,	6,	0, 0x4ULL, NULL, NULL, OperandInfo97 },  // Inst #503 = SLLG
  { 504,	3,	1,	0,	2,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo22 },  // Inst #504 = SLR
  { 505,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #505 = SLY
  { 506,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, NULL, OperandInfo43 },  // Inst #506 = SQDB
  { 507,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo44 },  // Inst #507 = SQDBR
  { 508,	4,	1,	0,	6,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, NULL, OperandInfo47 },  // Inst #508 = SQEB
  { 509,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo48 },  // Inst #509 = SQEBR
  { 510,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo67 },  // Inst #510 = SQXBR
  { 511,	3,	1,	0,	2,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo22 },  // Inst #511 = SR
  { 512,	4,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo98 },  // Inst #512 = SRA
  { 513,	4,	1,	0,	6,	0, 0x4ULL, NULL, ImplicitList1, OperandInfo97 },  // Inst #513 = SRAG
  { 514,	4,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo98 },  // Inst #514 = SRL
  { 515,	4,	1,	0,	6,	0, 0x4ULL, NULL, NULL, OperandInfo97 },  // Inst #515 = SRLG
  { 516,	4,	0,	0,	4,	0|(1<<MCID::MayStore), 0x8ULL, NULL, NULL, OperandInfo12 },  // Inst #516 = ST
  { 517,	4,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore), 0x1eULL, NULL, NULL, OperandInfo76 },  // Inst #517 = ST128
  { 518,	4,	0,	0,	4,	0|(1<<MCID::MayStore), 0xaULL, NULL, NULL, OperandInfo42 },  // Inst #518 = ST32
  { 519,	4,	0,	0,	6,	0|(1<<MCID::MayStore), 0xeULL, NULL, NULL, OperandInfo42 },  // Inst #519 = ST32Y
  { 520,	4,	0,	0,	4,	0|(1<<MCID::MayStore), 0x8ULL, NULL, NULL, OperandInfo12 },  // Inst #520 = STC
  { 521,	4,	0,	0,	4,	0|(1<<MCID::MayStore), 0x8ULL, NULL, NULL, OperandInfo42 },  // Inst #521 = STC32
  { 522,	4,	0,	0,	6,	0|(1<<MCID::MayStore), 0xcULL, NULL, NULL, OperandInfo42 },  // Inst #522 = STC32Y
  { 523,	4,	0,	0,	6,	0|(1<<MCID::MayStore), 0xcULL, NULL, NULL, OperandInfo12 },  // Inst #523 = STCY
  { 524,	4,	0,	0,	4,	0|(1<<MCID::MayStore), 0xaULL, NULL, NULL, OperandInfo43 },  // Inst #524 = STD
  { 525,	4,	0,	0,	6,	0|(1<<MCID::MayStore), 0xeULL, NULL, NULL, OperandInfo43 },  // Inst #525 = STDY
  { 526,	4,	0,	0,	4,	0|(1<<MCID::MayStore), 0xaULL, NULL, NULL, OperandInfo47 },  // Inst #526 = STE
  { 527,	4,	0,	0,	6,	0|(1<<MCID::MayStore), 0xeULL, NULL, NULL, OperandInfo47 },  // Inst #527 = STEY
  { 528,	4,	0,	0,	6,	0|(1<<MCID::MayStore), 0xeULL, NULL, NULL, OperandInfo12 },  // Inst #528 = STG
  { 529,	2,	0,	0,	6,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo32 },  // Inst #529 = STGRL
  { 530,	4,	0,	0,	4,	0|(1<<MCID::MayStore), 0x8ULL, NULL, NULL, OperandInfo12 },  // Inst #530 = STH
  { 531,	4,	0,	0,	4,	0|(1<<MCID::MayStore), 0x8ULL, NULL, NULL, OperandInfo42 },  // Inst #531 = STH32
  { 532,	4,	0,	0,	6,	0|(1<<MCID::MayStore), 0xcULL, NULL, NULL, OperandInfo42 },  // Inst #532 = STH32Y
  { 533,	2,	0,	0,	6,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #533 = STHRL
  { 534,	2,	0,	0,	6,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo53 },  // Inst #534 = STHRL32
  { 535,	4,	0,	0,	6,	0|(1<<MCID::MayStore), 0xcULL, NULL, NULL, OperandInfo12 },  // Inst #535 = STHY
  { 536,	4,	0,	0,	6,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x4ULL, NULL, NULL, OperandInfo80 },  // Inst #536 = STMG
  { 537,	2,	0,	0,	6,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #537 = STRL
  { 538,	2,	0,	0,	6,	0|(1<<MCID::MayStore), 0x2ULL, NULL, NULL, OperandInfo53 },  // Inst #538 = STRL32
  { 539,	4,	0,	0,	6,	0|(1<<MCID::MayStore), 0xcULL, NULL, NULL, OperandInfo42 },  // Inst #539 = STRV
  { 540,	4,	0,	0,	6,	0|(1<<MCID::MayStore), 0xcULL, NULL, NULL, OperandInfo12 },  // Inst #540 = STRVG
  { 541,	4,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore), 0x1eULL, NULL, NULL, OperandInfo81 },  // Inst #541 = STX
  { 542,	4,	0,	0,	6,	0|(1<<MCID::MayStore), 0xcULL, NULL, NULL, OperandInfo12 },  // Inst #542 = STY
  { 543,	3,	1,	0,	4,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo30 },  // Inst #543 = SXBR
  { 544,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #544 = SY
  { 545,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo99 },  // Inst #545 = Select32
  { 546,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo100 },  // Inst #546 = Select64
  { 547,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo101 },  // Inst #547 = SelectF128
  { 548,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo102 },  // Inst #548 = SelectF32
  { 549,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo103 },  // Inst #549 = SelectF64
  { 550,	5,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x8ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #550 = X
  { 551,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo17 },  // Inst #551 = XG
  { 552,	3,	1,	0,	4,	0|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList1, OperandInfo20 },  // Inst #552 = XGR
  { 553,	3,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x0ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #553 = XI
  { 554,	3,	1,	0,	6,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #554 = XIHF
  { 555,	3,	1,	0,	6,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo18 },  // Inst #555 = XILF
  { 556,	3,	1,	0,	6,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo16 },  // Inst #556 = XILF32
  { 557,	3,	0,	0,	6,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4ULL, NULL, ImplicitList1, OperandInfo21 },  // Inst #557 = XIY
  { 558,	3,	1,	0,	2,	0|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList1, OperandInfo22 },  // Inst #558 = XR
  { 559,	5,	1,	0,	6,	0|(1<<MCID::MayLoad), 0xcULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #559 = XY
  { 560,	2,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo104 },  // Inst #560 = ZEXT128_32
  { 561,	2,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #561 = ZEXT128_64
};

extern const char SystemZInstrNameData[] = {
  /* 0 */ 'I', 'C', '3', '2', 0,
  /* 5 */ 'S', 'T', 'C', '3', '2', 0,
  /* 11 */ 'I', 'I', 'L', 'F', '3', '2', 0,
  /* 18 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'L', 'F', '3', '2', 0,
  /* 37 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'I', 'L', 'F', '3', '2', 0,
  /* 56 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'I', 'L', 'F', '3', '2', 0,
  /* 75 */ 'S', 'e', 'l', 'e', 'c', 't', 'F', '3', '2', 0,
  /* 85 */ 'R', 'I', 'S', 'B', 'G', '3', '2', 0,
  /* 93 */ 'I', 'I', 'L', 'H', '3', '2', 0,
  /* 100 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'L', 'H', '3', '2', 0,
  /* 119 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'I', 'L', 'H', '3', '2', 0,
  /* 138 */ 'S', 'T', 'H', '3', '2', 0,
  /* 144 */ 'I', 'I', 'L', 'L', '3', '2', 0,
  /* 151 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'L', 'L', '3', '2', 0,
  /* 170 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'I', 'L', 'L', '3', '2', 0,
  /* 189 */ 'S', 'T', 'H', 'R', 'L', '3', '2', 0,
  /* 197 */ 'S', 'T', 'R', 'L', '3', '2', 0,
  /* 204 */ 'S', 'T', '3', '2', 0,
  /* 209 */ 'Z', 'E', 'X', 'T', '1', '2', '8', '_', '3', '2', 0,
  /* 220 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', '3', '2', 0,
  /* 240 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', '3', '2', 0,
  /* 259 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', '3', '2', 0,
  /* 274 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', '3', '2', 0,
  /* 294 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', '3', '2', 0,
  /* 313 */ 'S', 'e', 'l', 'e', 'c', 't', '3', '2', 0,
  /* 322 */ 'S', 'e', 'l', 'e', 'c', 't', 'F', '6', '4', 0,
  /* 332 */ 'A', 'E', 'X', 'T', '1', '2', '8', '_', '6', '4', 0,
  /* 343 */ 'Z', 'E', 'X', 'T', '1', '2', '8', '_', '6', '4', 0,
  /* 354 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', '6', '4', 0,
  /* 374 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', '6', '4', 0,
  /* 393 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', '6', '4', 0,
  /* 408 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', '6', '4', 0,
  /* 428 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', '6', '4', 0,
  /* 447 */ 'S', 'e', 'l', 'e', 'c', 't', '6', '4', 0,
  /* 456 */ 'S', 'e', 'l', 'e', 'c', 't', 'F', '1', '2', '8', 0,
  /* 467 */ 'L', '1', '2', '8', 0,
  /* 472 */ 'S', 'T', '1', '2', '8', 0,
  /* 478 */ 'L', 'A', 0,
  /* 481 */ 'S', 'R', 'A', 0,
  /* 485 */ 'M', 'A', 'D', 'B', 0,
  /* 490 */ 'C', 'D', 'B', 0,
  /* 494 */ 'D', 'D', 'B', 0,
  /* 498 */ 'M', 'D', 'B', 0,
  /* 502 */ 'S', 'Q', 'D', 'B', 0,
  /* 507 */ 'M', 'S', 'D', 'B', 0,
  /* 512 */ 'L', 'X', 'D', 'B', 0,
  /* 517 */ 'M', 'X', 'D', 'B', 0,
  /* 522 */ 'M', 'A', 'E', 'B', 0,
  /* 527 */ 'C', 'E', 'B', 0,
  /* 531 */ 'L', 'D', 'E', 'B', 0,
  /* 536 */ 'M', 'D', 'E', 'B', 0,
  /* 541 */ 'M', 'E', 'E', 'B', 0,
  /* 546 */ 'S', 'Q', 'E', 'B', 0,
  /* 551 */ 'M', 'S', 'E', 'B', 0,
  /* 556 */ 'L', 'X', 'E', 'B', 0,
  /* 561 */ 'L', 'G', 'B', 0,
  /* 565 */ 'S', 'L', 'B', 0,
  /* 569 */ 'L', 'L', 'G', 'C', 0,
  /* 574 */ 'I', 'C', 0,
  /* 577 */ 'A', 'L', 'C', 0,
  /* 581 */ 'L', 'L', 'C', 0,
  /* 585 */ 'A', 'D', 'J', 'D', 'Y', 'N', 'A', 'L', 'L', 'O', 'C', 0,
  /* 597 */ 'A', 's', 'm', 'B', 'R', 'C', 0,
  /* 604 */ 'S', 'T', 'C', 0,
  /* 608 */ 'L', 'D', 0,
  /* 611 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 624 */ 'S', 'T', 'D', 0,
  /* 628 */ 'R', 'E', 'G', '_', 'S', 'E', 'Q', 'U', 'E', 'N', 'C', 'E', 0,
  /* 641 */ 'A', 's', 'm', 'J', 'H', 'E', 0,
  /* 648 */ 'A', 's', 'm', 'J', 'N', 'H', 'E', 0,
  /* 656 */ 'A', 's', 'm', 'J', 'E', 0,
  /* 662 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 669 */ 'A', 's', 'm', 'J', 'L', 'E', 0,
  /* 676 */ 'A', 's', 'm', 'J', 'N', 'L', 'E', 0,
  /* 684 */ 'A', 's', 'm', 'J', 'N', 'E', 0,
  /* 691 */ 'S', 'T', 'E', 0,
  /* 695 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 705 */ 'I', 'M', 'P', 'L', 'I', 'C', 'I', 'T', '_', 'D', 'E', 'F', 0,
  /* 718 */ 'A', 'G', 'F', 0,
  /* 722 */ 'C', 'G', 'F', 0,
  /* 726 */ 'A', 'L', 'G', 'F', 0,
  /* 731 */ 'C', 'L', 'G', 'F', 0,
  /* 736 */ 'L', 'L', 'G', 'F', 0,
  /* 741 */ 'S', 'L', 'G', 'F', 0,
  /* 746 */ 'D', 'S', 'G', 'F', 0,
  /* 751 */ 'M', 'S', 'G', 'F', 0,
  /* 756 */ 'I', 'I', 'H', 'F', 0,
  /* 761 */ 'L', 'L', 'I', 'H', 'F', 0,
  /* 767 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'H', 'F', 0,
  /* 784 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'I', 'H', 'F', 0,
  /* 801 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'I', 'H', 'F', 0,
  /* 818 */ 'I', 'I', 'L', 'F', 0,
  /* 823 */ 'L', 'L', 'I', 'L', 'F', 0,
  /* 829 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'L', 'F', 0,
  /* 846 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'I', 'L', 'F', 0,
  /* 863 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'I', 'L', 'F', 0,
  /* 880 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'X', 'I', 'L', 'F', 0,
  /* 898 */ 'S', 'R', 'A', 'G', 0,
  /* 903 */ 'S', 'L', 'B', 'G', 0,
  /* 908 */ 'R', 'I', 'S', 'B', 'G', 0,
  /* 914 */ 'A', 'L', 'C', 'G', 0,
  /* 919 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 934 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 948 */ 'S', 'U', 'B', 'R', 'E', 'G', '_', 'T', 'O', '_', 'R', 'E', 'G', 0,
  /* 962 */ 'J', 'G', 0,
  /* 965 */ 'A', 'L', 'G', 0,
  /* 969 */ 'C', 'L', 'G', 0,
  /* 973 */ 'D', 'L', 'G', 0,
  /* 977 */ 'R', 'L', 'L', 'G', 0,
  /* 982 */ 'S', 'L', 'L', 'G', 0,
  /* 987 */ 'M', 'L', 'G', 0,
  /* 991 */ 'S', 'R', 'L', 'G', 0,
  /* 996 */ 'S', 'L', 'G', 0,
  /* 1000 */ 'L', 'M', 'G', 0,
  /* 1004 */ 'S', 'T', 'M', 'G', 0,
  /* 1009 */ 'N', 'G', 0,
  /* 1012 */ 'O', 'G', 0,
  /* 1015 */ 'C', 'S', 'G', 0,
  /* 1019 */ 'D', 'S', 'G', 0,
  /* 1023 */ 'M', 'S', 'G', 0,
  /* 1027 */ 'S', 'T', 'G', 0,
  /* 1031 */ 'L', 'R', 'V', 'G', 0,
  /* 1036 */ 'S', 'T', 'R', 'V', 'G', 0,
  /* 1042 */ 'X', 'G', 0,
  /* 1045 */ 'A', 'H', 0,
  /* 1048 */ 'C', 'H', 0,
  /* 1051 */ 'C', 'G', 'H', 0,
  /* 1055 */ 'L', 'L', 'G', 'H', 0,
  /* 1060 */ 'I', 'I', 'H', 'H', 0,
  /* 1065 */ 'L', 'L', 'I', 'H', 'H', 0,
  /* 1071 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'H', 'H', 0,
  /* 1088 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'I', 'H', 'H', 0,
  /* 1105 */ 'A', 's', 'm', 'J', 'H', 0,
  /* 1111 */ 'I', 'I', 'L', 'H', 0,
  /* 1116 */ 'L', 'L', 'I', 'L', 'H', 0,
  /* 1122 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'L', 'H', 0,
  /* 1139 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'N', 'I', 'L', 'H', 0,
  /* 1157 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'I', 'L', 'H', 0,
  /* 1174 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'O', 'I', 'L', 'H', 0,
  /* 1192 */ 'A', 's', 'm', 'J', 'L', 'H', 0,
  /* 1199 */ 'L', 'L', 'H', 0,
  /* 1203 */ 'A', 's', 'm', 'J', 'N', 'L', 'H', 0,
  /* 1211 */ 'M', 'H', 0,
  /* 1214 */ 'A', 's', 'm', 'J', 'N', 'H', 0,
  /* 1221 */ 'S', 'H', 0,
  /* 1224 */ 'S', 'T', 'H', 0,
  /* 1228 */ 'A', 's', 'm', 'J', 'H', 'E', 'C', 'I', 0,
  /* 1237 */ 'A', 's', 'm', 'J', 'E', 'C', 'I', 0,
  /* 1245 */ 'A', 's', 'm', 'J', 'L', 'E', 'C', 'I', 0,
  /* 1254 */ 'A', 's', 'm', 'J', 'H', 'C', 'I', 0,
  /* 1262 */ 'A', 's', 'm', 'J', 'L', 'H', 'C', 'I', 0,
  /* 1271 */ 'A', 's', 'm', 'J', 'L', 'C', 'I', 0,
  /* 1279 */ 'A', 's', 'm', 'J', 'H', 'E', 'A', 'l', 't', 'C', 'I', 0,
  /* 1291 */ 'A', 's', 'm', 'J', 'E', 'A', 'l', 't', 'C', 'I', 0,
  /* 1302 */ 'A', 's', 'm', 'J', 'L', 'E', 'A', 'l', 't', 'C', 'I', 0,
  /* 1314 */ 'A', 's', 'm', 'J', 'H', 'A', 'l', 't', 'C', 'I', 0,
  /* 1325 */ 'A', 's', 'm', 'J', 'L', 'H', 'A', 'l', 't', 'C', 'I', 0,
  /* 1337 */ 'A', 's', 'm', 'J', 'L', 'A', 'l', 't', 'C', 'I', 0,
  /* 1348 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'F', 'I', 0,
  /* 1364 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'A', 'F', 'I', 0,
  /* 1381 */ 'C', 'F', 'I', 0,
  /* 1385 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'G', 'F', 'I', 0,
  /* 1402 */ 'C', 'G', 'F', 'I', 0,
  /* 1407 */ 'A', 'L', 'G', 'F', 'I', 0,
  /* 1413 */ 'C', 'L', 'G', 'F', 'I', 0,
  /* 1419 */ 'S', 'L', 'G', 'F', 'I', 0,
  /* 1425 */ 'M', 'S', 'G', 'F', 'I', 0,
  /* 1431 */ 'A', 'L', 'F', 'I', 0,
  /* 1436 */ 'C', 'L', 'F', 'I', 0,
  /* 1441 */ 'S', 'L', 'F', 'I', 0,
  /* 1446 */ 'M', 'S', 'F', 'I', 0,
  /* 1451 */ 'A', 's', 'm', 'J', 'H', 'E', 'C', 'G', 'I', 0,
  /* 1461 */ 'A', 's', 'm', 'J', 'E', 'C', 'G', 'I', 0,
  /* 1470 */ 'A', 's', 'm', 'J', 'L', 'E', 'C', 'G', 'I', 0,
  /* 1480 */ 'A', 's', 'm', 'J', 'H', 'C', 'G', 'I', 0,
  /* 1489 */ 'A', 's', 'm', 'J', 'L', 'H', 'C', 'G', 'I', 0,
  /* 1499 */ 'A', 's', 'm', 'J', 'L', 'C', 'G', 'I', 0,
  /* 1508 */ 'A', 's', 'm', 'J', 'H', 'E', 'A', 'l', 't', 'C', 'G', 'I', 0,
  /* 1521 */ 'A', 's', 'm', 'J', 'E', 'A', 'l', 't', 'C', 'G', 'I', 0,
  /* 1533 */ 'A', 's', 'm', 'J', 'L', 'E', 'A', 'l', 't', 'C', 'G', 'I', 0,
  /* 1546 */ 'A', 's', 'm', 'J', 'H', 'A', 'l', 't', 'C', 'G', 'I', 0,
  /* 1558 */ 'A', 's', 'm', 'J', 'L', 'H', 'A', 'l', 't', 'C', 'G', 'I', 0,
  /* 1571 */ 'A', 's', 'm', 'J', 'L', 'A', 'l', 't', 'C', 'G', 'I', 0,
  /* 1583 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'H', 'I', 0,
  /* 1599 */ 'C', 'H', 'I', 0,
  /* 1603 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'G', 'H', 'I', 0,
  /* 1620 */ 'C', 'G', 'H', 'I', 0,
  /* 1625 */ 'L', 'G', 'H', 'I', 0,
  /* 1630 */ 'M', 'G', 'H', 'I', 0,
  /* 1635 */ 'M', 'V', 'G', 'H', 'I', 0,
  /* 1641 */ 'M', 'V', 'H', 'H', 'I', 0,
  /* 1647 */ 'L', 'H', 'I', 0,
  /* 1651 */ 'M', 'H', 'I', 0,
  /* 1655 */ 'P', 'H', 'I', 0,
  /* 1659 */ 'M', 'V', 'H', 'I', 0,
  /* 1664 */ 'C', 'L', 'I', 0,
  /* 1668 */ 'N', 'I', 0,
  /* 1671 */ 'O', 'I', 0,
  /* 1674 */ 'A', 'S', 'I', 0,
  /* 1678 */ 'A', 'G', 'S', 'I', 0,
  /* 1683 */ 'C', 'H', 'S', 'I', 0,
  /* 1688 */ 'C', 'L', 'F', 'H', 'S', 'I', 0,
  /* 1695 */ 'C', 'G', 'H', 'S', 'I', 0,
  /* 1701 */ 'C', 'L', 'G', 'H', 'S', 'I', 0,
  /* 1708 */ 'C', 'H', 'H', 'S', 'I', 0,
  /* 1714 */ 'C', 'L', 'H', 'H', 'S', 'I', 0,
  /* 1721 */ 'M', 'V', 'I', 0,
  /* 1725 */ 'X', 'I', 0,
  /* 1728 */ 'A', 's', 'm', 'C', 'I', 'J', 0,
  /* 1735 */ 'A', 's', 'm', 'C', 'G', 'I', 'J', 0,
  /* 1743 */ 'A', 's', 'm', 'C', 'R', 'J', 0,
  /* 1750 */ 'A', 's', 'm', 'C', 'G', 'R', 'J', 0,
  /* 1758 */ 'A', 'L', 0,
  /* 1761 */ 'A', 's', 'm', 'B', 'R', 'C', 'L', 0,
  /* 1769 */ 'D', 'L', 0,
  /* 1772 */ 'G', 'C', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 1781 */ 'P', 'R', 'O', 'L', 'O', 'G', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 1794 */ 'E', 'H', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 1803 */ 'A', 's', 'm', 'J', 'H', 'E', 'L', 0,
  /* 1811 */ 'A', 's', 'm', 'J', 'N', 'H', 'E', 'L', 0,
  /* 1820 */ 'A', 's', 'm', 'J', 'E', 'L', 0,
  /* 1827 */ 'A', 's', 'm', 'J', 'L', 'E', 'L', 0,
  /* 1835 */ 'A', 's', 'm', 'J', 'N', 'L', 'E', 'L', 0,
  /* 1844 */ 'A', 's', 'm', 'J', 'N', 'E', 'L', 0,
  /* 1852 */ 'I', 'I', 'H', 'L', 0,
  /* 1857 */ 'L', 'L', 'I', 'H', 'L', 0,
  /* 1863 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'H', 'L', 0,
  /* 1880 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'I', 'H', 'L', 0,
  /* 1897 */ 'A', 's', 'm', 'J', 'H', 'L', 0,
  /* 1904 */ 'A', 's', 'm', 'J', 'L', 'H', 'L', 0,
  /* 1912 */ 'A', 's', 'm', 'J', 'N', 'L', 'H', 'L', 0,
  /* 1921 */ 'A', 's', 'm', 'J', 'N', 'H', 'L', 0,
  /* 1929 */ 'A', 's', 'm', 'J', 'L', 0,
  /* 1935 */ 'I', 'I', 'L', 'L', 0,
  /* 1940 */ 'K', 'I', 'L', 'L', 0,
  /* 1945 */ 'L', 'L', 'I', 'L', 'L', 0,
  /* 1951 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'L', 'L', 0,
  /* 1968 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'I', 'L', 'L', 0,
  /* 1985 */ 'A', 's', 'm', 'J', 'L', 'L', 0,
  /* 1992 */ 'A', 's', 'm', 'J', 'N', 'L', 'L', 0,
  /* 2000 */ 'R', 'L', 'L', 0,
  /* 2004 */ 'S', 'L', 'L', 0,
  /* 2008 */ 'A', 's', 'm', 'J', 'N', 'L', 0,
  /* 2015 */ 'A', 's', 'm', 'J', 'O', 'L', 0,
  /* 2022 */ 'A', 's', 'm', 'J', 'N', 'O', 'L', 0,
  /* 2030 */ 'L', 'A', 'R', 'L', 0,
  /* 2035 */ 'C', 'R', 'L', 0,
  /* 2039 */ 'C', 'G', 'F', 'R', 'L', 0,
  /* 2045 */ 'C', 'L', 'G', 'F', 'R', 'L', 0,
  /* 2052 */ 'L', 'L', 'G', 'F', 'R', 'L', 0,
  /* 2059 */ 'C', 'G', 'R', 'L', 0,
  /* 2064 */ 'C', 'L', 'G', 'R', 'L', 0,
  /* 2070 */ 'S', 'T', 'G', 'R', 'L', 0,
  /* 2076 */ 'C', 'H', 'R', 'L', 0,
  /* 2081 */ 'C', 'G', 'H', 'R', 'L', 0,
  /* 2087 */ 'C', 'L', 'G', 'H', 'R', 'L', 0,
  /* 2094 */ 'L', 'L', 'G', 'H', 'R', 'L', 0,
  /* 2101 */ 'C', 'L', 'H', 'R', 'L', 0,
  /* 2107 */ 'L', 'L', 'H', 'R', 'L', 0,
  /* 2113 */ 'S', 'T', 'H', 'R', 'L', 0,
  /* 2119 */ 'C', 'L', 'R', 'L', 0,
  /* 2124 */ 'S', 'R', 'L', 0,
  /* 2128 */ 'S', 'T', 'R', 'L', 0,
  /* 2133 */ 'A', 's', 'm', 'B', 'R', 'A', 'S', 'L', 0,
  /* 2142 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', 0,
  /* 2152 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'U', 'M', 'I', 'N', 0,
  /* 2170 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'M', 'I', 'N', 0,
  /* 2187 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 0,
  /* 2204 */ 'A', 's', 'm', 'J', 'O', 0,
  /* 2210 */ 'A', 's', 'm', 'J', 'N', 'O', 0,
  /* 2217 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 0,
  /* 2232 */ 'E', 'A', 'R', 0,
  /* 2236 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'R', 0,
  /* 2251 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'A', 'R', 0,
  /* 2267 */ 'M', 'A', 'D', 'B', 'R', 0,
  /* 2273 */ 'L', 'C', 'D', 'B', 'R', 0,
  /* 2279 */ 'D', 'D', 'B', 'R', 0,
  /* 2284 */ 'L', 'E', 'D', 'B', 'R', 0,
  /* 2290 */ 'C', 'F', 'D', 'B', 'R', 0,
  /* 2296 */ 'C', 'G', 'D', 'B', 'R', 0,
  /* 2302 */ 'F', 'I', 'D', 'B', 'R', 0,
  /* 2308 */ 'M', 'D', 'B', 'R', 0,
  /* 2313 */ 'L', 'N', 'D', 'B', 'R', 0,
  /* 2319 */ 'L', 'P', 'D', 'B', 'R', 0,
  /* 2325 */ 'S', 'Q', 'D', 'B', 'R', 0,
  /* 2331 */ 'M', 'S', 'D', 'B', 'R', 0,
  /* 2337 */ 'L', 'X', 'D', 'B', 'R', 0,
  /* 2343 */ 'M', 'X', 'D', 'B', 'R', 0,
  /* 2349 */ 'M', 'A', 'E', 'B', 'R', 0,
  /* 2355 */ 'L', 'C', 'E', 'B', 'R', 0,
  /* 2361 */ 'L', 'D', 'E', 'B', 'R', 0,
  /* 2367 */ 'M', 'D', 'E', 'B', 'R', 0,
  /* 2373 */ 'M', 'E', 'E', 'B', 'R', 0,
  /* 2379 */ 'C', 'F', 'E', 'B', 'R', 0,
  /* 2385 */ 'C', 'G', 'E', 'B', 'R', 0,
  /* 2391 */ 'F', 'I', 'E', 'B', 'R', 0,
  /* 2397 */ 'L', 'N', 'E', 'B', 'R', 0,
  /* 2403 */ 'L', 'P', 'E', 'B', 'R', 0,
  /* 2409 */ 'S', 'Q', 'E', 'B', 'R', 0,
  /* 2415 */ 'M', 'S', 'E', 'B', 'R', 0,
  /* 2421 */ 'L', 'X', 'E', 'B', 'R', 0,
  /* 2427 */ 'C', 'D', 'F', 'B', 'R', 0,
  /* 2433 */ 'C', 'E', 'F', 'B', 'R', 0,
  /* 2439 */ 'C', 'X', 'F', 'B', 'R', 0,
  /* 2445 */ 'C', 'D', 'G', 'B', 'R', 0,
  /* 2451 */ 'C', 'E', 'G', 'B', 'R', 0,
  /* 2457 */ 'S', 'L', 'G', 'B', 'R', 0,
  /* 2463 */ 'C', 'X', 'G', 'B', 'R', 0,
  /* 2469 */ 'S', 'L', 'B', 'R', 0,
  /* 2474 */ 'A', 'X', 'B', 'R', 0,
  /* 2479 */ 'L', 'C', 'X', 'B', 'R', 0,
  /* 2485 */ 'L', 'D', 'X', 'B', 'R', 0,
  /* 2491 */ 'L', 'E', 'X', 'B', 'R', 0,
  /* 2497 */ 'C', 'F', 'X', 'B', 'R', 0,
  /* 2503 */ 'C', 'G', 'X', 'B', 'R', 0,
  /* 2509 */ 'F', 'I', 'X', 'B', 'R', 0,
  /* 2515 */ 'M', 'X', 'B', 'R', 0,
  /* 2520 */ 'L', 'N', 'X', 'B', 'R', 0,
  /* 2526 */ 'L', 'P', 'X', 'B', 'R', 0,
  /* 2532 */ 'S', 'Q', 'X', 'B', 'R', 0,
  /* 2538 */ 'S', 'X', 'B', 'R', 0,
  /* 2543 */ 'A', 's', 'm', 'J', 'H', 'E', 'C', 'R', 0,
  /* 2552 */ 'A', 's', 'm', 'J', 'E', 'C', 'R', 0,
  /* 2560 */ 'A', 's', 'm', 'J', 'L', 'E', 'C', 'R', 0,
  /* 2569 */ 'L', 'L', 'G', 'C', 'R', 0,
  /* 2575 */ 'A', 's', 'm', 'J', 'H', 'C', 'R', 0,
  /* 2583 */ 'A', 's', 'm', 'J', 'L', 'H', 'C', 'R', 0,
  /* 2592 */ 'A', 'L', 'C', 'R', 0,
  /* 2597 */ 'A', 's', 'm', 'J', 'L', 'C', 'R', 0,
  /* 2605 */ 'L', 'L', 'C', 'R', 0,
  /* 2610 */ 'A', 's', 'm', 'J', 'H', 'E', 'A', 'l', 't', 'C', 'R', 0,
  /* 2622 */ 'A', 's', 'm', 'J', 'E', 'A', 'l', 't', 'C', 'R', 0,
  /* 2633 */ 'A', 's', 'm', 'J', 'L', 'E', 'A', 'l', 't', 'C', 'R', 0,
  /* 2645 */ 'A', 's', 'm', 'J', 'H', 'A', 'l', 't', 'C', 'R', 0,
  /* 2656 */ 'A', 's', 'm', 'J', 'L', 'H', 'A', 'l', 't', 'C', 'R', 0,
  /* 2668 */ 'A', 's', 'm', 'J', 'L', 'A', 'l', 't', 'C', 'R', 0,
  /* 2679 */ 'L', 'G', 'D', 'R', 0,
  /* 2684 */ 'L', 'D', 'R', 0,
  /* 2688 */ 'L', 'Z', 'D', 'R', 0,
  /* 2693 */ 'L', 'E', 'R', 0,
  /* 2697 */ 'L', 'Z', 'E', 'R', 0,
  /* 2702 */ 'A', 'G', 'F', 'R', 0,
  /* 2707 */ 'L', 'C', 'G', 'F', 'R', 0,
  /* 2713 */ 'A', 'L', 'G', 'F', 'R', 0,
  /* 2719 */ 'C', 'L', 'G', 'F', 'R', 0,
  /* 2725 */ 'L', 'L', 'G', 'F', 'R', 0,
  /* 2731 */ 'S', 'L', 'G', 'F', 'R', 0,
  /* 2737 */ 'D', 'S', 'G', 'F', 'R', 0,
  /* 2743 */ 'M', 'S', 'G', 'F', 'R', 0,
  /* 2749 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'G', 'R', 0,
  /* 2765 */ 'A', 's', 'm', 'J', 'H', 'E', 'C', 'G', 'R', 0,
  /* 2775 */ 'A', 's', 'm', 'J', 'E', 'C', 'G', 'R', 0,
  /* 2784 */ 'A', 's', 'm', 'J', 'L', 'E', 'C', 'G', 'R', 0,
  /* 2794 */ 'A', 's', 'm', 'J', 'H', 'C', 'G', 'R', 0,
  /* 2803 */ 'A', 's', 'm', 'J', 'L', 'H', 'C', 'G', 'R', 0,
  /* 2813 */ 'A', 'L', 'C', 'G', 'R', 0,
  /* 2819 */ 'A', 's', 'm', 'J', 'L', 'C', 'G', 'R', 0,
  /* 2828 */ 'A', 's', 'm', 'J', 'H', 'E', 'A', 'l', 't', 'C', 'G', 'R', 0,
  /* 2841 */ 'A', 's', 'm', 'J', 'E', 'A', 'l', 't', 'C', 'G', 'R', 0,
  /* 2853 */ 'A', 's', 'm', 'J', 'L', 'E', 'A', 'l', 't', 'C', 'G', 'R', 0,
  /* 2866 */ 'A', 's', 'm', 'J', 'H', 'A', 'l', 't', 'C', 'G', 'R', 0,
  /* 2878 */ 'A', 's', 'm', 'J', 'L', 'H', 'A', 'l', 't', 'C', 'G', 'R', 0,
  /* 2891 */ 'A', 's', 'm', 'J', 'L', 'A', 'l', 't', 'C', 'G', 'R', 0,
  /* 2903 */ 'L', 'D', 'G', 'R', 0,
  /* 2908 */ 'A', 'L', 'G', 'R', 0,
  /* 2913 */ 'C', 'L', 'G', 'R', 0,
  /* 2918 */ 'D', 'L', 'G', 'R', 0,
  /* 2923 */ 'M', 'L', 'G', 'R', 0,
  /* 2928 */ 'S', 'L', 'G', 'R', 0,
  /* 2933 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'G', 'R', 0,
  /* 2949 */ 'F', 'L', 'O', 'G', 'R', 0,
  /* 2955 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'G', 'R', 0,
  /* 2971 */ 'D', 'S', 'G', 'R', 0,
  /* 2976 */ 'M', 'S', 'G', 'R', 0,
  /* 2981 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'G', 'R', 0,
  /* 2997 */ 'L', 'R', 'V', 'G', 'R', 0,
  /* 3003 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'G', 'R', 0,
  /* 3019 */ 'L', 'L', 'G', 'H', 'R', 0,
  /* 3025 */ 'L', 'L', 'H', 'R', 0,
  /* 3030 */ 'A', 'L', 'R', 0,
  /* 3034 */ 'C', 'L', 'R', 0,
  /* 3038 */ 'D', 'L', 'R', 0,
  /* 3042 */ 'S', 'L', 'R', 0,
  /* 3046 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'R', 0,
  /* 3061 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'N', 'R', 0,
  /* 3077 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', 0,
  /* 3092 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'O', 'R', 0,
  /* 3108 */ 'A', 's', 'm', 'B', 'A', 'S', 'R', 0,
  /* 3116 */ 'M', 'S', 'R', 0,
  /* 3120 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'R', 0,
  /* 3135 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'S', 'R', 0,
  /* 3151 */ 'L', 'R', 'V', 'R', 0,
  /* 3156 */ 'L', 'X', 'R', 0,
  /* 3160 */ 'L', 'Z', 'X', 'R', 0,
  /* 3165 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'R', 0,
  /* 3180 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'X', 'R', 0,
  /* 3196 */ 'A', 's', 'm', 'B', 'R', 'A', 'S', 0,
  /* 3204 */ 'C', 'S', 0,
  /* 3207 */ 'M', 'S', 0,
  /* 3210 */ 'C', 'O', 'P', 'Y', '_', 'T', 'O', '_', 'R', 'E', 'G', 'C', 'L', 'A', 'S', 'S', 0,
  /* 3227 */ 'R', 'E', 'T', 0,
  /* 3231 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 3246 */ 'S', 'T', 0,
  /* 3249 */ 'L', 'R', 'V', 0,
  /* 3253 */ 'S', 'T', 'R', 'V', 0,
  /* 3258 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', 'W', 0,
  /* 3271 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', 'W', 0,
  /* 3288 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'U', 'M', 'A', 'X', 0,
  /* 3306 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'M', 'A', 'X', 0,
  /* 3323 */ 'L', 'X', 0,
  /* 3326 */ 'S', 'T', 'X', 0,
  /* 3330 */ 'I', 'C', '3', '2', 'Y', 0,
  /* 3336 */ 'S', 'T', 'C', '3', '2', 'Y', 0,
  /* 3343 */ 'S', 'T', 'H', '3', '2', 'Y', 0,
  /* 3350 */ 'S', 'T', '3', '2', 'Y', 0,
  /* 3356 */ 'L', 'A', 'Y', 0,
  /* 3360 */ 'I', 'C', 'Y', 0,
  /* 3364 */ 'S', 'T', 'C', 'Y', 0,
  /* 3369 */ 'L', 'D', 'Y', 0,
  /* 3373 */ 'S', 'T', 'D', 'Y', 0,
  /* 3378 */ 'L', 'E', 'Y', 0,
  /* 3382 */ 'S', 'T', 'E', 'Y', 0,
  /* 3387 */ 'A', 'H', 'Y', 0,
  /* 3391 */ 'C', 'H', 'Y', 0,
  /* 3395 */ 'L', 'H', 'Y', 0,
  /* 3399 */ 'M', 'H', 'Y', 0,
  /* 3403 */ 'S', 'H', 'Y', 0,
  /* 3407 */ 'S', 'T', 'H', 'Y', 0,
  /* 3412 */ 'C', 'L', 'I', 'Y', 0,
  /* 3417 */ 'N', 'I', 'Y', 0,
  /* 3421 */ 'O', 'I', 'Y', 0,
  /* 3425 */ 'M', 'V', 'I', 'Y', 0,
  /* 3430 */ 'X', 'I', 'Y', 0,
  /* 3434 */ 'A', 'L', 'Y', 0,
  /* 3438 */ 'C', 'L', 'Y', 0,
  /* 3442 */ 'S', 'L', 'Y', 0,
  /* 3446 */ 'N', 'Y', 0,
  /* 3449 */ 'O', 'Y', 0,
  /* 3452 */ 'C', 'O', 'P', 'Y', 0,
  /* 3457 */ 'C', 'S', 'Y', 0,
  /* 3461 */ 'M', 'S', 'Y', 0,
  /* 3465 */ 'S', 'T', 'Y', 0,
  /* 3469 */ 'X', 'Y', 0,
  /* 3472 */ 'C', 'P', 'S', 'D', 'R', 'd', 'd', 0,
  /* 3480 */ 'C', 'P', 'S', 'D', 'R', 's', 'd', 0,
  /* 3488 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'L', 'F', '3', '2', 'i', 0,
  /* 3508 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'L', 'H', '3', '2', 'i', 0,
  /* 3528 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'L', 'L', '3', '2', 'i', 0,
  /* 3548 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'H', 'F', 'i', 0,
  /* 3566 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'L', 'F', 'i', 0,
  /* 3584 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'H', 'H', 'i', 0,
  /* 3602 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'L', 'H', 'i', 0,
  /* 3620 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'N', 'I', 'L', 'H', 'i', 0,
  /* 3639 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'H', 'L', 'i', 0,
  /* 3657 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'I', 'L', 'L', 'i', 0,
  /* 3675 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'G', 'R', 'i', 0,
  /* 3692 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'R', 'i', 0,
  /* 3708 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', 'W', '_', 'N', 'R', 'i', 0,
  /* 3725 */ 'C', 'P', 'S', 'D', 'R', 'd', 's', 0,
  /* 3733 */ 'C', 'P', 'S', 'D', 'R', 's', 's', 0,
};

extern const unsigned SystemZInstrNameIndices[] = {
    1655U, 2142U, 1781U, 1794U, 1772U, 1940U, 919U, 934U, 
    705U, 948U, 3210U, 695U, 628U, 3452U, 662U, 3231U, 
    611U, 479U, 486U, 2268U, 2187U, 2217U, 585U, 523U, 
    2350U, 332U, 1360U, 900U, 718U, 1397U, 2702U, 1615U, 
    2761U, 1678U, 1045U, 1595U, 3387U, 1758U, 577U, 914U, 
    2813U, 2592U, 1431U, 965U, 726U, 1407U, 2713U, 2908U, 
    3030U, 3434U, 2233U, 1674U, 3271U, 1364U, 2251U, 3306U, 
    2170U, 1139U, 3620U, 3061U, 3708U, 1174U, 3092U, 3135U, 
    3288U, 2152U, 880U, 3180U, 1348U, 1385U, 1603U, 2749U, 
    1583U, 2236U, 294U, 428U, 240U, 374U, 2933U, 3675U, 
    767U, 3548U, 1071U, 3584U, 1863U, 3639U, 829U, 18U, 
    3488U, 3566U, 1122U, 100U, 3508U, 3602U, 1951U, 151U, 
    3528U, 3657U, 3046U, 3692U, 2955U, 784U, 1088U, 1880U, 
    846U, 37U, 1157U, 119U, 1968U, 170U, 3077U, 2981U, 
    3120U, 274U, 408U, 220U, 354U, 3003U, 801U, 863U, 
    56U, 3165U, 3258U, 259U, 393U, 2474U, 3357U, 3108U, 
    3196U, 2133U, 597U, 1761U, 1735U, 1750U, 1728U, 1743U, 
    656U, 1521U, 2841U, 1291U, 2622U, 1461U, 2775U, 1237U, 
    2552U, 1820U, 1105U, 1546U, 2866U, 1314U, 2645U, 1480U, 
    2794U, 1254U, 2575U, 641U, 1508U, 2828U, 1279U, 2610U, 
    1451U, 2765U, 1228U, 2543U, 1803U, 1897U, 1929U, 1571U, 
    2891U, 1337U, 2668U, 1499U, 2819U, 1271U, 2597U, 669U, 
    1533U, 2853U, 1302U, 2633U, 1470U, 2784U, 1245U, 2560U, 
    1827U, 1192U, 1558U, 2878U, 1325U, 2656U, 1489U, 2803U, 
    1262U, 2583U, 1904U, 1985U, 684U, 1844U, 1214U, 648U, 
    1811U, 1921U, 2008U, 676U, 1835U, 1203U, 1912U, 1992U, 
    2210U, 2022U, 2204U, 2015U, 3111U, 2270U, 3199U, 2136U, 
    600U, 1764U, 572U, 490U, 2274U, 2427U, 2445U, 527U, 
    2356U, 2433U, 2451U, 2290U, 2379U, 1381U, 2497U, 916U, 
    2296U, 2385U, 722U, 1402U, 2708U, 2039U, 1051U, 1620U, 
    2081U, 1695U, 1738U, 2771U, 1753U, 2059U, 2503U, 1048U, 
    1708U, 1599U, 2076U, 1683U, 3391U, 1731U, 1766U, 1688U, 
    1436U, 969U, 731U, 1413U, 2719U, 2045U, 2087U, 1701U, 
    2913U, 2064U, 1714U, 2101U, 1664U, 3412U, 3034U, 2119U, 
    3438U, 3472U, 3725U, 3480U, 3733U, 2549U, 1746U, 2035U, 
    3204U, 1015U, 3457U, 2480U, 2439U, 2463U, 3361U, 494U, 
    2279U, 532U, 2362U, 1769U, 973U, 2918U, 3038U, 1019U, 
    746U, 2737U, 2971U, 2486U, 2232U, 2302U, 2391U, 2509U, 
    2949U, 574U, 0U, 3330U, 3360U, 756U, 1060U, 1852U, 
    818U, 11U, 1111U, 93U, 1935U, 144U, 1733U, 962U, 
    1759U, 467U, 478U, 2030U, 3356U, 566U, 2470U, 2273U, 
    2355U, 2707U, 2814U, 2593U, 2479U, 608U, 531U, 2361U, 
    2903U, 2684U, 2485U, 3369U, 666U, 2284U, 2693U, 2491U, 
    3378U, 966U, 561U, 2458U, 2679U, 727U, 1408U, 2714U, 
    2046U, 1056U, 1625U, 3020U, 2088U, 2909U, 2065U, 1113U, 
    1647U, 3026U, 2102U, 3395U, 581U, 2605U, 569U, 2569U, 
    736U, 2725U, 2052U, 1055U, 3019U, 2094U, 1199U, 3025U, 
    2107U, 761U, 1065U, 1857U, 823U, 1116U, 1945U, 1000U, 
    2313U, 2397U, 2520U, 2319U, 2403U, 2526U, 3031U, 2120U, 
    3249U, 1031U, 2997U, 3151U, 3323U, 512U, 2337U, 556U, 
    2421U, 3156U, 3435U, 2688U, 2697U, 3160U, 485U, 2267U, 
    522U, 2349U, 498U, 2308U, 536U, 2367U, 541U, 2373U, 
    1630U, 1211U, 1651U, 3399U, 987U, 2923U, 3207U, 507U, 
    2331U, 551U, 2415U, 1446U, 1023U, 751U, 1425U, 2743U, 
    2976U, 3116U, 3461U, 1635U, 1641U, 1659U, 1721U, 3425U, 
    2515U, 517U, 2343U, 2168U, 1009U, 2945U, 1668U, 779U, 
    1083U, 1875U, 841U, 30U, 1134U, 112U, 1963U, 163U, 
    3417U, 3058U, 3446U, 2208U, 1012U, 2951U, 1671U, 796U, 
    1100U, 1892U, 858U, 49U, 1169U, 131U, 1980U, 182U, 
    3421U, 3089U, 3449U, 3227U, 908U, 85U, 2000U, 977U, 
    3202U, 508U, 2332U, 552U, 2416U, 1016U, 747U, 2738U, 
    2972U, 1221U, 3403U, 2139U, 565U, 903U, 2469U, 1441U, 
    996U, 2457U, 741U, 1419U, 2731U, 2928U, 2004U, 982U, 
    3042U, 3442U, 502U, 2325U, 546U, 2409U, 2532U, 3113U, 
    481U, 898U, 2124U, 991U, 3246U, 472U, 204U, 3350U, 
    604U, 5U, 3336U, 3364U, 624U, 3373U, 691U, 3382U, 
    1027U, 2070U, 1224U, 138U, 3343U, 2113U, 189U, 3407U, 
    1004U, 2128U, 197U, 3253U, 1036U, 3326U, 3465U, 2538U, 
    3458U, 313U, 447U, 456U, 75U, 322U, 3304U, 1042U, 
    3015U, 1725U, 813U, 875U, 68U, 3430U, 3157U, 3469U, 
    209U, 343U, 
};

static inline void InitSystemZMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(SystemZInsts, SystemZInstrNameIndices, SystemZInstrNameData, 562);
}

} // End llvm namespace 
#endif // GET_INSTRINFO_MC_DESC


#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct SystemZGenInstrInfo : public TargetInstrInfo {
  explicit SystemZGenInstrInfo(int SO = -1, int DO = -1);
};
} // End llvm namespace 
#endif // GET_INSTRINFO_HEADER


#ifdef GET_INSTRINFO_CTOR
#undef GET_INSTRINFO_CTOR
namespace llvm {
extern const MCInstrDesc SystemZInsts[];
extern const unsigned SystemZInstrNameIndices[];
extern const char SystemZInstrNameData[];
SystemZGenInstrInfo::SystemZGenInstrInfo(int SO, int DO)
  : TargetInstrInfo(SO, DO) {
  InitMCInstrInfo(SystemZInsts, SystemZInstrNameIndices, SystemZInstrNameData, 562);
}
} // End llvm namespace 
#endif // GET_INSTRINFO_CTOR

#ifdef GET_INSTRMAP_INFO
#undef GET_INSTRMAP_INFO
namespace llvm {

namespace SystemZ {

enum PairType {
	PairType_12,
	PairType_20
};

// getDisp12Opcode
int getDisp12Opcode(uint16_t Opcode) {
static const uint16_t getDisp12OpcodeTable[][2] = {
  { SystemZ::AHY, SystemZ::AH },
  { SystemZ::ALY, SystemZ::AL },
  { SystemZ::AY, SystemZ::A },
  { SystemZ::CHY, SystemZ::CH },
  { SystemZ::CLIY, SystemZ::CLI },
  { SystemZ::CLY, SystemZ::CL },
  { SystemZ::CSY, SystemZ::CS },
  { SystemZ::CY, SystemZ::C },
  { SystemZ::IC32Y, SystemZ::IC32 },
  { SystemZ::ICY, SystemZ::IC },
  { SystemZ::LAY, SystemZ::LA },
  { SystemZ::LDY, SystemZ::LD },
  { SystemZ::LEY, SystemZ::LE },
  { SystemZ::LHY, SystemZ::LH },
  { SystemZ::LY, SystemZ::L },
  { SystemZ::MHY, SystemZ::MH },
  { SystemZ::MSY, SystemZ::MS },
  { SystemZ::MVIY, SystemZ::MVI },
  { SystemZ::NIY, SystemZ::NI },
  { SystemZ::NY, SystemZ::N },
  { SystemZ::OIY, SystemZ::OI },
  { SystemZ::OY, SystemZ::O },
  { SystemZ::SHY, SystemZ::SH },
  { SystemZ::SLY, SystemZ::SL },
  { SystemZ::ST32Y, SystemZ::ST32 },
  { SystemZ::STC32Y, SystemZ::STC32 },
  { SystemZ::STCY, SystemZ::STC },
  { SystemZ::STDY, SystemZ::STD },
  { SystemZ::STEY, SystemZ::STE },
  { SystemZ::STH32Y, SystemZ::STH32 },
  { SystemZ::STHY, SystemZ::STH },
  { SystemZ::STY, SystemZ::ST },
  { SystemZ::SY, SystemZ::S },
  { SystemZ::XIY, SystemZ::XI },
  { SystemZ::XY, SystemZ::X },
}; // End of getDisp12OpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 35;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == getDisp12OpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getDisp12OpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getDisp12OpcodeTable[mid][1];
}

// getDisp20Opcode
int getDisp20Opcode(uint16_t Opcode) {
static const uint16_t getDisp20OpcodeTable[][2] = {
  { SystemZ::A, SystemZ::AY },
  { SystemZ::AH, SystemZ::AHY },
  { SystemZ::AL, SystemZ::ALY },
  { SystemZ::C, SystemZ::CY },
  { SystemZ::CH, SystemZ::CHY },
  { SystemZ::CL, SystemZ::CLY },
  { SystemZ::CLI, SystemZ::CLIY },
  { SystemZ::CS, SystemZ::CSY },
  { SystemZ::IC, SystemZ::ICY },
  { SystemZ::IC32, SystemZ::IC32Y },
  { SystemZ::L, SystemZ::LY },
  { SystemZ::LA, SystemZ::LAY },
  { SystemZ::LD, SystemZ::LDY },
  { SystemZ::LE, SystemZ::LEY },
  { SystemZ::LH, SystemZ::LHY },
  { SystemZ::MH, SystemZ::MHY },
  { SystemZ::MS, SystemZ::MSY },
  { SystemZ::MVI, SystemZ::MVIY },
  { SystemZ::N, SystemZ::NY },
  { SystemZ::NI, SystemZ::NIY },
  { SystemZ::O, SystemZ::OY },
  { SystemZ::OI, SystemZ::OIY },
  { SystemZ::S, SystemZ::SY },
  { SystemZ::SH, SystemZ::SHY },
  { SystemZ::SL, SystemZ::SLY },
  { SystemZ::ST, SystemZ::STY },
  { SystemZ::ST32, SystemZ::ST32Y },
  { SystemZ::STC, SystemZ::STCY },
  { SystemZ::STC32, SystemZ::STC32Y },
  { SystemZ::STD, SystemZ::STDY },
  { SystemZ::STE, SystemZ::STEY },
  { SystemZ::STH, SystemZ::STHY },
  { SystemZ::STH32, SystemZ::STH32Y },
  { SystemZ::X, SystemZ::XY },
  { SystemZ::XI, SystemZ::XIY },
}; // End of getDisp20OpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 35;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == getDisp20OpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getDisp20OpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getDisp20OpcodeTable[mid][1];
}

} // End SystemZ namespace
} // End llvm namespace
#endif // GET_INSTRMAP_INFO

