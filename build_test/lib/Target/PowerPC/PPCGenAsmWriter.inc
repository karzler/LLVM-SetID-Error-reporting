/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Assembly Writer Source Fragment                                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void PPCInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
  static const uint32_t OpInfo[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// PROLOG_LABEL
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    4652U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    4645U,	// BUNDLE
    4840U,	// LIFETIME_START
    4632U,	// LIFETIME_END
    9583U,	// ADD4
    8343U,	// ADD4o
    9583U,	// ADD8
    2147493231U,	// ADD8TLS
    8343U,	// ADD8o
    9519U,	// ADDC
    9519U,	// ADDC8
    8299U,	// ADDC8o
    8299U,	// ADDCo
    9698U,	// ADDE
    9698U,	// ADDE8
    8435U,	// ADDE8o
    8435U,	// ADDEo
    268445479U,	// ADDI
    268445479U,	// ADDI8
    268444995U,	// ADDIC
    268444995U,	// ADDIC8
    268443777U,	// ADDICo
    268446345U,	// ADDIS
    268446345U,	// ADDIS8
    4591U,	// ADDISdtprelHA
    4574U,	// ADDISgotTprelHA
    4546U,	// ADDIStlsgdHA
    4560U,	// ADDIStlsldHA
    4534U,	// ADDIStocHA
    4757U,	// ADDIdtprelL
    4720U,	// ADDItlsgdL
    4732U,	// ADDItlsldL
    4710U,	// ADDItocL
    33564143U,	// ADDME
    33564143U,	// ADDME8
    33562882U,	// ADDME8o
    33562882U,	// ADDMEo
    33564172U,	// ADDZE
    33564172U,	// ADDZE8
    33562915U,	// ADDZE8o
    33562915U,	// ADDZEo
    148489U,	// ADJCALLSTACKDOWN
    2376732U,	// ADJCALLSTACKUP
    9648U,	// AND
    9648U,	// AND8
    8397U,	// AND8o
    9526U,	// ANDC
    9526U,	// ANDC8
    8306U,	// ANDC8o
    8306U,	// ANDCo
    536879750U,	// ANDISo
    536879750U,	// ANDISo8
    536879475U,	// ANDIo
    536879475U,	// ANDIo8
    8397U,	// ANDo
    71574458U,	// ATOMIC_CMP_SWAP_I16
    71574436U,	// ATOMIC_CMP_SWAP_I32
    4008U,	// ATOMIC_CMP_SWAP_I64
    4447U,	// ATOMIC_CMP_SWAP_I8
    4205U,	// ATOMIC_LOAD_ADD_I16
    3768U,	// ATOMIC_LOAD_ADD_I32
    3948U,	// ATOMIC_LOAD_ADD_I64
    4386U,	// ATOMIC_LOAD_ADD_I8
    4248U,	// ATOMIC_LOAD_AND_I16
    3811U,	// ATOMIC_LOAD_AND_I32
    4107U,	// ATOMIC_LOAD_AND_I64
    4427U,	// ATOMIC_LOAD_AND_I8
    4226U,	// ATOMIC_LOAD_NAND_I16
    3789U,	// ATOMIC_LOAD_NAND_I32
    3969U,	// ATOMIC_LOAD_NAND_I64
    4406U,	// ATOMIC_LOAD_NAND_I8
    4307U,	// ATOMIC_LOAD_OR_I16
    3870U,	// ATOMIC_LOAD_OR_I32
    4050U,	// ATOMIC_LOAD_OR_I64
    4486U,	// ATOMIC_LOAD_OR_I8
    4184U,	// ATOMIC_LOAD_SUB_I16
    3747U,	// ATOMIC_LOAD_SUB_I32
    3927U,	// ATOMIC_LOAD_SUB_I64
    4352U,	// ATOMIC_LOAD_SUB_I8
    4286U,	// ATOMIC_LOAD_XOR_I16
    3849U,	// ATOMIC_LOAD_XOR_I32
    4029U,	// ATOMIC_LOAD_XOR_I64
    4467U,	// ATOMIC_LOAD_XOR_I8
    4269U,	// ATOMIC_SWAP_I16
    3832U,	// ATOMIC_SWAP_I32
    3991U,	// ATOMIC_SWAP_I64
    4518U,	// ATOMIC_SWAP_I8
    25683U,	// B
    6591223U,	// BCC
    430839U,	// BCCTR
    430839U,	// BCCTR8
    561911U,	// BCCTRL
    561911U,	// BCCTRL8
    692983U,	// BCLR
    24593U,	// BCLalways
    4932U,	// BCTR
    4932U,	// BCTR8
    4900U,	// BCTRL
    4900U,	// BCTRL8
    28265U,	// BDNZ
    28265U,	// BDNZ8
    4925U,	// BDNZLR
    4925U,	// BDNZLR8
    28234U,	// BDZ
    28234U,	// BDZ8
    4919U,	// BDZLR
    4919U,	// BDZLR8
    141199U,	// BL
    141199U,	// BL8
    796559U,	// BL8_NOP
    927631U,	// BL8_NOP_TLSGD
    927631U,	// BL8_NOP_TLSLD
    173125U,	// BLA
    173125U,	// BLA8
    828485U,	// BLA8_NOP
    4915U,	// BLR
    9659U,	// CMPD
    268445499U,	// CMPDI
    9635U,	// CMPLD
    536880941U,	// CMPLDI
    11297U,	// CMPLW
    536881012U,	// CMPLWI
    11316U,	// CMPW
    268445570U,	// CMPWI
    33564122U,	// CNTLZD
    33562858U,	// CNTLZDo
    33565901U,	// CNTLZW
    33563470U,	// CNTLZWo
    4170U,	// CR6SET
    4156U,	// CR6UNSET
    11253U,	// CREQV
    10591U,	// CROR
    8399861U,	// CRSET
    8399210U,	// CRUNSET
    50234U,	// DCBA
    50715U,	// DCBF
    50964U,	// DCBI
    52042U,	// DCBST
    52029U,	// DCBT
    52054U,	// DCBTST
    52799U,	// DCBZ
    51149U,	// DCBZL
    9684U,	// DIVD
    11175U,	// DIVDU
    8907U,	// DIVDUo
    8419U,	// DIVDo
    11463U,	// DIVW
    11222U,	// DIVWU
    8924U,	// DIVWUo
    9031U,	// DIVWo
    60067U,	// DSS
    4893U,	// DSSALL
    68433U,	// DST
    68433U,	// DST64
    68446U,	// DSTST
    68446U,	// DSTST64
    68459U,	// DSTSTT
    68459U,	// DSTSTT64
    68453U,	// DSTT
    68453U,	// DSTT64
    4606U,	// DYNALLOC
    4327U,	// DYNALLOC8
    3890U,	// EH_SjLj_LongJmp32
    4070U,	// EH_SjLj_LongJmp64
    3909U,	// EH_SjLj_SetJmp32
    4089U,	// EH_SjLj_SetJmp64
    24577U,	// EH_SjLj_Setup
    11255U,	// EQV
    11255U,	// EQV8
    8939U,	// EQV8o
    8939U,	// EQVo
    33563840U,	// EXTSB
    33563840U,	// EXTSB8
    33562677U,	// EXTSB8o
    33562677U,	// EXTSBo
    33564346U,	// EXTSH
    33564346U,	// EXTSH8
    33562957U,	// EXTSH8o
    33562957U,	// EXTSHo
    33565796U,	// EXTSW
    33565796U,	// EXTSW_32_64
    33563423U,	// EXTSW_32_64o
    33563423U,	// EXTSWo
    33565074U,	// FABSD
    33563174U,	// FABSDo
    33565074U,	// FABSS
    33563174U,	// FABSSo
    9582U,	// FADD
    10735U,	// FADDS
    8784U,	// FADDSo
    8342U,	// FADDo
    0U,	// FADDrtz
    33564053U,	// FCFID
    33565191U,	// FCFIDS
    33563243U,	// FCFIDSo
    33565588U,	// FCFIDU
    33565378U,	// FCFIDUS
    33563295U,	// FCFIDUSo
    33563330U,	// FCFIDUo
    33562806U,	// FCFIDo
    11188U,	// FCMPUD
    11188U,	// FCMPUS
    33566319U,	// FCTIDUZ
    33563511U,	// FCTIDUZo
    33566287U,	// FCTIDZ
    33563495U,	// FCTIDZo
    33566328U,	// FCTIWUZ
    33563521U,	// FCTIWUZo
    33566337U,	// FCTIWZ
    33563531U,	// FCTIWZo
    11247U,	// FDIV
    10991U,	// FDIVS
    8873U,	// FDIVSo
    8932U,	// FDIVo
    9588U,	// FMADD
    10742U,	// FMADDS
    8792U,	// FMADDSo
    8349U,	// FMADDo
    33565012U,	// FMR
    33563156U,	// FMRo
    9486U,	// FMSUB
    10718U,	// FMSUBS
    8765U,	// FMSUBSo
    8271U,	// FMSUBo
    10170U,	// FMUL
    10908U,	// FMULS
    8846U,	// FMULSo
    8620U,	// FMULo
    33565080U,	// FNABSD
    33563181U,	// FNABSDo
    33565080U,	// FNABSS
    33563181U,	// FNABSSo
    33564227U,	// FNEGD
    33562939U,	// FNEGDo
    33564227U,	// FNEGS
    33562939U,	// FNEGSo
    9595U,	// FNMADD
    10750U,	// FNMADDS
    8801U,	// FNMADDSo
    8357U,	// FNMADDo
    9493U,	// FNMSUB
    10726U,	// FNMSUBS
    8774U,	// FNMSUBSo
    8279U,	// FNMSUBo
    33564158U,	// FRE
    33565199U,	// FRES
    33563252U,	// FRESo
    33562899U,	// FREo
    33564722U,	// FRIMD
    33563059U,	// FRIMDo
    33564722U,	// FRIMS
    33563059U,	// FRIMSo
    33564793U,	// FRIND
    33563083U,	// FRINDo
    4937U,	// FRINDrint
    33564793U,	// FRINS
    33563083U,	// FRINSo
    4948U,	// FRINSrint
    33564945U,	// FRIPD
    33563133U,	// FRIPDo
    33564945U,	// FRIPS
    33563133U,	// FRIPSo
    33566307U,	// FRIZD
    33563504U,	// FRIZDo
    33566307U,	// FRIZS
    33563504U,	// FRIZSo
    33564951U,	// FRSP
    33563140U,	// FRSPo
    33564163U,	// FRSQRTE
    33565205U,	// FRSQRTES
    33563259U,	// FRSQRTESo
    33562905U,	// FRSQRTEo
    10146U,	// FSELD
    8613U,	// FSELDo
    10146U,	// FSELS
    8613U,	// FSELSo
    33565507U,	// FSQRT
    33565370U,	// FSQRTS
    33563286U,	// FSQRTSo
    33563313U,	// FSQRTo
    9480U,	// FSUB
    10711U,	// FSUBS
    8757U,	// FSUBSo
    8264U,	// FSUBo
    4806U,	// GETtlsADDR
    4792U,	// GETtlsldADDR
    50970U,	// ICBI
    10152U,	// ISEL
    10152U,	// ISEL8
    4857U,	// ISYNC
    10495046U,	// LA
    12594757U,	// LBZ
    12594757U,	// LBZ8
    14691293U,	// LBZU
    14691293U,	// LBZU8
    16788968U,	// LBZUX
    16788968U,	// LBZUX8
    37760549U,	// LBZX
    37760549U,	// LBZX8
    12592543U,	// LD
    37760324U,	// LDARX
    37760338U,	// LDBRX
    14691228U,	// LDU
    16788919U,	// LDUX
    37760267U,	// LDX
    4744U,	// LDgotTprelL
    1060494U,	// LDinto_toc
    4863U,	// LDtoc
    4830U,	// LDtocCPT
    4692U,	// LDtocJTI
    4702U,	// LDtocL
    3735U,	// LDtoc_restore
    12592515U,	// LFD
    14691199U,	// LFDU
    16788904U,	// LFDUX
    37760254U,	// LFDX
    37760219U,	// LFIWAX
    37760561U,	// LFIWZX
    12593701U,	// LFS
    14691259U,	// LFSU
    16788946U,	// LFSUX
    37760390U,	// LFSX
    12592192U,	// LHA
    12592192U,	// LHA8
    14691187U,	// LHAU
    14691187U,	// LHAU8
    16788883U,	// LHAUX
    16788883U,	// LHAUX8
    37760213U,	// LHAX
    37760213U,	// LHAX8
    37760353U,	// LHBRX
    12594775U,	// LHZ
    12594775U,	// LHZ8
    14691299U,	// LHZU
    14691299U,	// LHZU8
    16788975U,	// LHZUX
    16788975U,	// LHZUX8
    37760555U,	// LHZX
    37760555U,	// LHZX8
    18884427U,	// LI
    18884427U,	// LI8
    18885264U,	// LIS
    18885264U,	// LIS8
    37760233U,	// LVEBX
    37760278U,	// LVEHX
    37760520U,	// LVEWX
    37758900U,	// LVSL
    37759358U,	// LVSR
    37760509U,	// LVX
    37758912U,	// LVXL
    12592202U,	// LWA
    37760331U,	// LWARX
    16788890U,	// LWAUX
    37760227U,	// LWAX
    37760368U,	// LWBRX
    12594825U,	// LWZ
    12594825U,	// LWZ8
    14691305U,	// LWZU
    14691305U,	// LWZU8
    16788982U,	// LWZUX
    16788982U,	// LWZUX8
    37760569U,	// LWZX
    37760569U,	// LWZX8
    33564199U,	// MCRF
    141610U,	// MFCR
    141610U,	// MFCR8
    4870U,	// MFCR8pseud
    4882U,	// MFCRpseud
    141700U,	// MFCTR
    141700U,	// MFCTR8
    141855U,	// MFFS
    141640U,	// MFLR
    141640U,	// MFLR8
    20981293U,	// MFOCRF
    1190263U,	// MFTB8
    1321335U,	// MFVRSAVE
    1321335U,	// MFVRSAVEv
    141624U,	// MFVSCR
    75317U,	// MTCRF
    75317U,	// MTCRF8
    141707U,	// MTCTR
    141707U,	// MTCTR8
    141707U,	// MTCTR8loop
    141707U,	// MTCTRloop
    82836U,	// MTFSB0
    82844U,	// MTFSB1
    33564220U,	// MTFSF
    141646U,	// MTLR
    141646U,	// MTLR8
    139294U,	// MTVRSAVE
    221214U,	// MTVRSAVEv
    141632U,	// MTVSCR
    9614U,	// MULHD
    11148U,	// MULHDU
    8889U,	// MULHDUo
    8366U,	// MULHDo
    11275U,	// MULHW
    11208U,	// MULHWU
    8915U,	// MULHWUo
    8952U,	// MULHWo
    9628U,	// MULLD
    8382U,	// MULLDo
    268445512U,	// MULLI
    11290U,	// MULLW
    8960U,	// MULLWo
    4818U,	// MovePCtoLR
    4505U,	// MovePCtoLR8
    9647U,	// NAND
    9647U,	// NAND8
    8396U,	// NAND8o
    8396U,	// NANDo
    33564228U,	// NEG
    33564228U,	// NEG8
    33562940U,	// NEG8o
    33562940U,	// NEGo
    4911U,	// NOP
    10586U,	// NOR
    10586U,	// NOR8
    8730U,	// NOR8o
    8730U,	// NORo
    10587U,	// OR
    10587U,	// OR8
    8731U,	// OR8o
    9554U,	// ORC
    9554U,	// ORC8
    8329U,	// ORC8o
    8329U,	// ORCo
    536881000U,	// ORI
    536881000U,	// ORI8
    536881814U,	// ORIS
    536881814U,	// ORIS8
    8731U,	// ORo
    33564102U,	// POPCNTD
    33562841U,	// POPCNTDo
    33565819U,	// POPCNTW
    33563431U,	// POPCNTWo
    4770U,	// RESTORE_CR
    4662U,	// RESTORE_VRSAVE
    10131U,	// RLDCL
    8596U,	// RLDCLo
    805316506U,	// RLDICL
    805314972U,	// RLDICLo
    805316912U,	// RLDICR
    805315083U,	// RLDICRo
    123742031U,	// RLDIMI
    123740538U,	// RLDIMIo
    157296471U,	// RLWIMI
    157294979U,	// RLWIMIo
    1073752120U,	// RLWINM
    1073752120U,	// RLWINM8
    1073750458U,	// RLWINM8o
    1073750458U,	// RLWINMo
    10304U,	// RLWNM
    8643U,	// RLWNMo
    140631U,	// SC
    4128U,	// SELECT_CC_F4
    4338U,	// SELECT_CC_F8
    4142U,	// SELECT_CC_I4
    4372U,	// SELECT_CC_I8
    4616U,	// SELECT_CC_VRRC
    9642U,	// SLD
    805316405U,	// SLDI
    8390U,	// SLDo
    11311U,	// SLW
    1073751932U,	// SLWI
    8968U,	// SLWo
    4782U,	// SPILL_CR
    4678U,	// SPILL_VRSAVE
    9576U,	// SRAD
    805316384U,	// SRADI
    805314923U,	// SRADIo
    8335U,	// SRADo
    11261U,	// SRAW
    1073751917U,	// SRAWI
    1073750412U,	// SRAWIo
    8945U,	// SRAWo
    9665U,	// SRD
    805316418U,	// SRDI
    8403U,	// SRDo
    11323U,	// SRW
    1073751945U,	// SRWI
    8974U,	// SRWo
    12592343U,	// STB
    12592343U,	// STB8
    14773113U,	// STBU
    14773113U,	// STBU8
    16870817U,	// STBUX
    16870817U,	// STBUX8
    37760248U,	// STBX
    37760248U,	// STBX8
    12592591U,	// STD
    37760345U,	// STDBRX
    37757783U,	// STDCX
    14773153U,	// STDU
    16870845U,	// STDUX
    37760272U,	// STDX
    12592520U,	// STFD
    14773125U,	// STFDU
    16870831U,	// STFDUX
    37760260U,	// STFDX
    37760535U,	// STFIWX
    12593706U,	// STFS
    14773185U,	// STFSU
    16870873U,	// STFSUX
    37760396U,	// STFSX
    12592849U,	// STH
    12592849U,	// STH8
    37760360U,	// STHBRX
    14773166U,	// STHU
    14773166U,	// STHU8
    16870859U,	// STHUX
    16870859U,	// STHUX8
    37760293U,	// STHX
    37760293U,	// STHX8
    37760240U,	// STVEBX
    37760285U,	// STVEHX
    37760527U,	// STVEWX
    37760514U,	// STVX
    37758918U,	// STVXL
    12594308U,	// STW
    12594308U,	// STW8
    37760375U,	// STWBRX
    37757791U,	// STWCX
    14773200U,	// STWU
    14773200U,	// STWU8
    16870881U,	// STWUX
    16870881U,	// STWUX8
    37760543U,	// STWX
    37760543U,	// STWX8
    9761U,	// SUBF
    9761U,	// SUBF8
    8500U,	// SUBF8o
    9532U,	// SUBFC
    9532U,	// SUBFC8
    8313U,	// SUBFC8o
    8313U,	// SUBFCo
    9704U,	// SUBFE
    9704U,	// SUBFE8
    8442U,	// SUBFE8o
    8442U,	// SUBFEo
    268445002U,	// SUBFIC
    268445002U,	// SUBFIC8
    33564150U,	// SUBFME
    33564150U,	// SUBFME8
    33562890U,	// SUBFME8o
    33562890U,	// SUBFMEo
    33564179U,	// SUBFZE
    33564179U,	// SUBFZE8
    33562923U,	// SUBFZE8o
    33562923U,	// SUBFZEo
    8500U,	// SUBFo
    4858U,	// SYNC
    140371U,	// TAILB
    140371U,	// TAILB8
    173116U,	// TAILBA
    173116U,	// TAILBA8
    4932U,	// TAILBCTR
    4932U,	// TAILBCTR8
    33858605U,	// TCRETURNai
    33858512U,	// TCRETURNai8
    33826139U,	// TCRETURNdi
    33825758U,	// TCRETURNdi8
    33827101U,	// TCRETURNri
    33825772U,	// TCRETURNri8
    4906U,	// TRAP
    33563642U,	// UPDATE_VRSAVE
    11410U,	// VADDCUW
    10415U,	// VADDFP
    10674U,	// VADDSBS
    10842U,	// VADDSHS
    11017U,	// VADDSWS
    10215U,	// VADDUBM
    10702U,	// VADDUBS
    10264U,	// VADDUHM
    10870U,	// VADDUHS
    10345U,	// VADDUWM
    11044U,	// VADDUWS
    9653U,	// VAND
    9525U,	// VANDC
    9345U,	// VAVGSB
    9851U,	// VAVGSH
    11328U,	// VAVGSW
    9445U,	// VAVGUB
    9951U,	// VAVGUH
    11419U,	// VAVGUW
    190852479U,	// VCFSX
    201338239U,	// VCFSX_0
    190852548U,	// VCFUX
    201338308U,	// VCFUX_0
    10379U,	// VCMPBFP
    8658U,	// VCMPBFPo
    10478U,	// VCMPEQFP
    8679U,	// VCMPEQFPo
    9470U,	// VCMPEQUB
    8253U,	// VCMPEQUBo
    9976U,	// VCMPEQUH
    8533U,	// VCMPEQUHo
    11435U,	// VCMPEQUW
    9009U,	// VCMPEQUWo
    10432U,	// VCMPGEFP
    8668U,	// VCMPGEFPo
    10488U,	// VCMPGTFP
    8690U,	// VCMPGTFPo
    9398U,	// VCMPGTSB
    8234U,	// VCMPGTSBo
    9904U,	// VCMPGTSH
    8514U,	// VCMPGTSHo
    11354U,	// VCMPGTSW
    8980U,	// VCMPGTSWo
    9501U,	// VCMPGTUB
    8288U,	// VCMPGTUBo
    9986U,	// VCMPGTUH
    8544U,	// VCMPGTUHo
    11445U,	// VCMPGTUW
    9020U,	// VCMPGTUWo
    190851885U,	// VCTSXS
    201337645U,	// VCTSXS_0
    190851893U,	// VCTUXS
    201337653U,	// VCTUXS_0
    33564881U,	// VEXPTEFP
    33564855U,	// VLOGEFP
    10406U,	// VMADDFP
    10498U,	// VMAXFP
    9415U,	// VMAXSB
    9921U,	// VMAXSH
    11371U,	// VMAXSW
    9511U,	// VMAXUB
    9996U,	// VMAXUH
    11455U,	// VMAXUW
    10819U,	// VMHADDSHS
    10830U,	// VMHRADDSHS
    10470U,	// VMINFP
    9381U,	// VMINSB
    9887U,	// VMINSH
    11346U,	// VMINSW
    9453U,	// VMINUB
    9959U,	// VMINUH
    11427U,	// VMINUW
    10253U,	// VMLADDUHM
    9302U,	// VMRGHB
    9808U,	// VMRGHH
    11267U,	// VMRGHW
    9310U,	// VMRGLB
    9816U,	// VMRGLH
    11282U,	// VMRGLW
    10196U,	// VMSUMMBM
    10234U,	// VMSUMSHM
    10851U,	// VMSUMSHS
    10224U,	// VMSUMUBM
    10273U,	// VMSUMUHM
    10879U,	// VMSUMUHS
    9336U,	// VMULESB
    9842U,	// VMULESH
    9436U,	// VMULEUB
    9942U,	// VMULEUH
    9389U,	// VMULOSB
    9895U,	// VMULOSH
    9461U,	// VMULOUB
    9967U,	// VMULOUH
    10388U,	// VNMSUBFP
    10585U,	// VNOR
    10597U,	// VOR
    10311U,	// VPERM
    11572U,	// VPKPX
    10920U,	// VPKSHSS
    10955U,	// VPKSHUS
    10929U,	// VPKSWSS
    10973U,	// VPKSWUS
    10318U,	// VPKUHUM
    10964U,	// VPKUHUS
    10327U,	// VPKUWUM
    10982U,	// VPKUWUS
    33564874U,	// VREFP
    33564715U,	// VRFIM
    33564786U,	// VRFIN
    33564938U,	// VRFIP
    33566300U,	// VRFIZ
    9318U,	// VRLB
    9824U,	// VRLH
    11304U,	// VRLW
    33564891U,	// VRSQRTEFP
    10158U,	// VSEL
    10165U,	// VSL
    9324U,	// VSLB
    10079U,	// VSLDOI
    9830U,	// VSLH
    10367U,	// VSLO
    11310U,	// VSLW
    190850255U,	// VSPLTB
    190850761U,	// VSPLTH
    25175186U,	// VSPLTISB
    25175692U,	// VSPLTISH
    25177160U,	// VSPLTISW
    190852211U,	// VSPLTW
    10623U,	// VSR
    9295U,	// VSRAB
    9801U,	// VSRAH
    11260U,	// VSRAW
    9330U,	// VSRB
    9836U,	// VSRH
    10373U,	// VSRO
    11322U,	// VSRW
    11401U,	// VSUBCUW
    10398U,	// VSUBFP
    10665U,	// VSUBSBS
    10810U,	// VSUBSHS
    11008U,	// VSUBSWS
    10206U,	// VSUBUBM
    10693U,	// VSUBUBS
    10244U,	// VSUBUHM
    10861U,	// VSUBUHS
    10336U,	// VSUBUWM
    11035U,	// VSUBUWS
    10998U,	// VSUM2SWS
    10655U,	// VSUM4SBS
    10800U,	// VSUM4SHS
    10683U,	// VSUM4UBS
    11026U,	// VSUMSWS
    33565995U,	// VUPKHPX
    33563785U,	// VUPKHSB
    33564291U,	// VUPKHSH
    33566011U,	// VUPKLPX
    33563804U,	// VUPKLSB
    33564310U,	// VUPKLSH
    10609U,	// VXOR
    8399217U,	// V_SET0
    1453128U,	// V_SETALLONES
    10604U,	// XOR
    10604U,	// XOR8
    8736U,	// XOR8o
    536880999U,	// XORI
    536880999U,	// XORI8
    536881813U,	// XORIS
    536881813U,	// XORIS8
    8736U,	// XORo
    0U
  };

  static const uint8_t OpInfo2[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// PROLOG_LABEL
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// ADD4
    0U,	// ADD4o
    0U,	// ADD8
    0U,	// ADD8TLS
    0U,	// ADD8o
    0U,	// ADDC
    0U,	// ADDC8
    0U,	// ADDC8o
    0U,	// ADDCo
    0U,	// ADDE
    0U,	// ADDE8
    0U,	// ADDE8o
    0U,	// ADDEo
    0U,	// ADDI
    0U,	// ADDI8
    0U,	// ADDIC
    0U,	// ADDIC8
    0U,	// ADDICo
    0U,	// ADDIS
    0U,	// ADDIS8
    0U,	// ADDISdtprelHA
    0U,	// ADDISgotTprelHA
    0U,	// ADDIStlsgdHA
    0U,	// ADDIStlsldHA
    0U,	// ADDIStocHA
    0U,	// ADDIdtprelL
    0U,	// ADDItlsgdL
    0U,	// ADDItlsldL
    0U,	// ADDItocL
    0U,	// ADDME
    0U,	// ADDME8
    0U,	// ADDME8o
    0U,	// ADDMEo
    0U,	// ADDZE
    0U,	// ADDZE8
    0U,	// ADDZE8o
    0U,	// ADDZEo
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// AND
    0U,	// AND8
    0U,	// AND8o
    0U,	// ANDC
    0U,	// ANDC8
    0U,	// ANDC8o
    0U,	// ANDCo
    0U,	// ANDISo
    0U,	// ANDISo8
    0U,	// ANDIo
    0U,	// ANDIo8
    0U,	// ANDo
    0U,	// ATOMIC_CMP_SWAP_I16
    0U,	// ATOMIC_CMP_SWAP_I32
    0U,	// ATOMIC_CMP_SWAP_I64
    0U,	// ATOMIC_CMP_SWAP_I8
    0U,	// ATOMIC_LOAD_ADD_I16
    0U,	// ATOMIC_LOAD_ADD_I32
    0U,	// ATOMIC_LOAD_ADD_I64
    0U,	// ATOMIC_LOAD_ADD_I8
    0U,	// ATOMIC_LOAD_AND_I16
    0U,	// ATOMIC_LOAD_AND_I32
    0U,	// ATOMIC_LOAD_AND_I64
    0U,	// ATOMIC_LOAD_AND_I8
    0U,	// ATOMIC_LOAD_NAND_I16
    0U,	// ATOMIC_LOAD_NAND_I32
    0U,	// ATOMIC_LOAD_NAND_I64
    0U,	// ATOMIC_LOAD_NAND_I8
    0U,	// ATOMIC_LOAD_OR_I16
    0U,	// ATOMIC_LOAD_OR_I32
    0U,	// ATOMIC_LOAD_OR_I64
    0U,	// ATOMIC_LOAD_OR_I8
    0U,	// ATOMIC_LOAD_SUB_I16
    0U,	// ATOMIC_LOAD_SUB_I32
    0U,	// ATOMIC_LOAD_SUB_I64
    0U,	// ATOMIC_LOAD_SUB_I8
    0U,	// ATOMIC_LOAD_XOR_I16
    0U,	// ATOMIC_LOAD_XOR_I32
    0U,	// ATOMIC_LOAD_XOR_I64
    0U,	// ATOMIC_LOAD_XOR_I8
    0U,	// ATOMIC_SWAP_I16
    0U,	// ATOMIC_SWAP_I32
    0U,	// ATOMIC_SWAP_I64
    0U,	// ATOMIC_SWAP_I8
    0U,	// B
    0U,	// BCC
    0U,	// BCCTR
    0U,	// BCCTR8
    0U,	// BCCTRL
    0U,	// BCCTRL8
    0U,	// BCLR
    0U,	// BCLalways
    0U,	// BCTR
    0U,	// BCTR8
    0U,	// BCTRL
    0U,	// BCTRL8
    0U,	// BDNZ
    0U,	// BDNZ8
    0U,	// BDNZLR
    0U,	// BDNZLR8
    0U,	// BDZ
    0U,	// BDZ8
    0U,	// BDZLR
    0U,	// BDZLR8
    0U,	// BL
    0U,	// BL8
    0U,	// BL8_NOP
    0U,	// BL8_NOP_TLSGD
    0U,	// BL8_NOP_TLSLD
    0U,	// BLA
    0U,	// BLA8
    0U,	// BLA8_NOP
    0U,	// BLR
    0U,	// CMPD
    0U,	// CMPDI
    0U,	// CMPLD
    0U,	// CMPLDI
    0U,	// CMPLW
    0U,	// CMPLWI
    0U,	// CMPW
    0U,	// CMPWI
    0U,	// CNTLZD
    0U,	// CNTLZDo
    0U,	// CNTLZW
    0U,	// CNTLZWo
    0U,	// CR6SET
    0U,	// CR6UNSET
    0U,	// CREQV
    0U,	// CROR
    0U,	// CRSET
    0U,	// CRUNSET
    0U,	// DCBA
    0U,	// DCBF
    0U,	// DCBI
    0U,	// DCBST
    0U,	// DCBT
    0U,	// DCBTST
    0U,	// DCBZ
    0U,	// DCBZL
    0U,	// DIVD
    0U,	// DIVDU
    0U,	// DIVDUo
    0U,	// DIVDo
    0U,	// DIVW
    0U,	// DIVWU
    0U,	// DIVWUo
    0U,	// DIVWo
    0U,	// DSS
    0U,	// DSSALL
    0U,	// DST
    0U,	// DST64
    0U,	// DSTST
    0U,	// DSTST64
    0U,	// DSTSTT
    0U,	// DSTSTT64
    0U,	// DSTT
    0U,	// DSTT64
    0U,	// DYNALLOC
    0U,	// DYNALLOC8
    0U,	// EH_SjLj_LongJmp32
    0U,	// EH_SjLj_LongJmp64
    0U,	// EH_SjLj_SetJmp32
    0U,	// EH_SjLj_SetJmp64
    0U,	// EH_SjLj_Setup
    0U,	// EQV
    0U,	// EQV8
    0U,	// EQV8o
    0U,	// EQVo
    0U,	// EXTSB
    0U,	// EXTSB8
    0U,	// EXTSB8o
    0U,	// EXTSBo
    0U,	// EXTSH
    0U,	// EXTSH8
    0U,	// EXTSH8o
    0U,	// EXTSHo
    0U,	// EXTSW
    0U,	// EXTSW_32_64
    0U,	// EXTSW_32_64o
    0U,	// EXTSWo
    0U,	// FABSD
    0U,	// FABSDo
    0U,	// FABSS
    0U,	// FABSSo
    0U,	// FADD
    0U,	// FADDS
    0U,	// FADDSo
    0U,	// FADDo
    0U,	// FADDrtz
    0U,	// FCFID
    0U,	// FCFIDS
    0U,	// FCFIDSo
    0U,	// FCFIDU
    0U,	// FCFIDUS
    0U,	// FCFIDUSo
    0U,	// FCFIDUo
    0U,	// FCFIDo
    0U,	// FCMPUD
    0U,	// FCMPUS
    0U,	// FCTIDUZ
    0U,	// FCTIDUZo
    0U,	// FCTIDZ
    0U,	// FCTIDZo
    0U,	// FCTIWUZ
    0U,	// FCTIWUZo
    0U,	// FCTIWZ
    0U,	// FCTIWZo
    0U,	// FDIV
    0U,	// FDIVS
    0U,	// FDIVSo
    0U,	// FDIVo
    1U,	// FMADD
    1U,	// FMADDS
    1U,	// FMADDSo
    1U,	// FMADDo
    0U,	// FMR
    0U,	// FMRo
    1U,	// FMSUB
    1U,	// FMSUBS
    1U,	// FMSUBSo
    1U,	// FMSUBo
    0U,	// FMUL
    0U,	// FMULS
    0U,	// FMULSo
    0U,	// FMULo
    0U,	// FNABSD
    0U,	// FNABSDo
    0U,	// FNABSS
    0U,	// FNABSSo
    0U,	// FNEGD
    0U,	// FNEGDo
    0U,	// FNEGS
    0U,	// FNEGSo
    1U,	// FNMADD
    1U,	// FNMADDS
    1U,	// FNMADDSo
    1U,	// FNMADDo
    1U,	// FNMSUB
    1U,	// FNMSUBS
    1U,	// FNMSUBSo
    1U,	// FNMSUBo
    0U,	// FRE
    0U,	// FRES
    0U,	// FRESo
    0U,	// FREo
    0U,	// FRIMD
    0U,	// FRIMDo
    0U,	// FRIMS
    0U,	// FRIMSo
    0U,	// FRIND
    0U,	// FRINDo
    0U,	// FRINDrint
    0U,	// FRINS
    0U,	// FRINSo
    0U,	// FRINSrint
    0U,	// FRIPD
    0U,	// FRIPDo
    0U,	// FRIPS
    0U,	// FRIPSo
    0U,	// FRIZD
    0U,	// FRIZDo
    0U,	// FRIZS
    0U,	// FRIZSo
    0U,	// FRSP
    0U,	// FRSPo
    0U,	// FRSQRTE
    0U,	// FRSQRTES
    0U,	// FRSQRTESo
    0U,	// FRSQRTEo
    1U,	// FSELD
    1U,	// FSELDo
    1U,	// FSELS
    1U,	// FSELSo
    0U,	// FSQRT
    0U,	// FSQRTS
    0U,	// FSQRTSo
    0U,	// FSQRTo
    0U,	// FSUB
    0U,	// FSUBS
    0U,	// FSUBSo
    0U,	// FSUBo
    0U,	// GETtlsADDR
    0U,	// GETtlsldADDR
    0U,	// ICBI
    1U,	// ISEL
    1U,	// ISEL8
    0U,	// ISYNC
    0U,	// LA
    0U,	// LBZ
    0U,	// LBZ8
    0U,	// LBZU
    0U,	// LBZU8
    0U,	// LBZUX
    0U,	// LBZUX8
    0U,	// LBZX
    0U,	// LBZX8
    0U,	// LD
    0U,	// LDARX
    0U,	// LDBRX
    0U,	// LDU
    0U,	// LDUX
    0U,	// LDX
    0U,	// LDgotTprelL
    0U,	// LDinto_toc
    0U,	// LDtoc
    0U,	// LDtocCPT
    0U,	// LDtocJTI
    0U,	// LDtocL
    0U,	// LDtoc_restore
    0U,	// LFD
    0U,	// LFDU
    0U,	// LFDUX
    0U,	// LFDX
    0U,	// LFIWAX
    0U,	// LFIWZX
    0U,	// LFS
    0U,	// LFSU
    0U,	// LFSUX
    0U,	// LFSX
    0U,	// LHA
    0U,	// LHA8
    0U,	// LHAU
    0U,	// LHAU8
    0U,	// LHAUX
    0U,	// LHAUX8
    0U,	// LHAX
    0U,	// LHAX8
    0U,	// LHBRX
    0U,	// LHZ
    0U,	// LHZ8
    0U,	// LHZU
    0U,	// LHZU8
    0U,	// LHZUX
    0U,	// LHZUX8
    0U,	// LHZX
    0U,	// LHZX8
    0U,	// LI
    0U,	// LI8
    0U,	// LIS
    0U,	// LIS8
    0U,	// LVEBX
    0U,	// LVEHX
    0U,	// LVEWX
    0U,	// LVSL
    0U,	// LVSR
    0U,	// LVX
    0U,	// LVXL
    0U,	// LWA
    0U,	// LWARX
    0U,	// LWAUX
    0U,	// LWAX
    0U,	// LWBRX
    0U,	// LWZ
    0U,	// LWZ8
    0U,	// LWZU
    0U,	// LWZU8
    0U,	// LWZUX
    0U,	// LWZUX8
    0U,	// LWZX
    0U,	// LWZX8
    0U,	// MCRF
    0U,	// MFCR
    0U,	// MFCR8
    0U,	// MFCR8pseud
    0U,	// MFCRpseud
    0U,	// MFCTR
    0U,	// MFCTR8
    0U,	// MFFS
    0U,	// MFLR
    0U,	// MFLR8
    0U,	// MFOCRF
    0U,	// MFTB8
    0U,	// MFVRSAVE
    0U,	// MFVRSAVEv
    0U,	// MFVSCR
    0U,	// MTCRF
    0U,	// MTCRF8
    0U,	// MTCTR
    0U,	// MTCTR8
    0U,	// MTCTR8loop
    0U,	// MTCTRloop
    0U,	// MTFSB0
    0U,	// MTFSB1
    0U,	// MTFSF
    0U,	// MTLR
    0U,	// MTLR8
    0U,	// MTVRSAVE
    0U,	// MTVRSAVEv
    0U,	// MTVSCR
    0U,	// MULHD
    0U,	// MULHDU
    0U,	// MULHDUo
    0U,	// MULHDo
    0U,	// MULHW
    0U,	// MULHWU
    0U,	// MULHWUo
    0U,	// MULHWo
    0U,	// MULLD
    0U,	// MULLDo
    0U,	// MULLI
    0U,	// MULLW
    0U,	// MULLWo
    0U,	// MovePCtoLR
    0U,	// MovePCtoLR8
    0U,	// NAND
    0U,	// NAND8
    0U,	// NAND8o
    0U,	// NANDo
    0U,	// NEG
    0U,	// NEG8
    0U,	// NEG8o
    0U,	// NEGo
    0U,	// NOP
    0U,	// NOR
    0U,	// NOR8
    0U,	// NOR8o
    0U,	// NORo
    0U,	// OR
    0U,	// OR8
    0U,	// OR8o
    0U,	// ORC
    0U,	// ORC8
    0U,	// ORC8o
    0U,	// ORCo
    0U,	// ORI
    0U,	// ORI8
    0U,	// ORIS
    0U,	// ORIS8
    0U,	// ORo
    0U,	// POPCNTD
    0U,	// POPCNTDo
    0U,	// POPCNTW
    0U,	// POPCNTWo
    0U,	// RESTORE_CR
    0U,	// RESTORE_VRSAVE
    3U,	// RLDCL
    3U,	// RLDCLo
    3U,	// RLDICL
    3U,	// RLDICLo
    3U,	// RLDICR
    3U,	// RLDICRo
    0U,	// RLDIMI
    0U,	// RLDIMIo
    0U,	// RLWIMI
    0U,	// RLWIMIo
    5U,	// RLWINM
    5U,	// RLWINM8
    5U,	// RLWINM8o
    5U,	// RLWINMo
    5U,	// RLWNM
    5U,	// RLWNMo
    0U,	// SC
    0U,	// SELECT_CC_F4
    0U,	// SELECT_CC_F8
    0U,	// SELECT_CC_I4
    0U,	// SELECT_CC_I8
    0U,	// SELECT_CC_VRRC
    0U,	// SLD
    0U,	// SLDI
    0U,	// SLDo
    0U,	// SLW
    0U,	// SLWI
    0U,	// SLWo
    0U,	// SPILL_CR
    0U,	// SPILL_VRSAVE
    0U,	// SRAD
    0U,	// SRADI
    0U,	// SRADIo
    0U,	// SRADo
    0U,	// SRAW
    0U,	// SRAWI
    0U,	// SRAWIo
    0U,	// SRAWo
    0U,	// SRD
    0U,	// SRDI
    0U,	// SRDo
    0U,	// SRW
    0U,	// SRWI
    0U,	// SRWo
    0U,	// STB
    0U,	// STB8
    0U,	// STBU
    0U,	// STBU8
    0U,	// STBUX
    0U,	// STBUX8
    0U,	// STBX
    0U,	// STBX8
    0U,	// STD
    0U,	// STDBRX
    0U,	// STDCX
    0U,	// STDU
    0U,	// STDUX
    0U,	// STDX
    0U,	// STFD
    0U,	// STFDU
    0U,	// STFDUX
    0U,	// STFDX
    0U,	// STFIWX
    0U,	// STFS
    0U,	// STFSU
    0U,	// STFSUX
    0U,	// STFSX
    0U,	// STH
    0U,	// STH8
    0U,	// STHBRX
    0U,	// STHU
    0U,	// STHU8
    0U,	// STHUX
    0U,	// STHUX8
    0U,	// STHX
    0U,	// STHX8
    0U,	// STVEBX
    0U,	// STVEHX
    0U,	// STVEWX
    0U,	// STVX
    0U,	// STVXL
    0U,	// STW
    0U,	// STW8
    0U,	// STWBRX
    0U,	// STWCX
    0U,	// STWU
    0U,	// STWU8
    0U,	// STWUX
    0U,	// STWUX8
    0U,	// STWX
    0U,	// STWX8
    0U,	// SUBF
    0U,	// SUBF8
    0U,	// SUBF8o
    0U,	// SUBFC
    0U,	// SUBFC8
    0U,	// SUBFC8o
    0U,	// SUBFCo
    0U,	// SUBFE
    0U,	// SUBFE8
    0U,	// SUBFE8o
    0U,	// SUBFEo
    0U,	// SUBFIC
    0U,	// SUBFIC8
    0U,	// SUBFME
    0U,	// SUBFME8
    0U,	// SUBFME8o
    0U,	// SUBFMEo
    0U,	// SUBFZE
    0U,	// SUBFZE8
    0U,	// SUBFZE8o
    0U,	// SUBFZEo
    0U,	// SUBFo
    0U,	// SYNC
    0U,	// TAILB
    0U,	// TAILB8
    0U,	// TAILBA
    0U,	// TAILBA8
    0U,	// TAILBCTR
    0U,	// TAILBCTR8
    0U,	// TCRETURNai
    0U,	// TCRETURNai8
    0U,	// TCRETURNdi
    0U,	// TCRETURNdi8
    0U,	// TCRETURNri
    0U,	// TCRETURNri8
    0U,	// TRAP
    0U,	// UPDATE_VRSAVE
    0U,	// VADDCUW
    0U,	// VADDFP
    0U,	// VADDSBS
    0U,	// VADDSHS
    0U,	// VADDSWS
    0U,	// VADDUBM
    0U,	// VADDUBS
    0U,	// VADDUHM
    0U,	// VADDUHS
    0U,	// VADDUWM
    0U,	// VADDUWS
    0U,	// VAND
    0U,	// VANDC
    0U,	// VAVGSB
    0U,	// VAVGSH
    0U,	// VAVGSW
    0U,	// VAVGUB
    0U,	// VAVGUH
    0U,	// VAVGUW
    0U,	// VCFSX
    0U,	// VCFSX_0
    0U,	// VCFUX
    0U,	// VCFUX_0
    0U,	// VCMPBFP
    0U,	// VCMPBFPo
    0U,	// VCMPEQFP
    0U,	// VCMPEQFPo
    0U,	// VCMPEQUB
    0U,	// VCMPEQUBo
    0U,	// VCMPEQUH
    0U,	// VCMPEQUHo
    0U,	// VCMPEQUW
    0U,	// VCMPEQUWo
    0U,	// VCMPGEFP
    0U,	// VCMPGEFPo
    0U,	// VCMPGTFP
    0U,	// VCMPGTFPo
    0U,	// VCMPGTSB
    0U,	// VCMPGTSBo
    0U,	// VCMPGTSH
    0U,	// VCMPGTSHo
    0U,	// VCMPGTSW
    0U,	// VCMPGTSWo
    0U,	// VCMPGTUB
    0U,	// VCMPGTUBo
    0U,	// VCMPGTUH
    0U,	// VCMPGTUHo
    0U,	// VCMPGTUW
    0U,	// VCMPGTUWo
    0U,	// VCTSXS
    0U,	// VCTSXS_0
    0U,	// VCTUXS
    0U,	// VCTUXS_0
    0U,	// VEXPTEFP
    0U,	// VLOGEFP
    1U,	// VMADDFP
    0U,	// VMAXFP
    0U,	// VMAXSB
    0U,	// VMAXSH
    0U,	// VMAXSW
    0U,	// VMAXUB
    0U,	// VMAXUH
    0U,	// VMAXUW
    1U,	// VMHADDSHS
    1U,	// VMHRADDSHS
    0U,	// VMINFP
    0U,	// VMINSB
    0U,	// VMINSH
    0U,	// VMINSW
    0U,	// VMINUB
    0U,	// VMINUH
    0U,	// VMINUW
    1U,	// VMLADDUHM
    0U,	// VMRGHB
    0U,	// VMRGHH
    0U,	// VMRGHW
    0U,	// VMRGLB
    0U,	// VMRGLH
    0U,	// VMRGLW
    1U,	// VMSUMMBM
    1U,	// VMSUMSHM
    1U,	// VMSUMSHS
    1U,	// VMSUMUBM
    1U,	// VMSUMUHM
    1U,	// VMSUMUHS
    0U,	// VMULESB
    0U,	// VMULESH
    0U,	// VMULEUB
    0U,	// VMULEUH
    0U,	// VMULOSB
    0U,	// VMULOSH
    0U,	// VMULOUB
    0U,	// VMULOUH
    1U,	// VNMSUBFP
    0U,	// VNOR
    0U,	// VOR
    1U,	// VPERM
    0U,	// VPKPX
    0U,	// VPKSHSS
    0U,	// VPKSHUS
    0U,	// VPKSWSS
    0U,	// VPKSWUS
    0U,	// VPKUHUM
    0U,	// VPKUHUS
    0U,	// VPKUWUM
    0U,	// VPKUWUS
    0U,	// VREFP
    0U,	// VRFIM
    0U,	// VRFIN
    0U,	// VRFIP
    0U,	// VRFIZ
    0U,	// VRLB
    0U,	// VRLH
    0U,	// VRLW
    0U,	// VRSQRTEFP
    1U,	// VSEL
    0U,	// VSL
    0U,	// VSLB
    13U,	// VSLDOI
    0U,	// VSLH
    0U,	// VSLO
    0U,	// VSLW
    0U,	// VSPLTB
    0U,	// VSPLTH
    0U,	// VSPLTISB
    0U,	// VSPLTISH
    0U,	// VSPLTISW
    0U,	// VSPLTW
    0U,	// VSR
    0U,	// VSRAB
    0U,	// VSRAH
    0U,	// VSRAW
    0U,	// VSRB
    0U,	// VSRH
    0U,	// VSRO
    0U,	// VSRW
    0U,	// VSUBCUW
    0U,	// VSUBFP
    0U,	// VSUBSBS
    0U,	// VSUBSHS
    0U,	// VSUBSWS
    0U,	// VSUBUBM
    0U,	// VSUBUBS
    0U,	// VSUBUHM
    0U,	// VSUBUHS
    0U,	// VSUBUWM
    0U,	// VSUBUWS
    0U,	// VSUM2SWS
    0U,	// VSUM4SBS
    0U,	// VSUM4SHS
    0U,	// VSUM4UBS
    0U,	// VSUMSWS
    0U,	// VUPKHPX
    0U,	// VUPKHSB
    0U,	// VUPKHSH
    0U,	// VUPKLPX
    0U,	// VUPKLSB
    0U,	// VUPKLSH
    0U,	// VXOR
    0U,	// V_SET0
    0U,	// V_SETALLONES
    0U,	// XOR
    0U,	// XOR8
    0U,	// XOR8o
    0U,	// XORI
    0U,	// XORI8
    0U,	// XORIS
    0U,	// XORIS8
    0U,	// XORo
    0U
  };

  const char AsmStrs[] = {
  /* 0 */ '#', 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'u', 'p', 9, 0,
  /* 16 */ 'b', 'c', 'l', 32, '2', '0', ',', 32, '3', '1', ',', 32, 0,
  /* 29 */ 'm', 't', 's', 'p', 'r', 32, '2', '5', '6', ',', 32, 0,
  /* 41 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'b', '.', 32, 0,
  /* 52 */ 'e', 'x', 't', 's', 'b', '.', 32, 0,
  /* 60 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'b', '.', 32, 0,
  /* 71 */ 'f', 's', 'u', 'b', '.', 32, 0,
  /* 78 */ 'f', 'm', 's', 'u', 'b', '.', 32, 0,
  /* 86 */ 'f', 'n', 'm', 's', 'u', 'b', '.', 32, 0,
  /* 95 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'b', '.', 32, 0,
  /* 106 */ 'a', 'd', 'd', 'c', '.', 32, 0,
  /* 113 */ 'a', 'n', 'd', 'c', '.', 32, 0,
  /* 120 */ 's', 'u', 'b', 'f', 'c', '.', 32, 0,
  /* 128 */ 'a', 'd', 'd', 'i', 'c', '.', 32, 0,
  /* 136 */ 'o', 'r', 'c', '.', 32, 0,
  /* 142 */ 's', 'r', 'a', 'd', '.', 32, 0,
  /* 149 */ 'f', 'a', 'd', 'd', '.', 32, 0,
  /* 156 */ 'f', 'm', 'a', 'd', 'd', '.', 32, 0,
  /* 164 */ 'f', 'n', 'm', 'a', 'd', 'd', '.', 32, 0,
  /* 173 */ 'm', 'u', 'l', 'h', 'd', '.', 32, 0,
  /* 181 */ 'f', 'c', 'f', 'i', 'd', '.', 32, 0,
  /* 189 */ 'm', 'u', 'l', 'l', 'd', '.', 32, 0,
  /* 197 */ 's', 'l', 'd', '.', 32, 0,
  /* 203 */ 'n', 'a', 'n', 'd', '.', 32, 0,
  /* 210 */ 's', 'r', 'd', '.', 32, 0,
  /* 216 */ 'p', 'o', 'p', 'c', 'n', 't', 'd', '.', 32, 0,
  /* 226 */ 'd', 'i', 'v', 'd', '.', 32, 0,
  /* 233 */ 'c', 'n', 't', 'l', 'z', 'd', '.', 32, 0,
  /* 242 */ 'a', 'd', 'd', 'e', '.', 32, 0,
  /* 249 */ 's', 'u', 'b', 'f', 'e', '.', 32, 0,
  /* 257 */ 'a', 'd', 'd', 'm', 'e', '.', 32, 0,
  /* 265 */ 's', 'u', 'b', 'f', 'm', 'e', '.', 32, 0,
  /* 274 */ 'f', 'r', 'e', '.', 32, 0,
  /* 280 */ 'f', 'r', 's', 'q', 'r', 't', 'e', '.', 32, 0,
  /* 290 */ 'a', 'd', 'd', 'z', 'e', '.', 32, 0,
  /* 298 */ 's', 'u', 'b', 'f', 'z', 'e', '.', 32, 0,
  /* 307 */ 's', 'u', 'b', 'f', '.', 32, 0,
  /* 314 */ 'f', 'n', 'e', 'g', '.', 32, 0,
  /* 321 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'h', '.', 32, 0,
  /* 332 */ 'e', 'x', 't', 's', 'h', '.', 32, 0,
  /* 340 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'h', '.', 32, 0,
  /* 351 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'h', '.', 32, 0,
  /* 362 */ 's', 'r', 'a', 'd', 'i', '.', 32, 0,
  /* 370 */ 'a', 'n', 'd', 'i', '.', 32, 0,
  /* 377 */ 'r', 'l', 'd', 'i', 'm', 'i', '.', 32, 0,
  /* 386 */ 'r', 'l', 'w', 'i', 'm', 'i', '.', 32, 0,
  /* 395 */ 's', 'r', 'a', 'w', 'i', '.', 32, 0,
  /* 403 */ 'r', 'l', 'd', 'c', 'l', '.', 32, 0,
  /* 411 */ 'r', 'l', 'd', 'i', 'c', 'l', '.', 32, 0,
  /* 420 */ 'f', 's', 'e', 'l', '.', 32, 0,
  /* 427 */ 'f', 'm', 'u', 'l', '.', 32, 0,
  /* 434 */ 'f', 'r', 'i', 'm', '.', 32, 0,
  /* 441 */ 'r', 'l', 'w', 'i', 'n', 'm', '.', 32, 0,
  /* 450 */ 'r', 'l', 'w', 'n', 'm', '.', 32, 0,
  /* 458 */ 'f', 'r', 'i', 'n', '.', 32, 0,
  /* 465 */ 'v', 'c', 'm', 'p', 'b', 'f', 'p', '.', 32, 0,
  /* 475 */ 'v', 'c', 'm', 'p', 'g', 'e', 'f', 'p', '.', 32, 0,
  /* 486 */ 'v', 'c', 'm', 'p', 'e', 'q', 'f', 'p', '.', 32, 0,
  /* 497 */ 'v', 'c', 'm', 'p', 'g', 't', 'f', 'p', '.', 32, 0,
  /* 508 */ 'f', 'r', 'i', 'p', '.', 32, 0,
  /* 515 */ 'f', 'r', 's', 'p', '.', 32, 0,
  /* 522 */ 'r', 'l', 'd', 'i', 'c', 'r', '.', 32, 0,
  /* 531 */ 'f', 'm', 'r', '.', 32, 0,
  /* 537 */ 'n', 'o', 'r', '.', 32, 0,
  /* 543 */ 'x', 'o', 'r', '.', 32, 0,
  /* 549 */ 'f', 'a', 'b', 's', '.', 32, 0,
  /* 556 */ 'f', 'n', 'a', 'b', 's', '.', 32, 0,
  /* 564 */ 'f', 's', 'u', 'b', 's', '.', 32, 0,
  /* 572 */ 'f', 'm', 's', 'u', 'b', 's', '.', 32, 0,
  /* 581 */ 'f', 'n', 'm', 's', 'u', 'b', 's', '.', 32, 0,
  /* 591 */ 'f', 'a', 'd', 'd', 's', '.', 32, 0,
  /* 599 */ 'f', 'm', 'a', 'd', 'd', 's', '.', 32, 0,
  /* 608 */ 'f', 'n', 'm', 'a', 'd', 'd', 's', '.', 32, 0,
  /* 618 */ 'f', 'c', 'f', 'i', 'd', 's', '.', 32, 0,
  /* 627 */ 'f', 'r', 'e', 's', '.', 32, 0,
  /* 634 */ 'f', 'r', 's', 'q', 'r', 't', 'e', 's', '.', 32, 0,
  /* 645 */ 'a', 'n', 'd', 'i', 's', '.', 32, 0,
  /* 653 */ 'f', 'm', 'u', 'l', 's', '.', 32, 0,
  /* 661 */ 'f', 's', 'q', 'r', 't', 's', '.', 32, 0,
  /* 670 */ 'f', 'c', 'f', 'i', 'd', 'u', 's', '.', 32, 0,
  /* 680 */ 'f', 'd', 'i', 'v', 's', '.', 32, 0,
  /* 688 */ 'f', 's', 'q', 'r', 't', '.', 32, 0,
  /* 696 */ 'm', 'u', 'l', 'h', 'd', 'u', '.', 32, 0,
  /* 705 */ 'f', 'c', 'f', 'i', 'd', 'u', '.', 32, 0,
  /* 714 */ 'd', 'i', 'v', 'd', 'u', '.', 32, 0,
  /* 722 */ 'm', 'u', 'l', 'h', 'w', 'u', '.', 32, 0,
  /* 731 */ 'd', 'i', 'v', 'w', 'u', '.', 32, 0,
  /* 739 */ 'f', 'd', 'i', 'v', '.', 32, 0,
  /* 746 */ 'e', 'q', 'v', '.', 32, 0,
  /* 752 */ 's', 'r', 'a', 'w', '.', 32, 0,
  /* 759 */ 'm', 'u', 'l', 'h', 'w', '.', 32, 0,
  /* 767 */ 'm', 'u', 'l', 'l', 'w', '.', 32, 0,
  /* 775 */ 's', 'l', 'w', '.', 32, 0,
  /* 781 */ 's', 'r', 'w', '.', 32, 0,
  /* 787 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'w', '.', 32, 0,
  /* 798 */ 'e', 'x', 't', 's', 'w', '.', 32, 0,
  /* 806 */ 'p', 'o', 'p', 'c', 'n', 't', 'w', '.', 32, 0,
  /* 816 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'w', '.', 32, 0,
  /* 827 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'w', '.', 32, 0,
  /* 838 */ 'd', 'i', 'v', 'w', '.', 32, 0,
  /* 845 */ 'c', 'n', 't', 'l', 'z', 'w', '.', 32, 0,
  /* 854 */ 's', 't', 'd', 'c', 'x', '.', 32, 0,
  /* 862 */ 's', 't', 'w', 'c', 'x', '.', 32, 0,
  /* 870 */ 'f', 'c', 't', 'i', 'd', 'z', '.', 32, 0,
  /* 879 */ 'f', 'r', 'i', 'z', '.', 32, 0,
  /* 886 */ 'f', 'c', 't', 'i', 'd', 'u', 'z', '.', 32, 0,
  /* 896 */ 'f', 'c', 't', 'i', 'w', 'u', 'z', '.', 32, 0,
  /* 906 */ 'f', 'c', 't', 'i', 'w', 'z', '.', 32, 0,
  /* 915 */ 'm', 't', 'f', 's', 'b', '0', 32, 0,
  /* 923 */ 'm', 't', 'f', 's', 'b', '1', 32, 0,
  /* 931 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 32, 0,
  /* 953 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 32, 0,
  /* 975 */ '#', 'T', 'C', '_', 'R', 'E', 'T', 'U', 'R', 'N', 'a', '8', 32, 0,
  /* 989 */ '#', 'T', 'C', '_', 'R', 'E', 'T', 'U', 'R', 'N', 'd', '8', 32, 0,
  /* 1003 */ '#', 'T', 'C', '_', 'R', 'E', 'T', 'U', 'R', 'N', 'r', '8', 32, 0,
  /* 1017 */ 'U', 'P', 'D', 'A', 'T', 'E', '_', 'V', 'R', 'S', 'A', 'V', 'E', 32, 0,
  /* 1032 */ '#', 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 32, 0,
  /* 1051 */ '#', 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 32, 0,
  /* 1068 */ '#', 'T', 'C', '_', 'R', 'E', 'T', 'U', 'R', 'N', 'a', 32, 0,
  /* 1081 */ 'd', 'c', 'b', 'a', 32, 0,
  /* 1087 */ 'l', 'h', 'a', 32, 0,
  /* 1092 */ 'b', 'l', 'a', 32, 0,
  /* 1097 */ 'l', 'w', 'a', 32, 0,
  /* 1102 */ 'v', 's', 'r', 'a', 'b', 32, 0,
  /* 1109 */ 'v', 'm', 'r', 'g', 'h', 'b', 32, 0,
  /* 1117 */ 'v', 'm', 'r', 'g', 'l', 'b', 32, 0,
  /* 1125 */ 'v', 'r', 'l', 'b', 32, 0,
  /* 1131 */ 'v', 's', 'l', 'b', 32, 0,
  /* 1137 */ 'v', 's', 'r', 'b', 32, 0,
  /* 1143 */ 'v', 'm', 'u', 'l', 'e', 's', 'b', 32, 0,
  /* 1152 */ 'v', 'a', 'v', 'g', 's', 'b', 32, 0,
  /* 1160 */ 'v', 'u', 'p', 'k', 'h', 's', 'b', 32, 0,
  /* 1169 */ 'v', 's', 'p', 'l', 't', 'i', 's', 'b', 32, 0,
  /* 1179 */ 'v', 'u', 'p', 'k', 'l', 's', 'b', 32, 0,
  /* 1188 */ 'v', 'm', 'i', 'n', 's', 'b', 32, 0,
  /* 1196 */ 'v', 'm', 'u', 'l', 'o', 's', 'b', 32, 0,
  /* 1205 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'b', 32, 0,
  /* 1215 */ 'e', 'x', 't', 's', 'b', 32, 0,
  /* 1222 */ 'v', 'm', 'a', 'x', 's', 'b', 32, 0,
  /* 1230 */ 'v', 's', 'p', 'l', 't', 'b', 32, 0,
  /* 1238 */ 's', 't', 'b', 32, 0,
  /* 1243 */ 'v', 'm', 'u', 'l', 'e', 'u', 'b', 32, 0,
  /* 1252 */ 'v', 'a', 'v', 'g', 'u', 'b', 32, 0,
  /* 1260 */ 'v', 'm', 'i', 'n', 'u', 'b', 32, 0,
  /* 1268 */ 'v', 'm', 'u', 'l', 'o', 'u', 'b', 32, 0,
  /* 1277 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'b', 32, 0,
  /* 1287 */ 'f', 's', 'u', 'b', 32, 0,
  /* 1293 */ 'f', 'm', 's', 'u', 'b', 32, 0,
  /* 1300 */ 'f', 'n', 'm', 's', 'u', 'b', 32, 0,
  /* 1308 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'b', 32, 0,
  /* 1318 */ 'v', 'm', 'a', 'x', 'u', 'b', 32, 0,
  /* 1326 */ 'a', 'd', 'd', 'c', 32, 0,
  /* 1332 */ 'v', 'a', 'n', 'd', 'c', 32, 0,
  /* 1339 */ 's', 'u', 'b', 'f', 'c', 32, 0,
  /* 1346 */ 'a', 'd', 'd', 'i', 'c', 32, 0,
  /* 1353 */ 's', 'u', 'b', 'f', 'i', 'c', 32, 0,
  /* 1361 */ 'o', 'r', 'c', 32, 0,
  /* 1366 */ 's', 'c', 32, 0,
  /* 1370 */ '#', 'T', 'C', '_', 'R', 'E', 'T', 'U', 'R', 'N', 'd', 32, 0,
  /* 1383 */ 's', 'r', 'a', 'd', 32, 0,
  /* 1389 */ 'f', 'a', 'd', 'd', 32, 0,
  /* 1395 */ 'f', 'm', 'a', 'd', 'd', 32, 0,
  /* 1402 */ 'f', 'n', 'm', 'a', 'd', 'd', 32, 0,
  /* 1410 */ 'l', 'f', 'd', 32, 0,
  /* 1415 */ 's', 't', 'f', 'd', 32, 0,
  /* 1421 */ 'm', 'u', 'l', 'h', 'd', 32, 0,
  /* 1428 */ 'f', 'c', 'f', 'i', 'd', 32, 0,
  /* 1435 */ 'm', 'u', 'l', 'l', 'd', 32, 0,
  /* 1442 */ 'c', 'm', 'p', 'l', 'd', 32, 0,
  /* 1449 */ 's', 'l', 'd', 32, 0,
  /* 1454 */ 'n', 'a', 'n', 'd', 32, 0,
  /* 1460 */ 'v', 'a', 'n', 'd', 32, 0,
  /* 1466 */ 'c', 'm', 'p', 'd', 32, 0,
  /* 1472 */ 's', 'r', 'd', 32, 0,
  /* 1477 */ 'p', 'o', 'p', 'c', 'n', 't', 'd', 32, 0,
  /* 1486 */ 's', 't', 'd', 32, 0,
  /* 1491 */ 'd', 'i', 'v', 'd', 32, 0,
  /* 1497 */ 'c', 'n', 't', 'l', 'z', 'd', 32, 0,
  /* 1505 */ 'a', 'd', 'd', 'e', 32, 0,
  /* 1511 */ 's', 'u', 'b', 'f', 'e', 32, 0,
  /* 1518 */ 'a', 'd', 'd', 'm', 'e', 32, 0,
  /* 1525 */ 's', 'u', 'b', 'f', 'm', 'e', 32, 0,
  /* 1533 */ 'f', 'r', 'e', 32, 0,
  /* 1538 */ 'f', 'r', 's', 'q', 'r', 't', 'e', 32, 0,
  /* 1547 */ 'a', 'd', 'd', 'z', 'e', 32, 0,
  /* 1554 */ 's', 'u', 'b', 'f', 'z', 'e', 32, 0,
  /* 1562 */ 'd', 'c', 'b', 'f', 32, 0,
  /* 1568 */ 's', 'u', 'b', 'f', 32, 0,
  /* 1574 */ 'm', 'c', 'r', 'f', 32, 0,
  /* 1580 */ 'm', 'f', 'o', 'c', 'r', 'f', 32, 0,
  /* 1588 */ 'm', 't', 'c', 'r', 'f', 32, 0,
  /* 1595 */ 'm', 't', 'f', 's', 'f', 32, 0,
  /* 1602 */ 'f', 'n', 'e', 'g', 32, 0,
  /* 1608 */ 'v', 's', 'r', 'a', 'h', 32, 0,
  /* 1615 */ 'v', 'm', 'r', 'g', 'h', 'h', 32, 0,
  /* 1623 */ 'v', 'm', 'r', 'g', 'l', 'h', 32, 0,
  /* 1631 */ 'v', 'r', 'l', 'h', 32, 0,
  /* 1637 */ 'v', 's', 'l', 'h', 32, 0,
  /* 1643 */ 'v', 's', 'r', 'h', 32, 0,
  /* 1649 */ 'v', 'm', 'u', 'l', 'e', 's', 'h', 32, 0,
  /* 1658 */ 'v', 'a', 'v', 'g', 's', 'h', 32, 0,
  /* 1666 */ 'v', 'u', 'p', 'k', 'h', 's', 'h', 32, 0,
  /* 1675 */ 'v', 's', 'p', 'l', 't', 'i', 's', 'h', 32, 0,
  /* 1685 */ 'v', 'u', 'p', 'k', 'l', 's', 'h', 32, 0,
  /* 1694 */ 'v', 'm', 'i', 'n', 's', 'h', 32, 0,
  /* 1702 */ 'v', 'm', 'u', 'l', 'o', 's', 'h', 32, 0,
  /* 1711 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'h', 32, 0,
  /* 1721 */ 'e', 'x', 't', 's', 'h', 32, 0,
  /* 1728 */ 'v', 'm', 'a', 'x', 's', 'h', 32, 0,
  /* 1736 */ 'v', 's', 'p', 'l', 't', 'h', 32, 0,
  /* 1744 */ 's', 't', 'h', 32, 0,
  /* 1749 */ 'v', 'm', 'u', 'l', 'e', 'u', 'h', 32, 0,
  /* 1758 */ 'v', 'a', 'v', 'g', 'u', 'h', 32, 0,
  /* 1766 */ 'v', 'm', 'i', 'n', 'u', 'h', 32, 0,
  /* 1774 */ 'v', 'm', 'u', 'l', 'o', 'u', 'h', 32, 0,
  /* 1783 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'h', 32, 0,
  /* 1793 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'h', 32, 0,
  /* 1803 */ 'v', 'm', 'a', 'x', 'u', 'h', 32, 0,
  /* 1811 */ 'd', 'c', 'b', 'i', 32, 0,
  /* 1817 */ 'i', 'c', 'b', 'i', 32, 0,
  /* 1823 */ 's', 'r', 'a', 'd', 'i', 32, 0,
  /* 1830 */ 'a', 'd', 'd', 'i', 32, 0,
  /* 1836 */ 'c', 'm', 'p', 'l', 'd', 'i', 32, 0,
  /* 1844 */ 's', 'l', 'd', 'i', 32, 0,
  /* 1850 */ 'c', 'm', 'p', 'd', 'i', 32, 0,
  /* 1857 */ 's', 'r', 'd', 'i', 32, 0,
  /* 1863 */ 'm', 'u', 'l', 'l', 'i', 32, 0,
  /* 1870 */ 'r', 'l', 'd', 'i', 'm', 'i', 32, 0,
  /* 1878 */ 'r', 'l', 'w', 'i', 'm', 'i', 32, 0,
  /* 1886 */ 'v', 's', 'l', 'd', 'o', 'i', 32, 0,
  /* 1894 */ 'x', 'o', 'r', 'i', 32, 0,
  /* 1900 */ 's', 'r', 'a', 'w', 'i', 32, 0,
  /* 1907 */ 'c', 'm', 'p', 'l', 'w', 'i', 32, 0,
  /* 1915 */ 's', 'l', 'w', 'i', 32, 0,
  /* 1921 */ 'c', 'm', 'p', 'w', 'i', 32, 0,
  /* 1928 */ 's', 'r', 'w', 'i', 32, 0,
  /* 1934 */ 'b', 'l', 32, 0,
  /* 1938 */ 'r', 'l', 'd', 'c', 'l', 32, 0,
  /* 1945 */ 'r', 'l', 'd', 'i', 'c', 'l', 32, 0,
  /* 1953 */ 'f', 's', 'e', 'l', 32, 0,
  /* 1959 */ 'i', 's', 'e', 'l', 32, 0,
  /* 1965 */ 'v', 's', 'e', 'l', 32, 0,
  /* 1971 */ 'l', 'v', 's', 'l', 32, 0,
  /* 1977 */ 'f', 'm', 'u', 'l', 32, 0,
  /* 1983 */ 'l', 'v', 'x', 'l', 32, 0,
  /* 1989 */ 's', 't', 'v', 'x', 'l', 32, 0,
  /* 1996 */ 'd', 'c', 'b', 'z', 'l', 32, 0,
  /* 2003 */ 'v', 'm', 's', 'u', 'm', 'm', 'b', 'm', 32, 0,
  /* 2013 */ 'v', 's', 'u', 'b', 'u', 'b', 'm', 32, 0,
  /* 2022 */ 'v', 'a', 'd', 'd', 'u', 'b', 'm', 32, 0,
  /* 2031 */ 'v', 'm', 's', 'u', 'm', 'u', 'b', 'm', 32, 0,
  /* 2041 */ 'v', 'm', 's', 'u', 'm', 's', 'h', 'm', 32, 0,
  /* 2051 */ 'v', 's', 'u', 'b', 'u', 'h', 'm', 32, 0,
  /* 2060 */ 'v', 'm', 'l', 'a', 'd', 'd', 'u', 'h', 'm', 32, 0,
  /* 2071 */ 'v', 'a', 'd', 'd', 'u', 'h', 'm', 32, 0,
  /* 2080 */ 'v', 'm', 's', 'u', 'm', 'u', 'h', 'm', 32, 0,
  /* 2090 */ 'v', 'r', 'f', 'i', 'm', 32, 0,
  /* 2097 */ 'f', 'r', 'i', 'm', 32, 0,
  /* 2103 */ 'r', 'l', 'w', 'i', 'n', 'm', 32, 0,
  /* 2111 */ 'r', 'l', 'w', 'n', 'm', 32, 0,
  /* 2118 */ 'v', 'p', 'e', 'r', 'm', 32, 0,
  /* 2125 */ 'v', 'p', 'k', 'u', 'h', 'u', 'm', 32, 0,
  /* 2134 */ 'v', 'p', 'k', 'u', 'w', 'u', 'm', 32, 0,
  /* 2143 */ 'v', 's', 'u', 'b', 'u', 'w', 'm', 32, 0,
  /* 2152 */ 'v', 'a', 'd', 'd', 'u', 'w', 'm', 32, 0,
  /* 2161 */ 'v', 'r', 'f', 'i', 'n', 32, 0,
  /* 2168 */ 'f', 'r', 'i', 'n', 32, 0,
  /* 2174 */ 'v', 's', 'l', 'o', 32, 0,
  /* 2180 */ 'v', 's', 'r', 'o', 32, 0,
  /* 2186 */ 'v', 'c', 'm', 'p', 'b', 'f', 'p', 32, 0,
  /* 2195 */ 'v', 'n', 'm', 's', 'u', 'b', 'f', 'p', 32, 0,
  /* 2205 */ 'v', 's', 'u', 'b', 'f', 'p', 32, 0,
  /* 2213 */ 'v', 'm', 'a', 'd', 'd', 'f', 'p', 32, 0,
  /* 2222 */ 'v', 'a', 'd', 'd', 'f', 'p', 32, 0,
  /* 2230 */ 'v', 'l', 'o', 'g', 'e', 'f', 'p', 32, 0,
  /* 2239 */ 'v', 'c', 'm', 'p', 'g', 'e', 'f', 'p', 32, 0,
  /* 2249 */ 'v', 'r', 'e', 'f', 'p', 32, 0,
  /* 2256 */ 'v', 'e', 'x', 'p', 't', 'e', 'f', 'p', 32, 0,
  /* 2266 */ 'v', 'r', 's', 'q', 'r', 't', 'e', 'f', 'p', 32, 0,
  /* 2277 */ 'v', 'm', 'i', 'n', 'f', 'p', 32, 0,
  /* 2285 */ 'v', 'c', 'm', 'p', 'e', 'q', 'f', 'p', 32, 0,
  /* 2295 */ 'v', 'c', 'm', 'p', 'g', 't', 'f', 'p', 32, 0,
  /* 2305 */ 'v', 'm', 'a', 'x', 'f', 'p', 32, 0,
  /* 2313 */ 'v', 'r', 'f', 'i', 'p', 32, 0,
  /* 2320 */ 'f', 'r', 'i', 'p', 32, 0,
  /* 2326 */ 'f', 'r', 's', 'p', 32, 0,
  /* 2332 */ '#', 'T', 'C', '_', 'R', 'E', 'T', 'U', 'R', 'N', 'r', 32, 0,
  /* 2345 */ 'm', 'f', 'c', 'r', 32, 0,
  /* 2351 */ 'r', 'l', 'd', 'i', 'c', 'r', 32, 0,
  /* 2359 */ 'm', 'f', 'v', 's', 'c', 'r', 32, 0,
  /* 2367 */ 'm', 't', 'v', 's', 'c', 'r', 32, 0,
  /* 2375 */ 'm', 'f', 'l', 'r', 32, 0,
  /* 2381 */ 'm', 't', 'l', 'r', 32, 0,
  /* 2387 */ 'f', 'm', 'r', 32, 0,
  /* 2392 */ 'v', 'n', 'o', 'r', 32, 0,
  /* 2398 */ 'c', 'r', 'o', 'r', 32, 0,
  /* 2404 */ 'v', 'o', 'r', 32, 0,
  /* 2409 */ 'c', 'r', 'x', 'o', 'r', 32, 0,
  /* 2416 */ 'v', 'x', 'o', 'r', 32, 0,
  /* 2422 */ 'm', 'f', 's', 'p', 'r', 32, 0,
  /* 2429 */ 'l', 'v', 's', 'r', 32, 0,
  /* 2435 */ 'm', 'f', 'c', 't', 'r', 32, 0,
  /* 2442 */ 'm', 't', 'c', 't', 'r', 32, 0,
  /* 2449 */ 'f', 'a', 'b', 's', 32, 0,
  /* 2455 */ 'f', 'n', 'a', 'b', 's', 32, 0,
  /* 2462 */ 'v', 's', 'u', 'm', '4', 's', 'b', 's', 32, 0,
  /* 2472 */ 'v', 's', 'u', 'b', 's', 'b', 's', 32, 0,
  /* 2481 */ 'v', 'a', 'd', 'd', 's', 'b', 's', 32, 0,
  /* 2490 */ 'v', 's', 'u', 'm', '4', 'u', 'b', 's', 32, 0,
  /* 2500 */ 'v', 's', 'u', 'b', 'u', 'b', 's', 32, 0,
  /* 2509 */ 'v', 'a', 'd', 'd', 'u', 'b', 's', 32, 0,
  /* 2518 */ 'f', 's', 'u', 'b', 's', 32, 0,
  /* 2525 */ 'f', 'm', 's', 'u', 'b', 's', 32, 0,
  /* 2533 */ 'f', 'n', 'm', 's', 'u', 'b', 's', 32, 0,
  /* 2542 */ 'f', 'a', 'd', 'd', 's', 32, 0,
  /* 2549 */ 'f', 'm', 'a', 'd', 'd', 's', 32, 0,
  /* 2557 */ 'f', 'n', 'm', 'a', 'd', 'd', 's', 32, 0,
  /* 2566 */ 'f', 'c', 'f', 'i', 'd', 's', 32, 0,
  /* 2574 */ 'f', 'r', 'e', 's', 32, 0,
  /* 2580 */ 'f', 'r', 's', 'q', 'r', 't', 'e', 's', 32, 0,
  /* 2590 */ 'm', 'f', 'f', 's', 32, 0,
  /* 2596 */ 'l', 'f', 's', 32, 0,
  /* 2601 */ 's', 't', 'f', 's', 32, 0,
  /* 2607 */ 'v', 's', 'u', 'm', '4', 's', 'h', 's', 32, 0,
  /* 2617 */ 'v', 's', 'u', 'b', 's', 'h', 's', 32, 0,
  /* 2626 */ 'v', 'm', 'h', 'a', 'd', 'd', 's', 'h', 's', 32, 0,
  /* 2637 */ 'v', 'm', 'h', 'r', 'a', 'd', 'd', 's', 'h', 's', 32, 0,
  /* 2649 */ 'v', 'a', 'd', 'd', 's', 'h', 's', 32, 0,
  /* 2658 */ 'v', 'm', 's', 'u', 'm', 's', 'h', 's', 32, 0,
  /* 2668 */ 'v', 's', 'u', 'b', 'u', 'h', 's', 32, 0,
  /* 2677 */ 'v', 'a', 'd', 'd', 'u', 'h', 's', 32, 0,
  /* 2686 */ 'v', 'm', 's', 'u', 'm', 'u', 'h', 's', 32, 0,
  /* 2696 */ 'a', 'd', 'd', 'i', 's', 32, 0,
  /* 2703 */ 'l', 'i', 's', 32, 0,
  /* 2708 */ 'x', 'o', 'r', 'i', 's', 32, 0,
  /* 2715 */ 'f', 'm', 'u', 'l', 's', 32, 0,
  /* 2722 */ 'd', 's', 's', 32, 0,
  /* 2727 */ 'v', 'p', 'k', 's', 'h', 's', 's', 32, 0,
  /* 2736 */ 'v', 'p', 'k', 's', 'w', 's', 's', 32, 0,
  /* 2745 */ 'f', 's', 'q', 'r', 't', 's', 32, 0,
  /* 2753 */ 'f', 'c', 'f', 'i', 'd', 'u', 's', 32, 0,
  /* 2762 */ 'v', 'p', 'k', 's', 'h', 'u', 's', 32, 0,
  /* 2771 */ 'v', 'p', 'k', 'u', 'h', 'u', 's', 32, 0,
  /* 2780 */ 'v', 'p', 'k', 's', 'w', 'u', 's', 32, 0,
  /* 2789 */ 'v', 'p', 'k', 'u', 'w', 'u', 's', 32, 0,
  /* 2798 */ 'f', 'd', 'i', 'v', 's', 32, 0,
  /* 2805 */ 'v', 's', 'u', 'm', '2', 's', 'w', 's', 32, 0,
  /* 2815 */ 'v', 's', 'u', 'b', 's', 'w', 's', 32, 0,
  /* 2824 */ 'v', 'a', 'd', 'd', 's', 'w', 's', 32, 0,
  /* 2833 */ 'v', 's', 'u', 'm', 's', 'w', 's', 32, 0,
  /* 2842 */ 'v', 's', 'u', 'b', 'u', 'w', 's', 32, 0,
  /* 2851 */ 'v', 'a', 'd', 'd', 'u', 'w', 's', 32, 0,
  /* 2860 */ 'v', 'c', 't', 's', 'x', 's', 32, 0,
  /* 2868 */ 'v', 'c', 't', 'u', 'x', 's', 32, 0,
  /* 2876 */ 'd', 'c', 'b', 't', 32, 0,
  /* 2882 */ 'f', 's', 'q', 'r', 't', 32, 0,
  /* 2889 */ 'd', 'c', 'b', 's', 't', 32, 0,
  /* 2896 */ 'd', 's', 't', 32, 0,
  /* 2901 */ 'd', 'c', 'b', 't', 's', 't', 32, 0,
  /* 2909 */ 'd', 's', 't', 's', 't', 32, 0,
  /* 2916 */ 'd', 's', 't', 't', 32, 0,
  /* 2922 */ 'd', 's', 't', 's', 't', 't', 32, 0,
  /* 2930 */ 'l', 'h', 'a', 'u', 32, 0,
  /* 2936 */ 's', 't', 'b', 'u', 32, 0,
  /* 2942 */ 'l', 'f', 'd', 'u', 32, 0,
  /* 2948 */ 's', 't', 'f', 'd', 'u', 32, 0,
  /* 2955 */ 'm', 'u', 'l', 'h', 'd', 'u', 32, 0,
  /* 2963 */ 'f', 'c', 'f', 'i', 'd', 'u', 32, 0,
  /* 2971 */ 'l', 'd', 'u', 32, 0,
  /* 2976 */ 's', 't', 'd', 'u', 32, 0,
  /* 2982 */ 'd', 'i', 'v', 'd', 'u', 32, 0,
  /* 2989 */ 's', 't', 'h', 'u', 32, 0,
  /* 2995 */ 'f', 'c', 'm', 'p', 'u', 32, 0,
  /* 3002 */ 'l', 'f', 's', 'u', 32, 0,
  /* 3008 */ 's', 't', 'f', 's', 'u', 32, 0,
  /* 3015 */ 'm', 'u', 'l', 'h', 'w', 'u', 32, 0,
  /* 3023 */ 's', 't', 'w', 'u', 32, 0,
  /* 3029 */ 'd', 'i', 'v', 'w', 'u', 32, 0,
  /* 3036 */ 'l', 'b', 'z', 'u', 32, 0,
  /* 3042 */ 'l', 'h', 'z', 'u', 32, 0,
  /* 3048 */ 'l', 'w', 'z', 'u', 32, 0,
  /* 3054 */ 'f', 'd', 'i', 'v', 32, 0,
  /* 3060 */ 'c', 'r', 'e', 'q', 'v', 32, 0,
  /* 3067 */ 'v', 's', 'r', 'a', 'w', 32, 0,
  /* 3074 */ 'v', 'm', 'r', 'g', 'h', 'w', 32, 0,
  /* 3082 */ 'm', 'u', 'l', 'h', 'w', 32, 0,
  /* 3089 */ 'v', 'm', 'r', 'g', 'l', 'w', 32, 0,
  /* 3097 */ 'm', 'u', 'l', 'l', 'w', 32, 0,
  /* 3104 */ 'c', 'm', 'p', 'l', 'w', 32, 0,
  /* 3111 */ 'v', 'r', 'l', 'w', 32, 0,
  /* 3117 */ 'v', 's', 'l', 'w', 32, 0,
  /* 3123 */ 'c', 'm', 'p', 'w', 32, 0,
  /* 3129 */ 'v', 's', 'r', 'w', 32, 0,
  /* 3135 */ 'v', 'a', 'v', 'g', 's', 'w', 32, 0,
  /* 3143 */ 'v', 's', 'p', 'l', 't', 'i', 's', 'w', 32, 0,
  /* 3153 */ 'v', 'm', 'i', 'n', 's', 'w', 32, 0,
  /* 3161 */ 'v', 'c', 'm', 'p', 'g', 't', 's', 'w', 32, 0,
  /* 3171 */ 'e', 'x', 't', 's', 'w', 32, 0,
  /* 3178 */ 'v', 'm', 'a', 'x', 's', 'w', 32, 0,
  /* 3186 */ 'v', 's', 'p', 'l', 't', 'w', 32, 0,
  /* 3194 */ 'p', 'o', 'p', 'c', 'n', 't', 'w', 32, 0,
  /* 3203 */ 's', 't', 'w', 32, 0,
  /* 3208 */ 'v', 's', 'u', 'b', 'c', 'u', 'w', 32, 0,
  /* 3217 */ 'v', 'a', 'd', 'd', 'c', 'u', 'w', 32, 0,
  /* 3226 */ 'v', 'a', 'v', 'g', 'u', 'w', 32, 0,
  /* 3234 */ 'v', 'm', 'i', 'n', 'u', 'w', 32, 0,
  /* 3242 */ 'v', 'c', 'm', 'p', 'e', 'q', 'u', 'w', 32, 0,
  /* 3252 */ 'v', 'c', 'm', 'p', 'g', 't', 'u', 'w', 32, 0,
  /* 3262 */ 'v', 'm', 'a', 'x', 'u', 'w', 32, 0,
  /* 3270 */ 'd', 'i', 'v', 'w', 32, 0,
  /* 3276 */ 'c', 'n', 't', 'l', 'z', 'w', 32, 0,
  /* 3284 */ 'l', 'h', 'a', 'x', 32, 0,
  /* 3290 */ 'l', 'f', 'i', 'w', 'a', 'x', 32, 0,
  /* 3298 */ 'l', 'w', 'a', 'x', 32, 0,
  /* 3304 */ 'l', 'v', 'e', 'b', 'x', 32, 0,
  /* 3311 */ 's', 't', 'v', 'e', 'b', 'x', 32, 0,
  /* 3319 */ 's', 't', 'b', 'x', 32, 0,
  /* 3325 */ 'l', 'f', 'd', 'x', 32, 0,
  /* 3331 */ 's', 't', 'f', 'd', 'x', 32, 0,
  /* 3338 */ 'l', 'd', 'x', 32, 0,
  /* 3343 */ 's', 't', 'd', 'x', 32, 0,
  /* 3349 */ 'l', 'v', 'e', 'h', 'x', 32, 0,
  /* 3356 */ 's', 't', 'v', 'e', 'h', 'x', 32, 0,
  /* 3364 */ 's', 't', 'h', 'x', 32, 0,
  /* 3370 */ 'v', 'u', 'p', 'k', 'h', 'p', 'x', 32, 0,
  /* 3379 */ 'v', 'p', 'k', 'p', 'x', 32, 0,
  /* 3386 */ 'v', 'u', 'p', 'k', 'l', 'p', 'x', 32, 0,
  /* 3395 */ 'l', 'd', 'a', 'r', 'x', 32, 0,
  /* 3402 */ 'l', 'w', 'a', 'r', 'x', 32, 0,
  /* 3409 */ 'l', 'd', 'b', 'r', 'x', 32, 0,
  /* 3416 */ 's', 't', 'd', 'b', 'r', 'x', 32, 0,
  /* 3424 */ 'l', 'h', 'b', 'r', 'x', 32, 0,
  /* 3431 */ 's', 't', 'h', 'b', 'r', 'x', 32, 0,
  /* 3439 */ 'l', 'w', 'b', 'r', 'x', 32, 0,
  /* 3446 */ 's', 't', 'w', 'b', 'r', 'x', 32, 0,
  /* 3454 */ 'v', 'c', 'f', 's', 'x', 32, 0,
  /* 3461 */ 'l', 'f', 's', 'x', 32, 0,
  /* 3467 */ 's', 't', 'f', 's', 'x', 32, 0,
  /* 3474 */ 'l', 'h', 'a', 'u', 'x', 32, 0,
  /* 3481 */ 'l', 'w', 'a', 'u', 'x', 32, 0,
  /* 3488 */ 's', 't', 'b', 'u', 'x', 32, 0,
  /* 3495 */ 'l', 'f', 'd', 'u', 'x', 32, 0,
  /* 3502 */ 's', 't', 'f', 'd', 'u', 'x', 32, 0,
  /* 3510 */ 'l', 'd', 'u', 'x', 32, 0,
  /* 3516 */ 's', 't', 'd', 'u', 'x', 32, 0,
  /* 3523 */ 'v', 'c', 'f', 'u', 'x', 32, 0,
  /* 3530 */ 's', 't', 'h', 'u', 'x', 32, 0,
  /* 3537 */ 'l', 'f', 's', 'u', 'x', 32, 0,
  /* 3544 */ 's', 't', 'f', 's', 'u', 'x', 32, 0,
  /* 3552 */ 's', 't', 'w', 'u', 'x', 32, 0,
  /* 3559 */ 'l', 'b', 'z', 'u', 'x', 32, 0,
  /* 3566 */ 'l', 'h', 'z', 'u', 'x', 32, 0,
  /* 3573 */ 'l', 'w', 'z', 'u', 'x', 32, 0,
  /* 3580 */ 'l', 'v', 'x', 32, 0,
  /* 3585 */ 's', 't', 'v', 'x', 32, 0,
  /* 3591 */ 'l', 'v', 'e', 'w', 'x', 32, 0,
  /* 3598 */ 's', 't', 'v', 'e', 'w', 'x', 32, 0,
  /* 3606 */ 's', 't', 'f', 'i', 'w', 'x', 32, 0,
  /* 3614 */ 's', 't', 'w', 'x', 32, 0,
  /* 3620 */ 'l', 'b', 'z', 'x', 32, 0,
  /* 3626 */ 'l', 'h', 'z', 'x', 32, 0,
  /* 3632 */ 'l', 'f', 'i', 'w', 'z', 'x', 32, 0,
  /* 3640 */ 'l', 'w', 'z', 'x', 32, 0,
  /* 3646 */ 'd', 'c', 'b', 'z', 32, 0,
  /* 3652 */ 'l', 'b', 'z', 32, 0,
  /* 3657 */ 'b', 'd', 'z', 32, 0,
  /* 3662 */ 'f', 'c', 't', 'i', 'd', 'z', 32, 0,
  /* 3670 */ 'l', 'h', 'z', 32, 0,
  /* 3675 */ 'v', 'r', 'f', 'i', 'z', 32, 0,
  /* 3682 */ 'f', 'r', 'i', 'z', 32, 0,
  /* 3688 */ 'b', 'd', 'n', 'z', 32, 0,
  /* 3694 */ 'f', 'c', 't', 'i', 'd', 'u', 'z', 32, 0,
  /* 3703 */ 'f', 'c', 't', 'i', 'w', 'u', 'z', 32, 0,
  /* 3712 */ 'f', 'c', 't', 'i', 'w', 'z', 32, 0,
  /* 3720 */ 'l', 'w', 'z', 32, 0,
  /* 3725 */ 'l', 'd', 32, '2', ',', 32, '8', '(', 0,
  /* 3734 */ 'l', 'd', 32, '2', ',', 32, '4', '0', '(', '1', ')', 0,
  /* 3746 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '3', '2', 0,
  /* 3767 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '3', '2', 0,
  /* 3788 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 3810 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 3831 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 0,
  /* 3848 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 3869 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 3889 */ '#', 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'L', 'O', 'N', 'G', 'J', 'M', 'P', '3', '2', 0,
  /* 3908 */ '#', 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'S', 'E', 'T', 'J', 'M', 'P', '3', '2', 0,
  /* 3926 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '6', '4', 0,
  /* 3947 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '6', '4', 0,
  /* 3968 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 3990 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 4007 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 4028 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 4049 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 4069 */ '#', 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'L', 'O', 'N', 'G', 'J', 'M', 'P', '6', '4', 0,
  /* 4088 */ '#', 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'S', 'E', 'T', 'J', 'M', 'P', '6', '4', 0,
  /* 4106 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'i', '6', '4', 0,
  /* 4127 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', '4', 0,
  /* 4141 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', '4', 0,
  /* 4155 */ 'c', 'r', 'x', 'o', 'r', 32, '6', ',', 32, '6', ',', 32, '6', 0,
  /* 4169 */ 'c', 'r', 'e', 'q', 'v', 32, '6', ',', 32, '6', ',', 32, '6', 0,
  /* 4183 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '1', '6', 0,
  /* 4204 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '1', '6', 0,
  /* 4225 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 4247 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 4268 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 0,
  /* 4285 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 4306 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 4326 */ '#', 'D', 'Y', 'N', 'A', 'L', 'L', 'O', 'C', '8', 0,
  /* 4337 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', '8', 0,
  /* 4351 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '8', 0,
  /* 4371 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', '8', 0,
  /* 4385 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '8', 0,
  /* 4405 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 4426 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 4446 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', 0,
  /* 4466 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '8', 0,
  /* 4485 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '8', 0,
  /* 4504 */ '#', 'M', 'o', 'v', 'e', 'P', 'C', 't', 'o', 'L', 'R', '8', 0,
  /* 4517 */ '#', 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'i', '8', 0,
  /* 4533 */ '#', 'A', 'D', 'D', 'I', 'S', 't', 'o', 'c', 'H', 'A', 0,
  /* 4545 */ '#', 'A', 'D', 'D', 'I', 'S', 't', 'l', 's', 'g', 'd', 'H', 'A', 0,
  /* 4559 */ '#', 'A', 'D', 'D', 'I', 'S', 't', 'l', 's', 'l', 'd', 'H', 'A', 0,
  /* 4573 */ '#', 'A', 'D', 'D', 'I', 'S', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'H', 'A', 0,
  /* 4590 */ '#', 'A', 'D', 'D', 'I', 'S', 'd', 't', 'p', 'r', 'e', 'l', 'H', 'A', 0,
  /* 4605 */ '#', 'D', 'Y', 'N', 'A', 'L', 'L', 'O', 'C', 0,
  /* 4615 */ '#', 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'R', 'R', 'C', 0,
  /* 4631 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 4644 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 4651 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 4661 */ '#', 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 4677 */ '#', 'S', 'P', 'I', 'L', 'L', '_', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 4691 */ '#', 'L', 'D', 't', 'o', 'c', 'J', 'T', 'I', 0,
  /* 4701 */ '#', 'L', 'D', 't', 'o', 'c', 'L', 0,
  /* 4709 */ '#', 'A', 'D', 'D', 'I', 't', 'o', 'c', 'L', 0,
  /* 4719 */ '#', 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 0,
  /* 4731 */ '#', 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 0,
  /* 4743 */ '#', 'L', 'D', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'L', 0,
  /* 4756 */ '#', 'A', 'D', 'D', 'I', 'd', 't', 'p', 'r', 'e', 'l', 'L', 0,
  /* 4769 */ '#', 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'C', 'R', 0,
  /* 4781 */ '#', 'S', 'P', 'I', 'L', 'L', '_', 'C', 'R', 0,
  /* 4791 */ '#', 'G', 'E', 'T', 't', 'l', 's', 'l', 'd', 'A', 'D', 'D', 'R', 0,
  /* 4805 */ '#', 'G', 'E', 'T', 't', 'l', 's', 'A', 'D', 'D', 'R', 0,
  /* 4817 */ '#', 'M', 'o', 'v', 'e', 'P', 'C', 't', 'o', 'L', 'R', 0,
  /* 4829 */ '#', 'L', 'D', 't', 'o', 'c', 'C', 'P', 'T', 0,
  /* 4839 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 4854 */ 'b', 0,
  /* 4856 */ 'i', 's', 'y', 'n', 'c', 0,
  /* 4862 */ '#', 'L', 'D', 't', 'o', 'c', 0,
  /* 4869 */ '#', 'M', 'F', 'C', 'R', '8', 'p', 's', 'e', 'u', 'd', 0,
  /* 4881 */ '#', 'M', 'F', 'C', 'R', 'p', 's', 'e', 'u', 'd', 0,
  /* 4892 */ 'd', 's', 's', 'a', 'l', 'l', 0,
  /* 4899 */ 'b', 'c', 't', 'r', 'l', 0,
  /* 4905 */ 't', 'r', 'a', 'p', 0,
  /* 4910 */ 'n', 'o', 'p', 0,
  /* 4914 */ 'b', 'l', 'r', 0,
  /* 4918 */ 'b', 'd', 'z', 'l', 'r', 0,
  /* 4924 */ 'b', 'd', 'n', 'z', 'l', 'r', 0,
  /* 4931 */ 'b', 'c', 't', 'r', 0,
  /* 4936 */ '#', 'F', 'R', 'I', 'N', 'D', 'r', 'i', 'n', 't', 0,
  /* 4947 */ '#', 'F', 'R', 'I', 'N', 'S', 'r', 'i', 'n', 't', 0,
  };

  O << "\t";

  // Emit the opcode for the instruction.
  uint64_t Bits1 = OpInfo[MI->getOpcode()];
  uint64_t Bits2 = OpInfo2[MI->getOpcode()];
  uint64_t Bits = (Bits2 << 32) | Bits1;
  assert(Bits != 0 && "Cannot print this instruction.");
  O << AsmStrs+(Bits & 8191)-1;


  // Fragment 0 encoded into 4 bits for 12 unique commands.
  switch ((Bits >> 13) & 15) {
  default:   // unreachable.
  case 0:
    // DBG_VALUE, BUNDLE, LIFETIME_START, LIFETIME_END, ADDISdtprelHA, ADDISg...
    return;
    break;
  case 1:
    // ADD4, ADD4o, ADD8, ADD8TLS, ADD8o, ADDC, ADDC8, ADDC8o, ADDCo, ADDE, A...
    printOperand(MI, 0, O); 
    break;
  case 2:
    // ADJCALLSTACKDOWN, ADJCALLSTACKUP
    printU16ImmOperand(MI, 0, O); 
    break;
  case 3:
    // B, BCLalways, BDNZ, BDNZ8, BDZ, BDZ8, EH_SjLj_Setup
    printBranchOperand(MI, 0, O); 
    return;
    break;
  case 4:
    // BCC, BCCTR, BCCTR8, BCCTRL, BCCTRL8, BCLR
    printPredicateOperand(MI, 0, O, "cc"); 
    break;
  case 5:
    // BLA, BLA8, BLA8_NOP, TAILBA, TAILBA8, TCRETURNai, TCRETURNai8
    printAbsAddrOperand(MI, 0, O); 
    break;
  case 6:
    // DCBA, DCBF, DCBI, DCBST, DCBT, DCBTST, DCBZ, DCBZL, ICBI
    printMemRegReg(MI, 0, O); 
    return;
    break;
  case 7:
    // DSS
    printU5ImmOperand(MI, 1, O); 
    return;
    break;
  case 8:
    // DST, DST64, DSTST, DSTST64, DSTSTT, DSTSTT64, DSTT, DSTT64
    printOperand(MI, 2, O); 
    O << ", "; 
    printOperand(MI, 3, O); 
    O << ", "; 
    printU5ImmOperand(MI, 1, O); 
    return;
    break;
  case 9:
    // MTCRF, MTCRF8
    printcrbitm(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 1, O); 
    return;
    break;
  case 10:
    // MTFSB0, MTFSB1
    printU5ImmOperand(MI, 0, O); 
    return;
    break;
  case 11:
    // MTVRSAVEv, STBU, STBU8, STBUX, STBUX8, STDU, STDUX, STFDU, STFDUX, STF...
    printOperand(MI, 1, O); 
    break;
  }


  // Fragment 1 encoded into 4 bits for 12 unique commands.
  switch ((Bits >> 17) & 15) {
  default:   // unreachable.
  case 0:
    // ADD4, ADD4o, ADD8, ADD8TLS, ADD8o, ADDC, ADDC8, ADDC8o, ADDCo, ADDE, A...
    O << ", "; 
    break;
  case 1:
    // ADJCALLSTACKDOWN, BL, BL8, BLA, BLA8, MFCR, MFCR8, MFCTR, MFCTR8, MFFS...
    return;
    break;
  case 2:
    // ADJCALLSTACKUP, ATOMIC_CMP_SWAP_I16, ATOMIC_CMP_SWAP_I32, BCC, TCRETUR...
    O << ' '; 
    break;
  case 3:
    // BCCTR, BCCTR8
    O << "ctr "; 
    printPredicateOperand(MI, 0, O, "reg"); 
    return;
    break;
  case 4:
    // BCCTRL, BCCTRL8
    O << "ctrl "; 
    printPredicateOperand(MI, 0, O, "reg"); 
    return;
    break;
  case 5:
    // BCLR
    O << "lr "; 
    printPredicateOperand(MI, 0, O, "reg"); 
    return;
    break;
  case 6:
    // BL8_NOP, BLA8_NOP
    O << "\n\tnop"; 
    return;
    break;
  case 7:
    // BL8_NOP_TLSGD, BL8_NOP_TLSLD
    O << '('; 
    printOperand(MI, 1, O); 
    O << ")\n\tnop"; 
    return;
    break;
  case 8:
    // LDinto_toc
    O << ')'; 
    return;
    break;
  case 9:
    // MFTB8
    O << ", 268"; 
    return;
    break;
  case 10:
    // MFVRSAVE, MFVRSAVEv
    O << ", 256"; 
    return;
    break;
  case 11:
    // V_SETALLONES
    O << ", -1"; 
    return;
    break;
  }


  // Fragment 2 encoded into 4 bits for 13 unique commands.
  switch ((Bits >> 21) & 15) {
  default:   // unreachable.
  case 0:
    // ADD4, ADD4o, ADD8, ADD8TLS, ADD8o, ADDC, ADDC8, ADDC8o, ADDCo, ADDE, A...
    printOperand(MI, 1, O); 
    break;
  case 1:
    // ADJCALLSTACKUP
    printU16ImmOperand(MI, 1, O); 
    return;
    break;
  case 2:
    // ATOMIC_CMP_SWAP_I16, ATOMIC_CMP_SWAP_I32, LBZX, LBZX8, LDARX, LDBRX, L...
    printMemRegReg(MI, 1, O); 
    break;
  case 3:
    // BCC
    printPredicateOperand(MI, 0, O, "reg"); 
    O << ", "; 
    printBranchOperand(MI, 2, O); 
    return;
    break;
  case 4:
    // CRSET, CRUNSET, V_SET0
    printOperand(MI, 0, O); 
    O << ", "; 
    printOperand(MI, 0, O); 
    return;
    break;
  case 5:
    // LA
    printS16ImmOperand(MI, 2, O); 
    O << '('; 
    printOperand(MI, 1, O); 
    O << ')'; 
    return;
    break;
  case 6:
    // LBZ, LBZ8, LD, LFD, LFS, LHA, LHA8, LHZ, LHZ8, LWA, LWZ, LWZ8, STB, ST...
    printMemRegImm(MI, 1, O); 
    return;
    break;
  case 7:
    // LBZU, LBZU8, LDU, LFDU, LFSU, LHAU, LHAU8, LHZU, LHZU8, LWZU, LWZU8, S...
    printMemRegImm(MI, 2, O); 
    return;
    break;
  case 8:
    // LBZUX, LBZUX8, LDUX, LFDUX, LFSUX, LHAUX, LHAUX8, LHZUX, LHZUX8, LWAUX...
    printMemRegReg(MI, 2, O); 
    return;
    break;
  case 9:
    // LI, LI8, LIS, LIS8
    printS16ImmOperand(MI, 1, O); 
    return;
    break;
  case 10:
    // MFOCRF
    printcrbitm(MI, 1, O); 
    return;
    break;
  case 11:
    // RLDIMI, RLDIMIo, RLWIMI, RLWIMIo, VCFSX, VCFUX, VCTSXS, VCTUXS, VSPLTB...
    printOperand(MI, 2, O); 
    O << ", "; 
    break;
  case 12:
    // VSPLTISB, VSPLTISH, VSPLTISW
    printS5ImmOperand(MI, 1, O); 
    return;
    break;
  }


  // Fragment 3 encoded into 3 bits for 7 unique commands.
  switch ((Bits >> 25) & 7) {
  default:   // unreachable.
  case 0:
    // ADD4, ADD4o, ADD8, ADD8TLS, ADD8o, ADDC, ADDC8, ADDC8o, ADDCo, ADDE, A...
    O << ", "; 
    break;
  case 1:
    // ADDME, ADDME8, ADDME8o, ADDMEo, ADDZE, ADDZE8, ADDZE8o, ADDZEo, CNTLZD...
    return;
    break;
  case 2:
    // ATOMIC_CMP_SWAP_I16, ATOMIC_CMP_SWAP_I32
    O << ' '; 
    printOperand(MI, 3, O); 
    O << ' '; 
    printOperand(MI, 4, O); 
    return;
    break;
  case 3:
    // RLDIMI, RLDIMIo
    printU6ImmOperand(MI, 3, O); 
    O << ", "; 
    printU6ImmOperand(MI, 4, O); 
    return;
    break;
  case 4:
    // RLWIMI, RLWIMIo
    printU5ImmOperand(MI, 3, O); 
    O << ", "; 
    printU5ImmOperand(MI, 4, O); 
    O << ", "; 
    printU5ImmOperand(MI, 5, O); 
    return;
    break;
  case 5:
    // VCFSX, VCFUX, VCTSXS, VCTUXS, VSPLTB, VSPLTH, VSPLTW
    printU5ImmOperand(MI, 1, O); 
    return;
    break;
  case 6:
    // VCFSX_0, VCFUX_0, VCTSXS_0, VCTUXS_0
    O << ", 0"; 
    return;
    break;
  }


  // Fragment 4 encoded into 3 bits for 5 unique commands.
  switch ((Bits >> 28) & 7) {
  default:   // unreachable.
  case 0:
    // ADD4, ADD4o, ADD8, ADD8TLS, ADD8o, ADDC, ADDC8, ADDC8o, ADDCo, ADDE, A...
    printOperand(MI, 2, O); 
    break;
  case 1:
    // ADDI, ADDI8, ADDIC, ADDIC8, ADDICo, ADDIS, ADDIS8, CMPDI, CMPWI, MULLI...
    printS16ImmOperand(MI, 2, O); 
    return;
    break;
  case 2:
    // ANDISo, ANDISo8, ANDIo, ANDIo8, CMPLDI, CMPLWI, ORI, ORI8, ORIS, ORIS8...
    printU16ImmOperand(MI, 2, O); 
    return;
    break;
  case 3:
    // RLDICL, RLDICLo, RLDICR, RLDICRo, SLDI, SRADI, SRADIo, SRDI
    printU6ImmOperand(MI, 2, O); 
    break;
  case 4:
    // RLWINM, RLWINM8, RLWINM8o, RLWINMo, SLWI, SRAWI, SRAWIo, SRWI
    printU5ImmOperand(MI, 2, O); 
    break;
  }


  // Fragment 5 encoded into 2 bits for 3 unique commands.
  switch ((Bits >> 31) & 3) {
  default:   // unreachable.
  case 0:
    // ADD4, ADD4o, ADD8, ADD8o, ADDC, ADDC8, ADDC8o, ADDCo, ADDE, ADDE8, ADD...
    return;
    break;
  case 1:
    // ADD8TLS
    O << "@tls"; 
    return;
    break;
  case 2:
    // FMADD, FMADDS, FMADDSo, FMADDo, FMSUB, FMSUBS, FMSUBSo, FMSUBo, FNMADD...
    O << ", "; 
    break;
  }


  // Fragment 6 encoded into 2 bits for 3 unique commands.
  switch ((Bits >> 33) & 3) {
  default:   // unreachable.
  case 0:
    // FMADD, FMADDS, FMADDSo, FMADDo, FMSUB, FMSUBS, FMSUBSo, FMSUBo, FNMADD...
    printOperand(MI, 3, O); 
    return;
    break;
  case 1:
    // RLDCL, RLDCLo, RLDICL, RLDICLo, RLDICR, RLDICRo
    printU6ImmOperand(MI, 3, O); 
    return;
    break;
  case 2:
    // RLWINM, RLWINM8, RLWINM8o, RLWINMo, RLWNM, RLWNMo, VSLDOI
    printU5ImmOperand(MI, 3, O); 
    break;
  }


  // Fragment 7 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 35) & 1) {
    // VSLDOI
    return;
  } else {
    // RLWINM, RLWINM8, RLWINM8o, RLWINMo, RLWNM, RLWNMo
    O << ", "; 
    printU5ImmOperand(MI, 4, O); 
    return;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *PPCInstPrinter::getRegisterName(unsigned RegNo) {
  assert(RegNo && RegNo < 180 && "Invalid register number!");

  static const char AsmStrs[] = {
  /* 0 */ '*', '*', 'R', 'O', 'U', 'N', 'D', 'I', 'N', 'G', 32, 'M', 'O', 'D', 'E', '*', '*', 0,
  /* 18 */ '*', '*', 'F', 'R', 'A', 'M', 'E', 32, 'P', 'O', 'I', 'N', 'T', 'E', 'R', '*', '*', 0,
  /* 36 */ 'f', '1', '0', 0,
  /* 40 */ 'r', '1', '0', 0,
  /* 44 */ 'v', '1', '0', 0,
  /* 48 */ 'f', '2', '0', 0,
  /* 52 */ 'r', '2', '0', 0,
  /* 56 */ 'v', '2', '0', 0,
  /* 60 */ 'f', '3', '0', 0,
  /* 64 */ 'r', '3', '0', 0,
  /* 68 */ 'v', '3', '0', 0,
  /* 72 */ 'f', '0', 0,
  /* 75 */ 'c', 'r', '0', 0,
  /* 79 */ 'v', '0', 0,
  /* 82 */ 'f', '1', '1', 0,
  /* 86 */ 'r', '1', '1', 0,
  /* 90 */ 'v', '1', '1', 0,
  /* 94 */ 'f', '2', '1', 0,
  /* 98 */ 'r', '2', '1', 0,
  /* 102 */ 'v', '2', '1', 0,
  /* 106 */ 'f', '3', '1', 0,
  /* 110 */ 'r', '3', '1', 0,
  /* 114 */ 'v', '3', '1', 0,
  /* 118 */ 'f', '1', 0,
  /* 121 */ 'c', 'r', '1', 0,
  /* 125 */ 'v', '1', 0,
  /* 128 */ 'f', '1', '2', 0,
  /* 132 */ 'r', '1', '2', 0,
  /* 136 */ 'v', '1', '2', 0,
  /* 140 */ 'f', '2', '2', 0,
  /* 144 */ 'r', '2', '2', 0,
  /* 148 */ 'v', '2', '2', 0,
  /* 152 */ 'f', '2', 0,
  /* 155 */ 'c', 'r', '2', 0,
  /* 159 */ 'v', '2', 0,
  /* 162 */ 'f', '1', '3', 0,
  /* 166 */ 'r', '1', '3', 0,
  /* 170 */ 'v', '1', '3', 0,
  /* 174 */ 'f', '2', '3', 0,
  /* 178 */ 'r', '2', '3', 0,
  /* 182 */ 'v', '2', '3', 0,
  /* 186 */ 'f', '3', 0,
  /* 189 */ 'c', 'r', '3', 0,
  /* 193 */ 'v', '3', 0,
  /* 196 */ 'f', '1', '4', 0,
  /* 200 */ 'r', '1', '4', 0,
  /* 204 */ 'v', '1', '4', 0,
  /* 208 */ 'f', '2', '4', 0,
  /* 212 */ 'r', '2', '4', 0,
  /* 216 */ 'v', '2', '4', 0,
  /* 220 */ 'f', '4', 0,
  /* 223 */ 'c', 'r', '4', 0,
  /* 227 */ 'v', '4', 0,
  /* 230 */ 'f', '1', '5', 0,
  /* 234 */ 'r', '1', '5', 0,
  /* 238 */ 'v', '1', '5', 0,
  /* 242 */ 'f', '2', '5', 0,
  /* 246 */ 'r', '2', '5', 0,
  /* 250 */ 'v', '2', '5', 0,
  /* 254 */ 'f', '5', 0,
  /* 257 */ 'c', 'r', '5', 0,
  /* 261 */ 'v', '5', 0,
  /* 264 */ 'f', '1', '6', 0,
  /* 268 */ 'r', '1', '6', 0,
  /* 272 */ 'v', '1', '6', 0,
  /* 276 */ 'f', '2', '6', 0,
  /* 280 */ 'r', '2', '6', 0,
  /* 284 */ 'v', '2', '6', 0,
  /* 288 */ 'f', '6', 0,
  /* 291 */ 'c', 'r', '6', 0,
  /* 295 */ 'v', '6', 0,
  /* 298 */ 'f', '1', '7', 0,
  /* 302 */ 'r', '1', '7', 0,
  /* 306 */ 'v', '1', '7', 0,
  /* 310 */ 'f', '2', '7', 0,
  /* 314 */ 'r', '2', '7', 0,
  /* 318 */ 'v', '2', '7', 0,
  /* 322 */ 'f', '7', 0,
  /* 325 */ 'c', 'r', '7', 0,
  /* 329 */ 'v', '7', 0,
  /* 332 */ 'f', '1', '8', 0,
  /* 336 */ 'r', '1', '8', 0,
  /* 340 */ 'v', '1', '8', 0,
  /* 344 */ 'f', '2', '8', 0,
  /* 348 */ 'r', '2', '8', 0,
  /* 352 */ 'v', '2', '8', 0,
  /* 356 */ 'f', '8', 0,
  /* 359 */ 'r', '8', 0,
  /* 362 */ 'v', '8', 0,
  /* 365 */ 'f', '1', '9', 0,
  /* 369 */ 'r', '1', '9', 0,
  /* 373 */ 'v', '1', '9', 0,
  /* 377 */ 'f', '2', '9', 0,
  /* 381 */ 'r', '2', '9', 0,
  /* 385 */ 'v', '2', '9', 0,
  /* 389 */ 'f', '9', 0,
  /* 392 */ 'r', '9', 0,
  /* 395 */ 'v', '9', 0,
  /* 398 */ 'c', 'a', 0,
  /* 401 */ 'V', 'R', 's', 'a', 'v', 'e', 0,
  /* 408 */ 'l', 'r', 0,
  /* 411 */ 'c', 't', 'r', 0,
  };

  static const uint32_t RegAsmOffset[] = {
    398, 75, 130, 84, 38, 164, 121, 266, 232, 198, 300, 155, 37, 367, 
    334, 83, 189, 197, 163, 129, 231, 223, 333, 299, 265, 366, 257, 141, 
    95, 49, 175, 291, 277, 243, 209, 311, 325, 61, 378, 345, 107, 411, 
    411, 72, 118, 152, 186, 220, 254, 288, 322, 356, 389, 36, 82, 128, 
    162, 196, 230, 264, 298, 332, 365, 48, 94, 140, 174, 208, 242, 276, 
    310, 344, 377, 60, 106, 18, 18, 408, 408, 76, 122, 156, 190, 224, 
    258, 292, 326, 359, 392, 40, 86, 132, 166, 200, 234, 268, 302, 336, 
    369, 52, 98, 144, 178, 212, 246, 280, 314, 348, 381, 64, 110, 0, 
    79, 125, 159, 193, 227, 261, 295, 329, 362, 395, 44, 90, 136, 170, 
    204, 238, 272, 306, 340, 373, 56, 102, 148, 182, 216, 250, 284, 318, 
    352, 385, 68, 114, 401, 76, 122, 156, 190, 224, 258, 292, 326, 359, 
    392, 40, 86, 132, 166, 200, 234, 268, 302, 336, 369, 52, 98, 144, 
    178, 212, 246, 280, 314, 348, 381, 64, 110, 38, 38, 
  };

  assert (*(AsmStrs+RegAsmOffset[RegNo-1]) &&
          "Invalid alt name index for register!");
  return AsmStrs+RegAsmOffset[RegNo-1];
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

bool PPCInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
  return false;
}

#endif // PRINT_ALIAS_INSTR
